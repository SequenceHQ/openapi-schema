{
  "openapi": "3.0.3",
  "info": {
    "title": "Sequence API",
    "version": "0.1.0",
    "description": "Sequence API"
  },
  "servers": [
    {
      "url": "https://sandbox.sequencehq.com/api",
      "description": "Sequence API"
    }
  ],
  "paths": {
    "/tax-rates": {
      "get": {
        "tags": [],
        "summary": "List all Tax Rates",
        "description": "List all Tax Rates",
        "operationId": "getTaxRates",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxRateEndpointProductListTaxRatePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                        "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                        "name": "UK Sales Tax",
                        "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                        "version": 0,
                        "isPublished": false,
                        "invoiceName": "Value Added Tax",
                        "invoiceShortName": "VAT",
                        "description": "Value Added Tax applied to sales in the UK",
                        "amount": "0.2",
                        "country": "GB",
                        "region": "London",
                        "subRates": [],
                        "isArchived": false
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListTaxRateEndpointProductListTaxRatePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                          "name": "UK Sales Tax",
                          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                          "version": 0,
                          "isPublished": false,
                          "invoiceName": "Value Added Tax",
                          "invoiceShortName": "VAT",
                          "description": "Value Added Tax applied to sales in the UK",
                          "amount": "0.2",
                          "country": "GB",
                          "region": "London",
                          "subRates": [],
                          "isArchived": false
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new TaxRate",
        "description": "Create a new TaxRate",
        "operationId": "postTaxRates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxRateEndpointCreateTaxRateRequestModel",
                "example": {
                  "isPublished": false,
                  "name": "UK Sales Tax",
                  "invoiceName": "Value Added Tax",
                  "invoiceShortName": "VAT",
                  "description": "Value Added Tax applied to sales in the UK",
                  "amount": "0.2",
                  "country": "GB",
                  "region": "London",
                  "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                  "subRates": []
                }
              },
              "examples": {
                "CreateTaxRateEndpointCreateTaxRateRequestModel": {
                  "summary": "",
                  "value": {
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaxRateEndpointProductCreateTaxRateResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "CreateTaxRateEndpointProductCreateTaxRateResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "name": "UK Sales Tax",
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-rates/{id}/versions": {
      "get": {
        "tags": [],
        "summary": "List all versions of Tax Rate",
        "description": "List all versions of Tax Rate",
        "operationId": "getTaxRatesByIdVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxRateVersionsEndpointProductList_versionsTaxRatePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                        "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                        "name": "UK Sales Tax",
                        "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                        "version": 0,
                        "isPublished": false,
                        "invoiceName": "Value Added Tax",
                        "invoiceShortName": "VAT",
                        "description": "Value Added Tax applied to sales in the UK",
                        "amount": "0.2",
                        "country": "GB",
                        "region": "London",
                        "subRates": [],
                        "isArchived": false
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListTaxRateVersionsEndpointProductList_versionsTaxRatePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                          "name": "UK Sales Tax",
                          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                          "version": 0,
                          "isPublished": false,
                          "invoiceName": "Value Added Tax",
                          "invoiceShortName": "VAT",
                          "description": "Value Added Tax applied to sales in the UK",
                          "amount": "0.2",
                          "country": "GB",
                          "region": "London",
                          "subRates": [],
                          "isArchived": false
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new version of TaxRate",
        "description": "Create a new version of TaxRate",
        "operationId": "postTaxRatesByIdVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxRateVersionEndpointCreateTaxRateVersionRequestModel",
                "example": {
                  "isPublished": false,
                  "name": "UK Sales Tax",
                  "invoiceName": "Value Added Tax",
                  "invoiceShortName": "VAT",
                  "description": "Value Added Tax applied to sales in the UK",
                  "amount": "0.2",
                  "country": "GB",
                  "region": "London",
                  "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                  "subRates": []
                }
              },
              "examples": {
                "CreateTaxRateVersionEndpointCreateTaxRateVersionRequestModel": {
                  "summary": "",
                  "value": {
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaxRateVersionEndpointProductCreateTaxRateVersionResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "CreateTaxRateVersionEndpointProductCreateTaxRateVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "name": "UK Sales Tax",
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-rates/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Tax Rate by ID",
        "description": "Get a Tax Rate by ID",
        "operationId": "getTaxRatesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax Rate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxRateEndpointProductGetTaxRateResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "name": "UK Sales Tax",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "GetTaxRateEndpointProductGetTaxRateResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "name": "UK Sales Tax",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a TaxRate",
        "description": "Update a TaxRate",
        "operationId": "putTaxRatesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaxRateEndpointUpdateTaxRateRequestModel",
                "example": {
                  "id": "0373904e-0f24-4c19-bb0d-9b855f1ec3ca",
                  "isPublished": false,
                  "name": "UK Sales Tax",
                  "invoiceName": "Value Added Tax",
                  "invoiceShortName": "VAT",
                  "description": "Value Added Tax applied to sales in the UK",
                  "amount": "0.2",
                  "country": "GB",
                  "region": "London",
                  "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                  "subRates": []
                }
              },
              "examples": {
                "UpdateTaxRateEndpointUpdateTaxRateRequestModel": {
                  "summary": "",
                  "value": {
                    "id": "0373904e-0f24-4c19-bb0d-9b855f1ec3ca",
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaxRateEndpointProductUpdateTaxRateResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "UpdateTaxRateEndpointProductUpdateTaxRateResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "name": "UK Sales Tax",
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Tax Rate",
        "description": "Delete a Tax Rate",
        "operationId": "deleteTaxRatesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax Rate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaxRateEndpointProductDeleteTaxRateResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "name": "UK Sales Tax",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "DeleteTaxRateEndpointProductDeleteTaxRateResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "name": "UK Sales Tax",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-rates/{id}/versions/{version}": {
      "get": {
        "tags": [],
        "summary": "Get a version of Tax Rate by ID and version number",
        "description": "Get a version of Tax Rate by ID and version number",
        "operationId": "getTaxRatesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxRate version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxRateVersionEndpointProductGetTaxRateVersionResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "name": "UK Sales Tax",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "GetTaxRateVersionEndpointProductGetTaxRateVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "name": "UK Sales Tax",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a TaxRate version",
        "description": "Update a TaxRate version",
        "operationId": "putTaxRatesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxRate version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaxRateVersionEndpointUpdateTaxRateVersionRequestModel",
                "example": {
                  "id": "d2aea732-19f5-4832-848d-f11b796e963e",
                  "isPublished": false,
                  "name": "UK Sales Tax",
                  "invoiceName": "Value Added Tax",
                  "invoiceShortName": "VAT",
                  "description": "Value Added Tax applied to sales in the UK",
                  "amount": "0.2",
                  "country": "GB",
                  "region": "London",
                  "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                  "subRates": []
                }
              },
              "examples": {
                "UpdateTaxRateVersionEndpointUpdateTaxRateVersionRequestModel": {
                  "summary": "",
                  "value": {
                    "id": "d2aea732-19f5-4832-848d-f11b796e963e",
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaxRateVersionEndpointProductUpdateTaxRateVersionResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "UpdateTaxRateVersionEndpointProductUpdateTaxRateVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "name": "UK Sales Tax",
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a version of Tax Rate",
        "description": "Delete a version of Tax Rate",
        "operationId": "deleteTaxRatesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxRate version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaxRateVersionEndpointProductDeleteTaxRateVersionResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "name": "UK Sales Tax",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "subRates": [],
                    "isArchived": false
                  }
                },
                "examples": {
                  "DeleteTaxRateVersionEndpointProductDeleteTaxRateVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "name": "UK Sales Tax",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "subRates": [],
                      "isArchived": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-rates/{id}/archive": {
      "put": {
        "tags": [],
        "summary": "Archive a tax rate",
        "description": "Archive a tax rate",
        "operationId": "putTaxRatesByIdArchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxRate ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveTaxRateEndpointProductArchiveTaxRateResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "version": 0,
                    "isPublished": false,
                    "name": "UK Sales Tax",
                    "invoiceName": "Value Added Tax",
                    "invoiceShortName": "VAT",
                    "description": "Value Added Tax applied to sales in the UK",
                    "amount": "0.2",
                    "country": "GB",
                    "region": "London",
                    "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                    "subRates": [],
                    "isArchived": true
                  }
                },
                "examples": {
                  "ArchiveTaxRateEndpointProductArchiveTaxRateResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "version": 0,
                      "isPublished": false,
                      "name": "UK Sales Tax",
                      "invoiceName": "Value Added Tax",
                      "invoiceShortName": "VAT",
                      "description": "Value Added Tax applied to sales in the UK",
                      "amount": "0.2",
                      "country": "GB",
                      "region": "London",
                      "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
                      "subRates": [],
                      "isArchived": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-registrations": {
      "get": {
        "tags": [],
        "summary": "List all Tax Registrations",
        "description": "List all Tax Registrations",
        "operationId": "getTaxRegistrations",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxRegistrationEndpointProductListTaxRegistrationPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                        "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                        "taxIdentifier": "GB123456789",
                        "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                        "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                        "country": "GB",
                        "state": "CA"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListTaxRegistrationEndpointProductListTaxRegistrationPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                          "taxIdentifier": "GB123456789",
                          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                          "country": "GB",
                          "state": "CA"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Tax Registration",
        "description": "Create a new Tax Registration",
        "operationId": "postTaxRegistrations",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxRegistrationEndpointCreateTaxRegistrationRequestModel",
                "example": {
                  "taxIdentifier": "GB123456789",
                  "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                  "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                  "country": "GB",
                  "state": "CA"
                }
              },
              "examples": {
                "CreateTaxRegistrationEndpointCreateTaxRegistrationRequestModel": {
                  "summary": "",
                  "value": {
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaxRegistrationEndpointProductCreateTaxRegistrationResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                },
                "examples": {
                  "CreateTaxRegistrationEndpointProductCreateTaxRegistrationResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                      "taxIdentifier": "GB123456789",
                      "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "country": "GB",
                      "state": "CA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-registrations/for-merchant/{id}": {
      "get": {
        "tags": [],
        "summary": "Get all tax registrations for a merchant by merchant ID",
        "description": "Get all tax registrations for a merchant by merchant ID",
        "operationId": "getTaxRegistrationsForMerchantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Merchant ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxRegistrationForCustomerProductResponse",
                  "example": {
                    "items": [
                      {
                        "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                        "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
                        "taxIdentifier": "CA123456789",
                        "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                        "country": "GB",
                        "state": "CA"
                      }
                    ],
                    "pagination": {
                      "after": "nextOffset",
                      "before": "previousOffset",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "GetTaxRegistrationForCustomerProductResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                          "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
                          "taxIdentifier": "CA123456789",
                          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                          "country": "GB",
                          "state": "CA"
                        }
                      ],
                      "pagination": {
                        "after": "nextOffset",
                        "before": "previousOffset",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-registrations/for-customer/{id}": {
      "get": {
        "tags": [],
        "summary": "Get all tax registrations for a customer by customer ID",
        "description": "Get all tax registrations for a customer by customer ID",
        "operationId": "getTaxRegistrationsForCustomerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxRegistrationForCustomerProductResponse",
                  "example": {
                    "items": [
                      {
                        "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                        "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
                        "taxIdentifier": "CA123456789",
                        "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                        "country": "GB",
                        "state": "CA"
                      }
                    ],
                    "pagination": {
                      "after": "nextOffset",
                      "before": "previousOffset",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "GetTaxRegistrationForCustomerProductResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                          "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
                          "taxIdentifier": "CA123456789",
                          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                          "country": "GB",
                          "state": "CA"
                        }
                      ],
                      "pagination": {
                        "after": "nextOffset",
                        "before": "previousOffset",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-registrations/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Tax Registration by ID",
        "description": "Get a Tax Registration by ID",
        "operationId": "getTaxRegistrationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax registration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxRegistrationEndpointProductGetTaxRegistrationResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                },
                "examples": {
                  "GetTaxRegistrationEndpointProductGetTaxRegistrationResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                      "taxIdentifier": "GB123456789",
                      "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "country": "GB",
                      "state": "CA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Tax Registration",
        "description": "Update a Tax Registration",
        "operationId": "putTaxRegistrationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax registration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaxRegistrationEndpointUpdateTaxRegistrationRequestModel",
                "example": {
                  "taxIdentifier": "GB123456789",
                  "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                  "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                  "country": "GB",
                  "state": "CA"
                }
              },
              "examples": {
                "UpdateTaxRegistrationEndpointUpdateTaxRegistrationRequestModel": {
                  "summary": "",
                  "value": {
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaxRegistrationEndpointProductUpdateTaxRegistrationResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                },
                "examples": {
                  "UpdateTaxRegistrationEndpointProductUpdateTaxRegistrationResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                      "taxIdentifier": "GB123456789",
                      "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "country": "GB",
                      "state": "CA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Tax Registration",
        "description": "Delete a Tax Registration",
        "operationId": "deleteTaxRegistrationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax registration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaxRegistrationEndpointProductDeleteTaxRegistrationResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                    "taxIdentifier": "GB123456789",
                    "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                    "country": "GB",
                    "state": "CA"
                  }
                },
                "examples": {
                  "DeleteTaxRegistrationEndpointProductDeleteTaxRegistrationResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                      "taxIdentifier": "GB123456789",
                      "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                      "country": "GB",
                      "state": "CA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-categories": {
      "get": {
        "tags": [],
        "summary": "List all Tax Categories",
        "description": "List all Tax Categories",
        "operationId": "getTaxCategories",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxCategoryEndpointProductListTaxCategoryPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                        "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                        "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                        "version": 0,
                        "isPublished": false,
                        "name": "EU Sales Taxes",
                        "description": "All sales taxes required for the EU"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListTaxCategoryEndpointProductListTaxCategoryPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                          "version": 0,
                          "isPublished": false,
                          "name": "EU Sales Taxes",
                          "description": "All sales taxes required for the EU"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Tax Category",
        "description": "Create a new Tax Category",
        "operationId": "postTaxCategories",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxCategoryEndpointCreateTaxCategoryRequestModel",
                "example": {
                  "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                  "version": 0,
                  "isPublished": false,
                  "name": "EU Sales Taxes",
                  "description": "All sales taxes required for the EU"
                }
              },
              "examples": {
                "CreateTaxCategoryEndpointCreateTaxCategoryRequestModel": {
                  "summary": "",
                  "value": {
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaxCategoryEndpointProductCreateTaxCategoryResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "CreateTaxCategoryEndpointProductCreateTaxCategoryResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-categories/{id}/versions": {
      "get": {
        "tags": [],
        "summary": "List all versions of Tax Category",
        "description": "List all versions of Tax Category",
        "operationId": "getTaxCategoriesByIdVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxCategory ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTaxCategoryVersionsEndpointProductList_versionsTaxCategoryPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                        "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                        "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                        "version": 0,
                        "isPublished": false,
                        "name": "EU Sales Taxes",
                        "description": "All sales taxes required for the EU"
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListTaxCategoryVersionsEndpointProductList_versionsTaxCategoryPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                          "version": 0,
                          "isPublished": false,
                          "name": "EU Sales Taxes",
                          "description": "All sales taxes required for the EU"
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new version of Tax Category",
        "description": "Create a new version of Tax Category",
        "operationId": "postTaxCategoriesByIdVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxCategory ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxCategoryVersionEndpointCreateTaxCategoryVersionRequestModel",
                "example": {
                  "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                  "version": 0,
                  "isPublished": false,
                  "name": "EU Sales Taxes",
                  "description": "All sales taxes required for the EU"
                }
              },
              "examples": {
                "CreateTaxCategoryVersionEndpointCreateTaxCategoryVersionRequestModel": {
                  "summary": "",
                  "value": {
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaxCategoryVersionEndpointProductCreateTaxCategoryVersionResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "CreateTaxCategoryVersionEndpointProductCreateTaxCategoryVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-categories/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Tax Category by ID",
        "description": "Get a Tax Category by ID",
        "operationId": "getTaxCategoriesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax Category ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxCategoryEndpointProductGetTaxCategoryResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "GetTaxCategoryEndpointProductGetTaxCategoryResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Tax Category",
        "description": "Update a Tax Category",
        "operationId": "putTaxCategoriesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax Category ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaxCategoryEndpointUpdateTaxCategoryRequestModel",
                "example": {
                  "isPublished": false,
                  "name": "EU Sales Taxes",
                  "description": "All sales taxes required for the EU"
                }
              },
              "examples": {
                "UpdateTaxCategoryEndpointUpdateTaxCategoryRequestModel": {
                  "summary": "",
                  "value": {
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaxCategoryEndpointProductUpdateTaxCategoryResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "UpdateTaxCategoryEndpointProductUpdateTaxCategoryResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Tax Category",
        "description": "Delete a Tax Category",
        "operationId": "deleteTaxCategoriesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tax Category ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaxCategoryEndpointProductDeleteTaxCategoryResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "DeleteTaxCategoryEndpointProductDeleteTaxCategoryResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/tax-categories/{id}/versions/{version}": {
      "get": {
        "tags": [],
        "summary": "Get a version of Tax Category by ID and version number",
        "description": "Get a version of Tax Category by ID and version number",
        "operationId": "getTaxCategoriesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxCategory ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxCategory version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaxCategoryVersionEndpointProductGetTaxCategoryVersionResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "GetTaxCategoryVersionEndpointProductGetTaxCategoryVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a version of Tax Category",
        "description": "Update a version of Tax Category",
        "operationId": "putTaxCategoriesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxCategory ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxCategory version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaxCategoryVersionEndpointUpdateTaxCategoryVersionRequestModel",
                "example": {
                  "isPublished": false,
                  "name": "EU Sales Taxes",
                  "description": "All sales taxes required for the EU"
                }
              },
              "examples": {
                "UpdateTaxCategoryVersionEndpointUpdateTaxCategoryVersionRequestModel": {
                  "summary": "",
                  "value": {
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaxCategoryVersionEndpointProductUpdateTaxCategoryVersionResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "UpdateTaxCategoryVersionEndpointProductUpdateTaxCategoryVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a version of Tax Category",
        "description": "Delete a version of Tax Category",
        "operationId": "deleteTaxCategoriesByIdVersionsByVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TaxCategory ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "TaxCategory version",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaxCategoryVersionEndpointProductDeleteTaxCategoryVersionResponseModel",
                  "example": {
                    "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                    "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                    "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                    "version": 0,
                    "isPublished": false,
                    "name": "EU Sales Taxes",
                    "description": "All sales taxes required for the EU"
                  }
                },
                "examples": {
                  "DeleteTaxCategoryVersionEndpointProductDeleteTaxCategoryVersionResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                      "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                      "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                      "version": 0,
                      "isPublished": false,
                      "name": "EU Sales Taxes",
                      "description": "All sales taxes required for the EU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/event-sinks/alloy-db": {
      "post": {
        "tags": [],
        "summary": "AlloyDB event sink",
        "description": "Writes incoming events to AlloyDB",
        "operationId": "postUsageEventsEventSinksAlloyDb",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/event-sinks/big-query": {
      "post": {
        "tags": [],
        "summary": "BigQuery event sink",
        "description": "Writes incoming events to BigQuery",
        "operationId": "postUsageEventsEventSinksBigQuery",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-metrics/{id}/usage-data": {
      "post": {
        "tags": [],
        "summary": "Get usage events for usage metric and event type for the given usage period",
        "description": "List usage events for usage metric and event type for the given usage period",
        "operationId": "postUsageMetricsByIdUsageData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Usage Metric ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsageDataForUsageMetricEndpointRequestModel",
                "example": {
                  "usageStart": "2023-02-01",
                  "usageEnd": "2023-04-30",
                  "eventType": "event",
                  "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                  "customerAliases": [
                    "alias"
                  ],
                  "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
                }
              },
              "examples": {
                "GetUsageDataForUsageMetricEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "usageStart": "2023-02-01",
                    "usageEnd": "2023-04-30",
                    "eventType": "event",
                    "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                    "customerAliases": [
                      "alias"
                    ],
                    "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionalUsageDataResponse",
                  "example": {
                    "data": {
                      "usageStart": "2023-02-01",
                      "usageEnd": "2023-04-30",
                      "metricName": "API Calls",
                      "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
                      "total": "35",
                      "usageData": [
                        {
                          "periodStart": "2023-02-01",
                          "amount": "10",
                          "cumulativeAmount": "10"
                        },
                        {
                          "periodStart": "2023-03-01",
                          "amount": "15",
                          "cumulativeAmount": "25"
                        },
                        {
                          "periodStart": "2023-04-01",
                          "amount": "10",
                          "cumulativeAmount": "35"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "OptionalUsageDataResponse": {
                    "summary": "",
                    "value": {
                      "data": {
                        "usageStart": "2023-02-01",
                        "usageEnd": "2023-04-30",
                        "metricName": "API Calls",
                        "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
                        "total": "35",
                        "usageData": [
                          {
                            "periodStart": "2023-02-01",
                            "amount": "10",
                            "cumulativeAmount": "10"
                          },
                          {
                            "periodStart": "2023-03-01",
                            "amount": "15",
                            "cumulativeAmount": "25"
                          },
                          {
                            "periodStart": "2023-04-01",
                            "amount": "10",
                            "cumulativeAmount": "35"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-metrics": {
      "get": {
        "tags": [],
        "summary": "List all Usage Metrics",
        "description": "List all Usage Metrics",
        "operationId": "getUsageMetrics",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivilegedListUsageMetricEndpointProductResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                        "name": "Total length of sent messages.",
                        "description": "Total length of sent messages.",
                        "metricType": "GROUPED",
                        "eventType": "message_sent",
                        "aggregationType": "COUNT",
                        "aggregationProperty": "message_length",
                        "groupingProperty": "channel",
                        "unit": "bytes",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "deletedAt": "2022-06-28T16:47:00Z",
                        "propertyFilters": {
                          "channels": [
                            "text",
                            "email"
                          ]
                        },
                        "caseSensitive": true,
                        "propertiesToNegate": [
                          "channels"
                        ],
                        "parameters": [
                          {
                            "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                            "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                            "name": "myParam",
                            "type": "INTEGER",
                            "description": "My parameter",
                            "defaultValue": "10"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "PrivilegedListUsageMetricEndpointProductResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                          "name": "Total length of sent messages.",
                          "description": "Total length of sent messages.",
                          "metricType": "GROUPED",
                          "eventType": "message_sent",
                          "aggregationType": "COUNT",
                          "aggregationProperty": "message_length",
                          "groupingProperty": "channel",
                          "unit": "bytes",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "deletedAt": "2022-06-28T16:47:00Z",
                          "propertyFilters": {
                            "channels": [
                              "text",
                              "email"
                            ]
                          },
                          "caseSensitive": true,
                          "propertiesToNegate": [
                            "channels"
                          ],
                          "parameters": [
                            {
                              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                              "name": "myParam",
                              "type": "INTEGER",
                              "description": "My parameter",
                              "defaultValue": "10"
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Usage Metric",
        "description": "Create a new Usage Metric",
        "operationId": "postUsageMetrics",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUsageMetricEndpointCreateUsageMetricRequestModel",
                "example": {
                  "name": "Total length of sent messages.",
                  "description": "Total length of sent messages.",
                  "metricType": "GROUPED",
                  "eventType": "message_sent",
                  "aggregationType": "COUNT",
                  "aggregationProperty": "message_length",
                  "groupingProperty": "channel",
                  "unit": "bytes",
                  "deletedAt": "2022-06-28T16:47:00Z",
                  "propertyFilters": {
                    "channels": [
                      "text",
                      "email"
                    ]
                  },
                  "caseSensitive": true,
                  "propertiesToNegate": [
                    "channels"
                  ]
                }
              },
              "examples": {
                "CreateUsageMetricEndpointCreateUsageMetricRequestModel": {
                  "summary": "",
                  "value": {
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUsageMetricEndpointProductCreateUsageMetricResponseModel",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "myParam",
                        "type": "INTEGER",
                        "description": "My parameter",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "CreateUsageMetricEndpointProductCreateUsageMetricResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "COUNT",
                      "aggregationProperty": "message_length",
                      "groupingProperty": "channel",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {
                        "channels": [
                          "text",
                          "email"
                        ]
                      },
                      "caseSensitive": true,
                      "propertiesToNegate": [
                        "channels"
                      ],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "myParam",
                          "type": "INTEGER",
                          "description": "My parameter",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/custom-usage-metrics": {
      "post": {
        "tags": [],
        "summary": "Create a custom usage metric",
        "description": "Create a custom usage metric",
        "operationId": "postCustomUsageMetrics",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomUsageMetricRequest",
                "example": {
                  "name": "Total length of sent messages.",
                  "description": "Total length of sent messages.",
                  "expression": "MAX(0, 1)",
                  "unit": "bytes",
                  "parameters": [
                    {
                      "name": "ratio",
                      "type": "POSITIVE_INTEGER",
                      "description": "Ratio of A to B",
                      "defaultValue": "10"
                    }
                  ]
                }
              },
              "examples": {
                "CreateCustomUsageMetricRequest": {
                  "summary": "",
                  "value": {
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "expression": "MAX(0, 1)",
                    "unit": "bytes",
                    "parameters": [
                      {
                        "name": "ratio",
                        "type": "POSITIVE_INTEGER",
                        "description": "Ratio of A to B",
                        "defaultValue": "10"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetric",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "SIMPLE",
                    "eventType": "N/A",
                    "aggregationType": "CUSTOM",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {},
                    "caseSensitive": false,
                    "propertiesToNegate": [],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "ratio",
                        "type": "POSITIVE_INTEGER",
                        "description": "Ratio of A to B",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "UsageMetric": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "SIMPLE",
                      "eventType": "N/A",
                      "aggregationType": "CUSTOM",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {},
                      "caseSensitive": false,
                      "propertiesToNegate": [],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "ratio",
                          "type": "POSITIVE_INTEGER",
                          "description": "Ratio of A to B",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/custom-usage-metrics/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a custom usage metric",
        "description": "Update a custom usage metric",
        "operationId": "putCustomUsageMetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Usage Metric ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomUsageMetricRequest",
                "example": {
                  "name": "Total length of sent messages.",
                  "description": "Total length of sent messages.",
                  "expression": "MAX(0, 1)",
                  "unit": "bytes",
                  "parameters": [
                    {
                      "id": "f8bff40b-02be-43a6-b483-38b54f664116",
                      "name": "ratio",
                      "type": "POSITIVE_INTEGER",
                      "description": "Ratio of A to B",
                      "defaultValue": "10"
                    }
                  ]
                }
              },
              "examples": {
                "UpdateCustomUsageMetricRequest": {
                  "summary": "",
                  "value": {
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "expression": "MAX(0, 1)",
                    "unit": "bytes",
                    "parameters": [
                      {
                        "id": "f8bff40b-02be-43a6-b483-38b54f664116",
                        "name": "ratio",
                        "type": "POSITIVE_INTEGER",
                        "description": "Ratio of A to B",
                        "defaultValue": "10"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetric",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "SIMPLE",
                    "eventType": "N/A",
                    "aggregationType": "CUSTOM",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {},
                    "caseSensitive": false,
                    "propertiesToNegate": [],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "ratio",
                        "type": "POSITIVE_INTEGER",
                        "description": "Ratio of A to B",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "UsageMetric": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "SIMPLE",
                      "eventType": "N/A",
                      "aggregationType": "CUSTOM",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {},
                      "caseSensitive": false,
                      "propertiesToNegate": [],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "ratio",
                          "type": "POSITIVE_INTEGER",
                          "description": "Ratio of A to B",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-metrics/{id}": {
      "get": {
        "tags": [],
        "summary": "Get an Usage Metric by ID",
        "description": "Get an Usage Metric by ID",
        "operationId": "getUsageMetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsageMetricEndpointProductGetUsageMetricResponseModel",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "myParam",
                        "type": "INTEGER",
                        "description": "My parameter",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetUsageMetricEndpointProductGetUsageMetricResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "COUNT",
                      "aggregationProperty": "message_length",
                      "groupingProperty": "channel",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {
                        "channels": [
                          "text",
                          "email"
                        ]
                      },
                      "caseSensitive": true,
                      "propertiesToNegate": [
                        "channels"
                      ],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "myParam",
                          "type": "INTEGER",
                          "description": "My parameter",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update an Usage Metric",
        "description": "Update an Usage Metric",
        "operationId": "putUsageMetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsageMetricEndpointUpdateUsageMetricRequestModel",
                "example": {
                  "name": "Total length of sent messages.",
                  "description": "Total length of sent messages.",
                  "metricType": "GROUPED",
                  "eventType": "message_sent",
                  "aggregationType": "COUNT",
                  "aggregationProperty": "message_length",
                  "groupingProperty": "channel",
                  "unit": "bytes",
                  "propertyFilters": {
                    "channels": [
                      "text",
                      "email"
                    ]
                  },
                  "caseSensitive": true,
                  "propertiesToNegate": [
                    "channels"
                  ]
                }
              },
              "examples": {
                "UpdateUsageMetricEndpointUpdateUsageMetricRequestModel": {
                  "summary": "",
                  "value": {
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUsageMetricEndpointProductUpdateUsageMetricResponseModel",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "myParam",
                        "type": "INTEGER",
                        "description": "My parameter",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "UpdateUsageMetricEndpointProductUpdateUsageMetricResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "COUNT",
                      "aggregationProperty": "message_length",
                      "groupingProperty": "channel",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {
                        "channels": [
                          "text",
                          "email"
                        ]
                      },
                      "caseSensitive": true,
                      "propertiesToNegate": [
                        "channels"
                      ],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "myParam",
                          "type": "INTEGER",
                          "description": "My parameter",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete an Usage Metric",
        "description": "Delete an Usage Metric",
        "operationId": "deleteUsageMetricsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUsageMetricEndpointProductDeleteUsageMetricResponseModel",
                  "example": {
                    "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "name": "Total length of sent messages.",
                    "description": "Total length of sent messages.",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "COUNT",
                    "aggregationProperty": "message_length",
                    "groupingProperty": "channel",
                    "unit": "bytes",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "propertyFilters": {
                      "channels": [
                        "text",
                        "email"
                      ]
                    },
                    "caseSensitive": true,
                    "propertiesToNegate": [
                      "channels"
                    ],
                    "parameters": [
                      {
                        "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                        "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "name": "myParam",
                        "type": "INTEGER",
                        "description": "My parameter",
                        "defaultValue": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "DeleteUsageMetricEndpointProductDeleteUsageMetricResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "name": "Total length of sent messages.",
                      "description": "Total length of sent messages.",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "COUNT",
                      "aggregationProperty": "message_length",
                      "groupingProperty": "channel",
                      "unit": "bytes",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z",
                      "propertyFilters": {
                        "channels": [
                          "text",
                          "email"
                        ]
                      },
                      "caseSensitive": true,
                      "propertiesToNegate": [
                        "channels"
                      ],
                      "parameters": [
                        {
                          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "name": "myParam",
                          "type": "INTEGER",
                          "description": "My parameter",
                          "defaultValue": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events": {
      "get": {
        "tags": [],
        "summary": "List all Usage Events",
        "description": "List all Usage Events",
        "operationId": "getUsageEvents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset. To retrieve a non-contiguous page, use this parameter to specify the offset to fetch relative to `pagination.after` or `pagination.before`.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerAlias",
            "in": "query",
            "description": "Filter events by customer alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unmappedAliasesOnly",
            "in": "query",
            "description": "Include unmapped aliases only",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Filter events by type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "description": "Filter events by event id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventTimestampBefore",
            "in": "query",
            "description": "Filter events by timestamp before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventTimestampAfter",
            "in": "query",
            "description": "Filter events by timestamp after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsageEventEndpointEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                        "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                        "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                        "eventType": "message-sent",
                        "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                        "eventTimestamp": "2022-10-01T00:00:00Z",
                        "eventProperties": {
                          "length": 500,
                          "type": "text_message"
                        },
                        "isLatestForCustomerEventId": true
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListUsageEventEndpointEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                          "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                          "eventType": "message-sent",
                          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                          "eventTimestamp": "2022-10-01T00:00:00Z",
                          "eventProperties": {
                            "length": 500,
                            "type": "text_message"
                          },
                          "isLatestForCustomerEventId": true
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Usage Event",
        "description": "Create a new Usage Event",
        "operationId": "postUsageEvents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUsageEventEndpointCreateUsageEventRequestModel",
                "example": {
                  "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                  "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                  "eventType": "message-sent",
                  "eventTimestamp": "2022-10-01T00:00:00Z",
                  "eventProperties": {
                    "length": 500,
                    "type": "text_message"
                  }
                }
              },
              "examples": {
                "CreateUsageEventEndpointCreateUsageEventRequestModel": {
                  "summary": "",
                  "value": {
                    "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "eventType": "message-sent",
                    "eventTimestamp": "2022-10-01T00:00:00Z",
                    "eventProperties": {
                      "length": 500,
                      "type": "text_message"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUsageEventEndpointProductCreateUsageEventResponseModel",
                  "example": {
                    "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                    "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "eventType": "message-sent",
                    "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                    "eventTimestamp": "2022-10-01T00:00:00Z",
                    "eventProperties": {
                      "length": 500,
                      "type": "text_message"
                    }
                  }
                },
                "examples": {
                  "CreateUsageEventEndpointProductCreateUsageEventResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                      "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                      "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                      "eventType": "message-sent",
                      "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                      "eventTimestamp": "2022-10-01T00:00:00Z",
                      "eventProperties": {
                        "length": 500,
                        "type": "text_message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-event-for-instant-charges": {
      "post": {
        "tags": [],
        "summary": "Create a new Usage Event and Instant Charge",
        "description": "Create a new Usage Event and Instant Charge",
        "operationId": "postUsageEventForInstantCharges",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUsageEventEndpointCreateUsageEventRequestModel",
                "example": {
                  "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                  "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                  "eventType": "message-sent",
                  "eventTimestamp": "2022-10-01T00:00:00Z",
                  "eventProperties": {
                    "length": 500,
                    "type": "text_message"
                  }
                }
              },
              "examples": {
                "CreateUsageEventEndpointCreateUsageEventRequestModel": {
                  "summary": "",
                  "value": {
                    "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "eventType": "message-sent",
                    "eventTimestamp": "2022-10-01T00:00:00Z",
                    "eventProperties": {
                      "length": 500,
                      "type": "text_message"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUsageEventForInstantChargeEndpointCreateUsageEventForInstantChargeResponseModel",
                  "example": {
                    "usageEvent": {
                      "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                      "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                      "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                      "eventType": "message-sent",
                      "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                      "eventTimestamp": "2022-10-01T00:00:00Z",
                      "eventProperties": {
                        "length": 500,
                        "type": "text_message"
                      },
                      "isLatestForCustomerEventId": true
                    },
                    "instantCharges": []
                  }
                },
                "examples": {
                  "CreateUsageEventForInstantChargeEndpointCreateUsageEventForInstantChargeResponseModel": {
                    "summary": "",
                    "value": {
                      "usageEvent": {
                        "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                        "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                        "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                        "eventType": "message-sent",
                        "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                        "eventTimestamp": "2022-10-01T00:00:00Z",
                        "eventProperties": {
                          "length": 500,
                          "type": "text_message"
                        },
                        "isLatestForCustomerEventId": true
                      },
                      "instantCharges": []
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/csv": {
      "post": {
        "tags": [],
        "summary": "CSV usage event uploads",
        "description": "Upload CSV files containing usage events",
        "operationId": "postUsageEventsCsv",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/{id}": {
      "get": {
        "tags": [],
        "summary": "Get an Usage Event by ID",
        "description": "Get an Usage Event by ID",
        "operationId": "getUsageEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsageEventEndpointProductGetUsageEventResponseModel",
                  "example": {
                    "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                    "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "eventType": "message-sent",
                    "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                    "eventTimestamp": "2022-10-01T00:00:00Z",
                    "eventProperties": {
                      "length": 500,
                      "type": "text_message"
                    }
                  }
                },
                "examples": {
                  "GetUsageEventEndpointProductGetUsageEventResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                      "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                      "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                      "eventType": "message-sent",
                      "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                      "eventTimestamp": "2022-10-01T00:00:00Z",
                      "eventProperties": {
                        "length": 500,
                        "type": "text_message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-metrics/{usageMetricId}/calculate": {
      "get": {
        "tags": [],
        "summary": "Calculate usage metric for customer and timeframe",
        "description": "Calculate usage metric for customer and timeframe",
        "operationId": "getUsageMetricsByUsageMetricIdCalculate",
        "parameters": [
          {
            "name": "usageMetricId",
            "in": "path",
            "description": "Usage Metric ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerAliases",
            "in": "query",
            "description": "Customer Aliases / internal IDs",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Billing period start",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Billing period end (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customParameters",
            "in": "query",
            "description": "Custom parameter values",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetricCalculationResponse",
                  "example": {
                    "name": "total_messages_sent",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "SUM",
                    "eventCount": 5,
                    "value": 150.035,
                    "unit": "bytes",
                    "minEventId": "0183d0f1-6b5a-74d4-9129-1f4b90191666",
                    "maxEventId": "0183ea03-aca0-7019-b80d-6aacce344e92"
                  }
                },
                "examples": {
                  "UsageMetricCalculationResponse": {
                    "summary": "",
                    "value": {
                      "name": "total_messages_sent",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "SUM",
                      "eventCount": 5,
                      "value": 150.035,
                      "unit": "bytes",
                      "minEventId": "0183d0f1-6b5a-74d4-9129-1f4b90191666",
                      "maxEventId": "0183ea03-aca0-7019-b80d-6aacce344e92"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-metrics/{usageMetricId}/calculate-with-cap": {
      "get": {
        "tags": [],
        "summary": "Calculate usage metric for customer and timeframe split by value cap",
        "description": "Calculate usage metric for customer and timeframe split by value cap",
        "operationId": "getUsageMetricsByUsageMetricIdCalculateWithCap",
        "parameters": [
          {
            "name": "usageMetricId",
            "in": "path",
            "description": "Usage Metric ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerAliases",
            "in": "query",
            "description": "Customer Aliases / internal IDs",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Billing period start",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Billing period end (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetricCalculationResponse",
                  "example": {
                    "name": "total_messages_sent",
                    "metricType": "GROUPED",
                    "eventType": "message_sent",
                    "aggregationType": "SUM",
                    "eventCount": 5,
                    "value": 150.035,
                    "unit": "bytes",
                    "minEventId": "0183d0f1-6b5a-74d4-9129-1f4b90191666",
                    "maxEventId": "0183ea03-aca0-7019-b80d-6aacce344e92"
                  }
                },
                "examples": {
                  "UsageMetricCalculationResponse": {
                    "summary": "",
                    "value": {
                      "name": "total_messages_sent",
                      "metricType": "GROUPED",
                      "eventType": "message_sent",
                      "aggregationType": "SUM",
                      "eventCount": 5,
                      "value": 150.035,
                      "unit": "bytes",
                      "minEventId": "0183d0f1-6b5a-74d4-9129-1f4b90191666",
                      "maxEventId": "0183ea03-aca0-7019-b80d-6aacce344e92"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/unique-usage-event-types": {
      "get": {
        "tags": [],
        "summary": "List all unique usage types",
        "description": "List all unique usage event types",
        "operationId": "getUniqueUsageEventTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUniqueUsageEventTypesEndpointEndpointResponseModel",
                  "example": {
                    "items": [
                      "api_call"
                    ]
                  }
                },
                "examples": {
                  "ListUniqueUsageEventTypesEndpointEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        "api_call"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/unique-usage-event-properties": {
      "get": {
        "tags": [],
        "summary": "List all unique usage event properties",
        "description": "List all unique usage event properties",
        "operationId": "getUniqueUsageEventProperties",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUniqueUsageEventPropertiesEndpointEndpointResponseModel",
                  "example": {
                    "items": [
                      "transactions"
                    ]
                  }
                },
                "examples": {
                  "ListUniqueUsageEventPropertiesEndpointEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        "transactions"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/insights/usage-events": {
      "get": {
        "tags": [],
        "summary": "Get usage events",
        "description": "Get usage events by event type",
        "operationId": "getInsightsUsageEvents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Filter by event type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Start date (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "End date (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsageEventsInsightsResponseModel",
                  "example": {
                    "totalEventCount": 5,
                    "eventsByDay": [
                      {
                        "eventCount": 3,
                        "date": "2024-01-01"
                      },
                      {
                        "eventCount": 2,
                        "date": "2024-01-02"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetUsageEventsInsightsResponseModel": {
                    "summary": "",
                    "value": {
                      "totalEventCount": 5,
                      "eventsByDay": [
                        {
                          "eventCount": 3,
                          "date": "2024-01-01"
                        },
                        {
                          "eventCount": 2,
                          "date": "2024-01-02"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/insights/usage-metrics/{usageMetricId}/usage-data": {
      "get": {
        "tags": [],
        "summary": "Get usage metric usage data",
        "description": "Get usage data insights by usage metric",
        "operationId": "getInsightsUsageMetricsByUsageMetricIdUsageData",
        "parameters": [
          {
            "name": "usageMetricId",
            "in": "path",
            "description": "Usage Metric ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Start date (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "End date (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionalUsageDataResponse",
                  "example": {
                    "data": {
                      "usageStart": "2024-01-01",
                      "usageEnd": "2024-01-03",
                      "metricName": "API Calls",
                      "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
                      "total": "35",
                      "usageData": [
                        {
                          "periodStart": "2024-01-01",
                          "amount": "10",
                          "cumulativeAmount": "10"
                        },
                        {
                          "periodStart": "2024-01-02",
                          "amount": "15",
                          "cumulativeAmount": "25"
                        },
                        {
                          "periodStart": "2024-01-03",
                          "amount": "10",
                          "cumulativeAmount": "35"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "OptionalUsageDataResponse": {
                    "summary": "",
                    "value": {
                      "data": {
                        "usageStart": "2024-01-01",
                        "usageEnd": "2024-01-03",
                        "metricName": "API Calls",
                        "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
                        "total": "35",
                        "usageData": [
                          {
                            "periodStart": "2024-01-01",
                            "amount": "10",
                            "cumulativeAmount": "10"
                          },
                          {
                            "periodStart": "2024-01-02",
                            "amount": "15",
                            "cumulativeAmount": "25"
                          },
                          {
                            "periodStart": "2024-01-03",
                            "amount": "10",
                            "cumulativeAmount": "35"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/seat-snapshots": {
      "get": {
        "tags": [],
        "summary": "List all Seat Snapshots",
        "description": "List all Seat Snapshots",
        "operationId": "getSeatSnapshots",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerAlias",
            "in": "query",
            "description": "Filter snapshots by customer alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seatType",
            "in": "query",
            "description": "Filter snpashots by seat type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerSnapshotId",
            "in": "query",
            "description": "Filter events by customer snapshot id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "snapshotTimestampBefore",
            "in": "query",
            "description": "Filter snapshots by timestamp before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "snapshotTimestampAfter",
            "in": "query",
            "description": "Filter snapshots by timestamp after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSeatSnapshotsEndpointEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                        "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                        "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                        "seatType": "admin",
                        "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                        "snapshotTimestamp": "2022-10-01T00:00:00Z",
                        "total": 1,
                        "seatChanges": []
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListSeatSnapshotsEndpointEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                          "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                          "seatType": "admin",
                          "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                          "snapshotTimestamp": "2022-10-01T00:00:00Z",
                          "total": 1,
                          "seatChanges": []
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Seat Snapshot",
        "description": "Create a new Seat Snapshot",
        "operationId": "postSeatSnapshots",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeatSnapshotEndpointCreateSeatSnapshotRequestModel",
                "example": {
                  "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                  "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                  "seatType": "admin",
                  "snapshotTimestamp": "2022-10-01T00:00:00Z",
                  "total": 1,
                  "seatChanges": [
                    {
                      "externalId": "joe.bloggs@example.com",
                      "timestamp": "2022-10-01T00:00:00Z",
                      "description": "Joe Bloggs",
                      "reason": "seat manually added",
                      "changeType": "SEAT_ADDED"
                    }
                  ]
                }
              },
              "examples": {
                "CreateSeatSnapshotEndpointCreateSeatSnapshotRequestModel": {
                  "summary": "",
                  "value": {
                    "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "seatType": "admin",
                    "snapshotTimestamp": "2022-10-01T00:00:00Z",
                    "total": 1,
                    "seatChanges": [
                      {
                        "externalId": "joe.bloggs@example.com",
                        "timestamp": "2022-10-01T00:00:00Z",
                        "description": "Joe Bloggs",
                        "reason": "seat manually added",
                        "changeType": "SEAT_ADDED"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSeatSnapshotEndpointProductCreateSeatSnapshotResponseModel",
                  "example": {
                    "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                    "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                    "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                    "seatType": "admin",
                    "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                    "snapshotTimestamp": "2022-10-01T00:00:00Z",
                    "total": 1,
                    "seatChanges": [
                      {
                        "id": "e1c7775d-b546-440f-a1e6-9cfd792355b5",
                        "seatSnapshotId": "0184421a-8202-70ea-a729-30308a40bbf7",
                        "externalId": "joe.bloggs@example.com",
                        "timestamp": "2022-10-01T00:00:00Z",
                        "description": "Joe Bloggs",
                        "reason": "seat manually added",
                        "changeType": "SEAT_ADDED"
                      }
                    ]
                  }
                },
                "examples": {
                  "CreateSeatSnapshotEndpointProductCreateSeatSnapshotResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                      "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                      "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                      "seatType": "admin",
                      "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                      "snapshotTimestamp": "2022-10-01T00:00:00Z",
                      "total": 1,
                      "seatChanges": [
                        {
                          "id": "e1c7775d-b546-440f-a1e6-9cfd792355b5",
                          "seatSnapshotId": "0184421a-8202-70ea-a729-30308a40bbf7",
                          "externalId": "joe.bloggs@example.com",
                          "timestamp": "2022-10-01T00:00:00Z",
                          "description": "Joe Bloggs",
                          "reason": "seat manually added",
                          "changeType": "SEAT_ADDED"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/seat-changes": {
      "get": {
        "tags": [],
        "summary": "List all Seat Changes",
        "description": "List all Seat Changes",
        "operationId": "getSeatChanges",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerAlias",
            "in": "query",
            "description": "Filter changes by customer alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seatType",
            "in": "query",
            "description": "Filter changes by seat type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestampBefore",
            "in": "query",
            "description": "Filter changes by timestamp before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestampAfter",
            "in": "query",
            "description": "Filter changes by timestamp after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSeatChangesEndpointEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "94a9ad74-fa90-411f-b918-abd0092834e9",
                        "seatSnapshotId": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5",
                        "externalId": "joe.bloggs@example.com",
                        "timestamp": "2022-10-01T00:00:00Z",
                        "description": "Joe Bloggs",
                        "reason": "seat manually added",
                        "changeType": "SEAT_ADDED",
                        "customerAlias": "7d9249ce-aa44-45fe-99dd-2847dd4b3112",
                        "seatType": "admin"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListSeatChangesEndpointEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "94a9ad74-fa90-411f-b918-abd0092834e9",
                          "seatSnapshotId": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5",
                          "externalId": "joe.bloggs@example.com",
                          "timestamp": "2022-10-01T00:00:00Z",
                          "description": "Joe Bloggs",
                          "reason": "seat manually added",
                          "changeType": "SEAT_ADDED",
                          "customerAlias": "7d9249ce-aa44-45fe-99dd-2847dd4b3112",
                          "seatType": "admin"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/seat-types": {
      "get": {
        "tags": [],
        "summary": "List all Seat Types",
        "description": "List all Seat Types",
        "operationId": "getSeatTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSeatTypeEndpointProductListSeatTypePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                        "key": "admin",
                        "label": "Administrator",
                        "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListSeatTypeEndpointProductListSeatTypePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                          "key": "admin",
                          "label": "Administrator",
                          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Seat Type",
        "description": "Create a new Seat Type",
        "operationId": "postSeatTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeatTypeEndpointCreateSeatTypeRequestModel",
                "example": {
                  "key": "admin",
                  "label": "Administrator",
                  "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
                }
              },
              "examples": {
                "CreateSeatTypeEndpointCreateSeatTypeRequestModel": {
                  "summary": "",
                  "value": {
                    "key": "admin",
                    "label": "Administrator",
                    "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSeatTypeEndpointProductCreateSeatTypeResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "key": "admin",
                    "label": "Administrator",
                    "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "CreateSeatTypeEndpointProductCreateSeatTypeResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "key": "admin",
                      "label": "Administrator",
                      "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/seat-types/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Seat Type by ID",
        "description": "Get a Seat Type by ID",
        "operationId": "getSeatTypesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSeatTypeEndpointProductGetSeatTypeResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "key": "admin",
                    "label": "Administrator",
                    "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "GetSeatTypeEndpointProductGetSeatTypeResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "key": "admin",
                      "label": "Administrator",
                      "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Seat Type",
        "description": "Update a Seat Type",
        "operationId": "putSeatTypesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeatTypeEndpointUpdateSeatTypeRequestModel",
                "example": {
                  "label": "Administrator"
                }
              },
              "examples": {
                "UpdateSeatTypeEndpointUpdateSeatTypeRequestModel": {
                  "summary": "",
                  "value": {
                    "label": "Administrator"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSeatTypeEndpointProductUpdateSeatTypeResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "key": "admin",
                    "label": "Administrator",
                    "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "UpdateSeatTypeEndpointProductUpdateSeatTypeResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "key": "admin",
                      "label": "Administrator",
                      "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Seat Type",
        "description": "Delete a Seat Type",
        "operationId": "deleteSeatTypesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSeatTypeEndpointProductDeleteSeatTypeResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "key": "admin",
                    "label": "Administrator",
                    "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "DeleteSeatTypeEndpointProductDeleteSeatTypeResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "key": "admin",
                      "label": "Administrator",
                      "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/latest-seat-totals": {
      "get": {
        "tags": [],
        "summary": "List all latest seat totals",
        "description": "List all latest seat totals",
        "operationId": "getLatestSeatTotals",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerAliases",
            "in": "query",
            "description": "Filter seat details by customer alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seatTypes",
            "in": "query",
            "description": "Filter seat details by seat type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLatestSeatTotalsEndpointProductListLatestSeatTotalsPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                        "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                        "seatType": "admin",
                        "total": 10,
                        "changeTimestamp": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListLatestSeatTotalsEndpointProductListLatestSeatTotalsPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                          "seatType": "admin",
                          "total": 10,
                          "changeTimestamp": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/seat-balances": {
      "get": {
        "tags": [],
        "summary": "List Seat balances by Customer",
        "description": "List Seat balances grouped by Customer and seat type.",
        "operationId": "getSeatBalances",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZeroQuantity",
            "in": "query",
            "description": "Exclude customers with no seats usage. Defaults to false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "customerAliases",
            "in": "query",
            "description": "Filter seat balances by customer alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSeatBalancesEndpointListCustomerSeatBalancesPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d82010a6-6835-41f8-9dd3-6f858f617f35",
                        "sequenceAccountId": "806460ce-050d-45e4-8d22-b403a523b866",
                        "legalName": "Acme Corp",
                        "customerAliases": [
                          "acme"
                        ],
                        "total": 10,
                        "changeTimestamp": "2022-06-28T16:47:00Z",
                        "balances": [
                          {
                            "seatType": "admin",
                            "total": 10,
                            "changeTimestamp": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCustomerSeatBalancesEndpointListCustomerSeatBalancesPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d82010a6-6835-41f8-9dd3-6f858f617f35",
                          "sequenceAccountId": "806460ce-050d-45e4-8d22-b403a523b866",
                          "legalName": "Acme Corp",
                          "customerAliases": [
                            "acme"
                          ],
                          "total": 10,
                          "changeTimestamp": "2022-06-28T16:47:00Z",
                          "balances": [
                            {
                              "seatType": "admin",
                              "total": 10,
                              "changeTimestamp": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/backfill-is-latest/usage-event/{id}/backfill": {
      "post": {
        "tags": [],
        "summary": "Backfill is latest for customer event ID flag for a single usage event",
        "description": "Backfill is latest for customer event ID flag for a single usage event",
        "operationId": "postUsageEventsBackfillIsLatestUsageEventByIdBackfill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Usage Event ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/backfill-is-latest/account/{id}/backfill": {
      "post": {
        "tags": [],
        "summary": "Backfill is latest for customer event ID flag for a single account",
        "description": "Backfill is latest for customer event ID flag for a single account",
        "operationId": "postUsageEventsBackfillIsLatestAccountByIdBackfill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/usage-events/backfill-is-latest/all/backfill": {
      "post": {
        "tags": [],
        "summary": "Backfill is latest for customer event ID flag for all accounts",
        "description": "Backfill is latest for customer event ID flag for all accounts",
        "operationId": "postUsageEventsBackfillIsLatestAllBackfill",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/products": {
      "get": {
        "tags": [],
        "summary": "List all Products",
        "description": "List all Products",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProductEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                        "name": "Fixed priced product",
                        "label": "Fixed priced product - UK",
                        "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListProductEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                          "name": "Fixed priced product",
                          "label": "Fixed priced product - UK",
                          "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Product",
        "description": "Create a new Product",
        "operationId": "postProducts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductEndpointCreateProductRequestModel",
                "example": {
                  "name": "Fixed priced product",
                  "label": "Fixed priced product - UK"
                }
              },
              "examples": {
                "CreateProductEndpointCreateProductRequestModel": {
                  "summary": "",
                  "value": {
                    "name": "Fixed priced product",
                    "label": "Fixed priced product - UK"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse",
                  "example": {
                    "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                    "name": "Fixed priced product",
                    "label": "Fixed priced product - UK",
                    "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "ProductResponse": {
                    "summary": "",
                    "value": {
                      "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                      "name": "Fixed priced product",
                      "label": "Fixed priced product - UK",
                      "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/products/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Product by ID",
        "description": "Get a Product by ID",
        "operationId": "getProductsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse",
                  "example": {
                    "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                    "name": "Fixed priced product",
                    "label": "Fixed priced product - UK",
                    "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "ProductResponse": {
                    "summary": "",
                    "value": {
                      "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                      "name": "Fixed priced product",
                      "label": "Fixed priced product - UK",
                      "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Product",
        "description": "Update a Product",
        "operationId": "putProductsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductEndpointUpdateProductRequestModel",
                "example": {
                  "name": "Fixed priced product",
                  "label": "Fixed priced product - UK"
                }
              },
              "examples": {
                "UpdateProductEndpointUpdateProductRequestModel": {
                  "summary": "",
                  "value": {
                    "name": "Fixed priced product",
                    "label": "Fixed priced product - UK"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse",
                  "example": {
                    "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                    "name": "Fixed priced product",
                    "label": "Fixed priced product - UK",
                    "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "ProductResponse": {
                    "summary": "",
                    "value": {
                      "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                      "name": "Fixed priced product",
                      "label": "Fixed priced product - UK",
                      "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/{id}": {
      "get": {
        "tags": [],
        "summary": "Get customer",
        "description": "Retrieve the details of one of your [Customers](/docs/customers).",
        "operationId": "getCustomersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer",
                  "example": {
                    "id": "e309e948-088e-4d77-b654-cd85498f1555",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "taxStatus": "TAXED",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "ID",
                        "syncTime": "2022-06-28T16:47:00Z"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "Customer": {
                    "summary": "",
                    "value": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update customer",
        "description": "Update the details of one of your [Customers](/docs/customers).",
        "operationId": "putCustomersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest",
                "example": {
                  "legalName": "John Doe",
                  "contactName": "John Doe",
                  "address": {
                    "line1": "Flat 1",
                    "line2": "123 Fake Street",
                    "town": "New York",
                    "state": "NY",
                    "postcode": "AB1 2EF",
                    "country": "US"
                  },
                  "email": "john@example.com",
                  "billingEmails": [
                    "exampleCorpInvoices@example.com"
                  ],
                  "telephone": "02010001000",
                  "url": "https://example.com/",
                  "label": "Example customer",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123456789"
                    },
                    {
                      "key": "Stripe",
                      "value": "cus_OCtCxqQDgu1uX9"
                    },
                    {
                      "key": "HubSpot",
                      "value": "123456789"
                    }
                  ],
                  "taxStatus": "TAXED",
                  "customerAliases": [
                    "b1c87177-088a-40ec-8917-9809343f3f9c"
                  ]
                }
              },
              "examples": {
                "UpdateCustomerRequest": {
                  "summary": "",
                  "value": {
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123456789"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9"
                      },
                      {
                        "key": "HubSpot",
                        "value": "123456789"
                      }
                    ],
                    "taxStatus": "TAXED",
                    "customerAliases": [
                      "b1c87177-088a-40ec-8917-9809343f3f9c"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer",
                  "example": {
                    "id": "e309e948-088e-4d77-b654-cd85498f1555",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "taxStatus": "TAXED",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "ID",
                        "syncTime": "2022-06-28T16:47:00Z"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "Customer": {
                    "summary": "",
                    "value": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete customer",
        "description": "Delete one of your [Customers](/docs/customers).",
        "operationId": "deleteCustomersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer",
                  "example": {
                    "id": "e309e948-088e-4d77-b654-cd85498f1555",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "taxStatus": "TAXED",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "ID",
                        "syncTime": "2022-06-28T16:47:00Z"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "Customer": {
                    "summary": "",
                    "value": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers": {
      "get": {
        "tags": [],
        "summary": "List Customers",
        "description": "List all [Customers](/docs/customers) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legalName",
            "in": "query",
            "description": "Filter by legal name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alias",
            "in": "query",
            "description": "Filter by alias",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Include archived customers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomersResponse",
                  "example": {
                    "items": [
                      {
                        "id": "e309e948-088e-4d77-b654-cd85498f1555",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                        "legalName": "John Doe",
                        "contactName": "John Doe",
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "email": "john@example.com",
                        "billingEmails": [
                          "exampleCorpInvoices@example.com"
                        ],
                        "telephone": "02010001000",
                        "url": "https://example.com/",
                        "taxStatus": "TAXED",
                        "label": "Example customer",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "ID",
                            "syncTime": "2022-06-28T16:47:00Z"
                          },
                          {
                            "key": "Stripe",
                            "value": "cus_OCtCxqQDgu1uX9",
                            "syncTime": "2022-06-28T16:47:00Z"
                          }
                        ],
                        "archivedAt": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCustomersResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "e309e948-088e-4d77-b654-cd85498f1555",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                          "legalName": "John Doe",
                          "contactName": "John Doe",
                          "address": {
                            "line1": "Flat 1",
                            "line2": "123 Fake Street",
                            "town": "New York",
                            "state": "NY",
                            "postcode": "AB1 2EF",
                            "country": "US"
                          },
                          "email": "john@example.com",
                          "billingEmails": [
                            "exampleCorpInvoices@example.com"
                          ],
                          "telephone": "02010001000",
                          "url": "https://example.com/",
                          "taxStatus": "TAXED",
                          "label": "Example customer",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "ID",
                              "syncTime": "2022-06-28T16:47:00Z"
                            },
                            {
                              "key": "Stripe",
                              "value": "cus_OCtCxqQDgu1uX9",
                              "syncTime": "2022-06-28T16:47:00Z"
                            }
                          ],
                          "archivedAt": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create customer",
        "description": "Create a new [Customer](/docs/customers), who you can send money to and receive money from.",
        "operationId": "postCustomers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest",
                "example": {
                  "legalName": "John Doe",
                  "contactName": "John Doe",
                  "address": {
                    "line1": "Flat 1",
                    "line2": "123 Fake Street",
                    "town": "New York",
                    "state": "NY",
                    "postcode": "AB1 2EF",
                    "country": "US"
                  },
                  "email": "john@example.com",
                  "billingEmails": [
                    "exampleCorpInvoices@example.com"
                  ],
                  "telephone": "john@example.com",
                  "url": "https://example.com/",
                  "label": "Example customer",
                  "taxStatus": "TAXED",
                  "customerAliases": [
                    "b1c87177-088a-40ec-8917-9809343f3f9c"
                  ],
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123456789"
                    },
                    {
                      "key": "Stripe",
                      "value": "cus_OCtCxqQDgu1uX9"
                    },
                    {
                      "key": "HubSpot",
                      "value": "123456789"
                    }
                  ]
                }
              },
              "examples": {
                "CreateCustomerRequest": {
                  "summary": "",
                  "value": {
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "john@example.com",
                    "url": "https://example.com/",
                    "label": "Example customer",
                    "taxStatus": "TAXED",
                    "customerAliases": [
                      "b1c87177-088a-40ec-8917-9809343f3f9c"
                    ],
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123456789"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9"
                      },
                      {
                        "key": "HubSpot",
                        "value": "123456789"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerResponse",
                  "example": {
                    "customer": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                },
                "examples": {
                  "CreateCustomerResponse": {
                    "summary": "",
                    "value": {
                      "customer": {
                        "id": "e309e948-088e-4d77-b654-cd85498f1555",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                        "legalName": "John Doe",
                        "contactName": "John Doe",
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "email": "john@example.com",
                        "billingEmails": [
                          "exampleCorpInvoices@example.com"
                        ],
                        "telephone": "02010001000",
                        "url": "https://example.com/",
                        "taxStatus": "TAXED",
                        "label": "Example customer",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "ID",
                            "syncTime": "2022-06-28T16:47:00Z"
                          },
                          {
                            "key": "Stripe",
                            "value": "cus_OCtCxqQDgu1uX9",
                            "syncTime": "2022-06-28T16:47:00Z"
                          }
                        ],
                        "archivedAt": "2022-06-28T16:47:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/{id}/archive": {
      "put": {
        "tags": [],
        "summary": "Archive Customer",
        "description": "Archive a [Customer](/docs/customers) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "putCustomersByIdArchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer",
                  "example": {
                    "id": "e309e948-088e-4d77-b654-cd85498f1555",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "taxStatus": "TAXED",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "ID",
                        "syncTime": "2022-06-28T16:47:00Z"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "Customer": {
                    "summary": "",
                    "value": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/by-alias/{alias}": {
      "get": {
        "tags": [],
        "summary": "Get customer by alias",
        "description": "Retrieve the details of one of your [Customers](/docs/customers) using one of their aliases.",
        "operationId": "getCustomersByAliasByAlias",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "Customer Alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer",
                  "example": {
                    "id": "e309e948-088e-4d77-b654-cd85498f1555",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "legalName": "John Doe",
                    "contactName": "John Doe",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "email": "john@example.com",
                    "billingEmails": [
                      "exampleCorpInvoices@example.com"
                    ],
                    "telephone": "02010001000",
                    "url": "https://example.com/",
                    "taxStatus": "TAXED",
                    "label": "Example customer",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "ID",
                        "syncTime": "2022-06-28T16:47:00Z"
                      },
                      {
                        "key": "Stripe",
                        "value": "cus_OCtCxqQDgu1uX9",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "Customer": {
                    "summary": "",
                    "value": {
                      "id": "e309e948-088e-4d77-b654-cd85498f1555",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "legalName": "John Doe",
                      "contactName": "John Doe",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "email": "john@example.com",
                      "billingEmails": [
                        "exampleCorpInvoices@example.com"
                      ],
                      "telephone": "02010001000",
                      "url": "https://example.com/",
                      "taxStatus": "TAXED",
                      "label": "Example customer",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "ID",
                          "syncTime": "2022-06-28T16:47:00Z"
                        },
                        {
                          "key": "Stripe",
                          "value": "cus_OCtCxqQDgu1uX9",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/{id}/aliases": {
      "get": {
        "tags": [],
        "summary": "Get Customer Aliases",
        "description": "Retrieve the details of one of your [Customer's](/docs/customers) aliases.",
        "operationId": "getCustomersByIdAliases",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomerAliasesEndpointEndpointResponse",
                  "example": {
                    "items": [
                      {
                        "id": "0185a140-194a-7e9d-9fae-6a034fd4a725",
                        "sequenceAccountId": "cd243b67-7d8c-42ee-b19f-b4e41f584415",
                        "customerId": "0185a142-54ff-7ce5-846a-fc188432da6e",
                        "value": "customer-alias-123",
                        "createdAt": "2022-10-01T00:00:00Z"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetCustomerAliasesEndpointEndpointResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "0185a140-194a-7e9d-9fae-6a034fd4a725",
                          "sequenceAccountId": "cd243b67-7d8c-42ee-b19f-b4e41f584415",
                          "customerId": "0185a142-54ff-7ce5-846a-fc188432da6e",
                          "value": "customer-alias-123",
                          "createdAt": "2022-10-01T00:00:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customer-aliases/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Customer Alias",
        "description": "Update a Customer Alias",
        "operationId": "putCustomerAliasesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerAliasEndpointUpdateCustomerAliasRequestModel",
                "example": {
                  "label": "CRM ID"
                }
              },
              "examples": {
                "UpdateCustomerAliasEndpointUpdateCustomerAliasRequestModel": {
                  "summary": "",
                  "value": {
                    "label": "CRM ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerAliasEndpointProductUpdateCustomerAliasResponseModel",
                  "example": {
                    "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                    "value": "external-customer-alias-123",
                    "createdAt": "2022-10-01T00:00:00Z",
                    "deletedAt": "2022-10-01T00:00:00Z",
                    "label": "CRM ID"
                  }
                },
                "examples": {
                  "UpdateCustomerAliasEndpointProductUpdateCustomerAliasResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                      "value": "external-customer-alias-123",
                      "createdAt": "2022-10-01T00:00:00Z",
                      "deletedAt": "2022-10-01T00:00:00Z",
                      "label": "CRM ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Customer Alias",
        "description": "Delete a Customer Alias",
        "operationId": "deleteCustomerAliasesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomerAliasEndpointProductDeleteCustomerAliasResponseModel",
                  "example": {
                    "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                    "value": "external-customer-alias-123",
                    "createdAt": "2022-10-01T00:00:00Z",
                    "deletedAt": "2022-10-01T00:00:00Z",
                    "label": "CRM ID"
                  }
                },
                "examples": {
                  "DeleteCustomerAliasEndpointProductDeleteCustomerAliasResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                      "value": "external-customer-alias-123",
                      "createdAt": "2022-10-01T00:00:00Z",
                      "deletedAt": "2022-10-01T00:00:00Z",
                      "label": "CRM ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customer-aliases": {
      "get": {
        "tags": [],
        "summary": "List all Customer Aliases",
        "description": "List all Customer Aliases",
        "operationId": "getCustomerAliases",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerAliasEndpointProductListCustomerAliasPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                        "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                        "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                        "value": "external-customer-alias-123",
                        "createdAt": "2022-10-01T00:00:00Z",
                        "deletedAt": "2022-10-01T00:00:00Z",
                        "label": "CRM ID"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCustomerAliasEndpointProductListCustomerAliasPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                          "value": "external-customer-alias-123",
                          "createdAt": "2022-10-01T00:00:00Z",
                          "deletedAt": "2022-10-01T00:00:00Z",
                          "label": "CRM ID"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Customer Alias",
        "description": "Create a new Customer Alias",
        "operationId": "postCustomerAliases",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerAliasEndpointCreateCustomerAliasRequestModel",
                "example": {
                  "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                  "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                  "value": "external-customer-alias-123",
                  "deletedAt": "2022-10-01T00:00:00Z",
                  "label": "CRM ID"
                }
              },
              "examples": {
                "CreateCustomerAliasEndpointCreateCustomerAliasRequestModel": {
                  "summary": "",
                  "value": {
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                    "value": "external-customer-alias-123",
                    "deletedAt": "2022-10-01T00:00:00Z",
                    "label": "CRM ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerAliasEndpointProductCreateCustomerAliasResponseModel",
                  "example": {
                    "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                    "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                    "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                    "value": "external-customer-alias-123",
                    "createdAt": "2022-10-01T00:00:00Z",
                    "deletedAt": "2022-10-01T00:00:00Z",
                    "label": "CRM ID"
                  }
                },
                "examples": {
                  "CreateCustomerAliasEndpointProductCreateCustomerAliasResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                      "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                      "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                      "value": "external-customer-alias-123",
                      "createdAt": "2022-10-01T00:00:00Z",
                      "deletedAt": "2022-10-01T00:00:00Z",
                      "label": "CRM ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/{customer}/contacts": {
      "post": {
        "tags": [],
        "summary": "Create a new Contact",
        "description": "Create a new Contact",
        "operationId": "postCustomersByCustomerContacts",
        "parameters": [
          {
            "name": "customer",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactEndpointCreateContactRequestModel",
                "example": {
                  "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                  "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                  "email": "jane.smith@example.com",
                  "firstName": "Jane",
                  "lastName": "Smith",
                  "contactType": "QUOTE_RECIPIENT",
                  "deletedAt": "2022-06-28T16:47:00Z"
                }
              },
              "examples": {
                "CreateContactEndpointCreateContactRequestModel": {
                  "summary": "",
                  "value": {
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                    "email": "jane.smith@example.com",
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "contactType": "QUOTE_RECIPIENT",
                    "deletedAt": "2022-06-28T16:47:00Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactEndpointProductCreateContactResponseModel",
                  "example": {
                    "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                    "email": "jane.smith@example.com",
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "contactType": "QUOTE_RECIPIENT",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "CreateContactEndpointProductCreateContactResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                      "email": "jane.smith@example.com",
                      "firstName": "Jane",
                      "lastName": "Smith",
                      "contactType": "QUOTE_RECIPIENT",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/customers/{customer}/contacts/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Contact",
        "description": "Update a Contact",
        "operationId": "putCustomersByCustomerContactsById",
        "parameters": [
          {
            "name": "customer",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactEndpointUpdateContactRequestModel",
                "example": {
                  "email": "jane.smith@example.com",
                  "firstName": "Jane",
                  "lastName": "Smith",
                  "contactType": "QUOTE_RECIPIENT"
                }
              },
              "examples": {
                "UpdateContactEndpointUpdateContactRequestModel": {
                  "summary": "",
                  "value": {
                    "email": "jane.smith@example.com",
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "contactType": "QUOTE_RECIPIENT"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactEndpointProductUpdateContactResponseModel",
                  "example": {
                    "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                    "email": "jane.smith@example.com",
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "contactType": "QUOTE_RECIPIENT",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "UpdateContactEndpointProductUpdateContactResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                      "email": "jane.smith@example.com",
                      "firstName": "Jane",
                      "lastName": "Smith",
                      "contactType": "QUOTE_RECIPIENT",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Contact",
        "description": "Delete a Contact",
        "operationId": "deleteCustomersByCustomerContactsById",
        "parameters": [
          {
            "name": "customer",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactEndpointProductDeleteContactResponseModel",
                  "example": {
                    "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                    "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                    "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                    "email": "jane.smith@example.com",
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "contactType": "QUOTE_RECIPIENT",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "DeleteContactEndpointProductDeleteContactResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
                      "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                      "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
                      "email": "jane.smith@example.com",
                      "firstName": "Jane",
                      "lastName": "Smith",
                      "contactType": "QUOTE_RECIPIENT",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "deletedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-products": {
      "get": {
        "tags": [],
        "summary": "List all billing products",
        "description": "List all products with billing prices",
        "operationId": "getBillingProducts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBillingProductsEndpointListProductResponsePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                        "name": "Fixed priced product",
                        "label": "Fixed priced product - UK",
                        "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "prices": []
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListBillingProductsEndpointListProductResponsePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                          "name": "Fixed priced product",
                          "label": "Fixed priced product - UK",
                          "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "prices": []
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/prices": {
      "get": {
        "tags": [],
        "summary": "List all Prices",
        "description": "List all Prices",
        "operationId": "getPrices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter by currency.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingFrequency",
            "in": "query",
            "description": "Filter by billing frequency.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Filter by product ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPriceEndpointProductListPricePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                        "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                        "name": "Demo Product",
                        "currency": "GBP",
                        "structure": {
                          "pricingType": "LINEAR",
                          "pricePerUnit": "0.25",
                          "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                          "isPricePercentage": false
                        },
                        "billingFrequency": "MONTHLY",
                        "billingType": "IN_ARREARS",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "parameters": [
                          {
                            "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                            "value": "10"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListPriceEndpointProductListPricePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                          "name": "Demo Product",
                          "currency": "GBP",
                          "structure": {
                            "pricingType": "LINEAR",
                            "pricePerUnit": "0.25",
                            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                            "isPricePercentage": false
                          },
                          "billingFrequency": "MONTHLY",
                          "billingType": "IN_ARREARS",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "parameters": [
                            {
                              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                              "value": "10"
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Price",
        "description": "Create a new Price",
        "operationId": "postPrices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceEndpointCreatePriceRequestModel",
                "example": {
                  "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                  "name": "Demo Product",
                  "currency": "GBP",
                  "structure": {
                    "pricingType": "LINEAR",
                    "pricePerUnit": "0.25",
                    "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                    "isPricePercentage": false
                  },
                  "billingFrequency": "MONTHLY",
                  "billingType": "IN_ARREARS",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ],
                  "parameters": [
                    {
                      "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                      "value": "10"
                    }
                  ]
                }
              },
              "examples": {
                "CreatePriceEndpointCreatePriceRequestModel": {
                  "summary": "",
                  "value": {
                    "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePriceEndpointProductCreatePriceResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "CreatePriceEndpointProductCreatePriceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                      "name": "Demo Product",
                      "currency": "GBP",
                      "structure": {
                        "pricingType": "LINEAR",
                        "pricePerUnit": "0.25",
                        "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                        "isPricePercentage": false
                      },
                      "billingFrequency": "MONTHLY",
                      "billingType": "IN_ARREARS",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "parameters": [
                        {
                          "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                          "value": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/prices/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Price by ID",
        "description": "Get a Price by ID",
        "operationId": "getPricesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Price ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPriceEndpointProductGetPriceResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetPriceEndpointProductGetPriceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                      "name": "Demo Product",
                      "currency": "GBP",
                      "structure": {
                        "pricingType": "LINEAR",
                        "pricePerUnit": "0.25",
                        "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                        "isPricePercentage": false
                      },
                      "billingFrequency": "MONTHLY",
                      "billingType": "IN_ARREARS",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "parameters": [
                        {
                          "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                          "value": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Price",
        "description": "Update a Price",
        "operationId": "putPricesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Price ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriceEndpointUpdatePriceRequestModel",
                "example": {
                  "name": "Demo Product"
                }
              },
              "examples": {
                "UpdatePriceEndpointUpdatePriceRequestModel": {
                  "summary": "",
                  "value": {
                    "name": "Demo Product"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePriceEndpointProductUpdatePriceResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "UpdatePriceEndpointProductUpdatePriceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                      "name": "Demo Product",
                      "currency": "GBP",
                      "structure": {
                        "pricingType": "LINEAR",
                        "pricePerUnit": "0.25",
                        "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                        "isPricePercentage": false
                      },
                      "billingFrequency": "MONTHLY",
                      "billingType": "IN_ARREARS",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "parameters": [
                        {
                          "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                          "value": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Price",
        "description": "Delete a Price",
        "operationId": "deletePricesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Price ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePriceEndpointProductDeletePriceResponseModel",
                  "example": {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                },
                "examples": {
                  "DeletePriceEndpointProductDeletePriceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                      "name": "Demo Product",
                      "currency": "GBP",
                      "structure": {
                        "pricingType": "LINEAR",
                        "pricePerUnit": "0.25",
                        "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                        "isPricePercentage": false
                      },
                      "billingFrequency": "MONTHLY",
                      "billingType": "IN_ARREARS",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "parameters": [
                        {
                          "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                          "value": "10"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/plans": {
      "get": {
        "tags": [],
        "summary": "List Plans",
        "description": "List all Plans within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getPlans",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Provide this parameter with a returned offset to retrieve the next page of entities after the given offset. Omit this parameter alongside 'before' in order to retrieve the first page of results",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Provide this parameter with a returned offset to retrieve the next page of entities before the given offset. Omit this parameter alongside 'after' in order to retrieve the first page of results",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Filter by created before date.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Filter by created after date.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by plan type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPlansEndpointListPlansResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                        "name": "Sample plan",
                        "label": "Sample plan - EU",
                        "type": "REUSABLE",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "version": 1,
                        "currency": "GBP",
                        "minimum": "100.00",
                        "prices": [
                          {
                            "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                            "name": "Demo Product",
                            "currency": "GBP",
                            "structure": {
                              "pricingType": "LINEAR",
                              "pricePerUnit": "0.25",
                              "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                              "isPricePercentage": false
                            },
                            "billingFrequency": "MONTHLY",
                            "billingType": "IN_ARREARS",
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z",
                            "deletedAt": "2022-06-28T16:47:00Z",
                            "externalIds": [
                              {
                                "key": "Xero",
                                "value": "123"
                              }
                            ],
                            "parameters": [
                              {
                                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                                "value": "10"
                              }
                            ]
                          }
                        ],
                        "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                        "eligibleCustomerIds": [],
                        "status": "LIVE",
                        "versionEffectiveFrom": "2022-09-01",
                        "versionChangeBehaviour": "IMMEDIATE",
                        "createdAt": "2022-09-01T16:47:00Z",
                        "updatedAt": "2022-09-01T16:47:00Z",
                        "schedulesCount": 0
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListPlansEndpointListPlansResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                          "name": "Sample plan",
                          "label": "Sample plan - EU",
                          "type": "REUSABLE",
                          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                          "version": 1,
                          "currency": "GBP",
                          "minimum": "100.00",
                          "prices": [
                            {
                              "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                              "name": "Demo Product",
                              "currency": "GBP",
                              "structure": {
                                "pricingType": "LINEAR",
                                "pricePerUnit": "0.25",
                                "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                                "isPricePercentage": false
                              },
                              "billingFrequency": "MONTHLY",
                              "billingType": "IN_ARREARS",
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z",
                              "deletedAt": "2022-06-28T16:47:00Z",
                              "externalIds": [
                                {
                                  "key": "Xero",
                                  "value": "123"
                                }
                              ],
                              "parameters": [
                                {
                                  "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                                  "value": "10"
                                }
                              ]
                            }
                          ],
                          "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                          "eligibleCustomerIds": [],
                          "status": "LIVE",
                          "versionEffectiveFrom": "2022-09-01",
                          "versionChangeBehaviour": "IMMEDIATE",
                          "createdAt": "2022-09-01T16:47:00Z",
                          "updatedAt": "2022-09-01T16:47:00Z",
                          "schedulesCount": 0
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a billing plan",
        "description": "Create a new [Plan](/docs/plans). A plan represents a collection of [Products](/docs/products) that can be subscribed to one of your [Customers](/docs/customers)",
        "operationId": "postPlans",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanRequest",
                "example": {
                  "name": "Sample plan",
                  "label": "Sample plan - EU",
                  "type": "REUSABLE",
                  "currency": "GBP",
                  "minimum": "100.00",
                  "priceIds": [
                    "723a5433-7771-4ce6-bd0d-2324016bd9c2",
                    "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
                  ],
                  "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                  "eligibleCustomerIds": []
                }
              },
              "examples": {
                "CreatePlanRequest": {
                  "summary": "",
                  "value": {
                    "name": "Sample plan",
                    "label": "Sample plan - EU",
                    "type": "REUSABLE",
                    "currency": "GBP",
                    "minimum": "100.00",
                    "priceIds": [
                      "723a5433-7771-4ce6-bd0d-2324016bd9c2",
                      "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
                    ],
                    "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                    "eligibleCustomerIds": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan",
                  "example": {
                    "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                    "name": "Sample plan",
                    "label": "Sample plan - EU",
                    "type": "REUSABLE",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "version": 1,
                    "currency": "GBP",
                    "minimum": "100.00",
                    "prices": [
                      {
                        "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                        "name": "Demo Product",
                        "currency": "GBP",
                        "structure": {
                          "pricingType": "LINEAR",
                          "pricePerUnit": "0.25",
                          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                          "isPricePercentage": false
                        },
                        "billingFrequency": "MONTHLY",
                        "billingType": "IN_ARREARS",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "deletedAt": "2022-06-28T16:47:00Z",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "parameters": [
                          {
                            "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                            "value": "10"
                          }
                        ]
                      }
                    ],
                    "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                    "eligibleCustomerIds": [],
                    "status": "LIVE",
                    "versionEffectiveFrom": "2022-09-01",
                    "versionChangeBehaviour": "IMMEDIATE",
                    "createdAt": "2022-09-01T16:47:00Z",
                    "updatedAt": "2022-09-01T16:47:00Z",
                    "schedulesCount": 0
                  }
                },
                "examples": {
                  "Plan": {
                    "summary": "",
                    "value": {
                      "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                      "name": "Sample plan",
                      "label": "Sample plan - EU",
                      "type": "REUSABLE",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "version": 1,
                      "currency": "GBP",
                      "minimum": "100.00",
                      "prices": [
                        {
                          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                          "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                          "name": "Demo Product",
                          "currency": "GBP",
                          "structure": {
                            "pricingType": "LINEAR",
                            "pricePerUnit": "0.25",
                            "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                            "isPricePercentage": false
                          },
                          "billingFrequency": "MONTHLY",
                          "billingType": "IN_ARREARS",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "deletedAt": "2022-06-28T16:47:00Z",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "parameters": [
                            {
                              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                              "value": "10"
                            }
                          ]
                        }
                      ],
                      "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                      "eligibleCustomerIds": [],
                      "status": "LIVE",
                      "versionEffectiveFrom": "2022-09-01",
                      "versionChangeBehaviour": "IMMEDIATE",
                      "createdAt": "2022-09-01T16:47:00Z",
                      "updatedAt": "2022-09-01T16:47:00Z",
                      "schedulesCount": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseErrors",
                  "example": {
                    "errors": [
                      {
                        "key": "",
                        "error": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
                      }
                    ]
                  }
                },
                "examples": {
                  "DatabaseErrors": {
                    "summary": "",
                    "value": {
                      "errors": [
                        {
                          "key": "",
                          "error": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/plans/{planId}": {
      "get": {
        "tags": [],
        "summary": "Get Plan",
        "description": "Retrieve the details of one of your Plans.",
        "operationId": "getPlansByPlanId",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "Plan ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan",
                  "example": {
                    "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                    "name": "Sample plan",
                    "label": "Sample plan - EU",
                    "type": "REUSABLE",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "version": 1,
                    "currency": "GBP",
                    "minimum": "100.00",
                    "prices": [
                      {
                        "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                        "name": "Demo Product",
                        "currency": "GBP",
                        "structure": {
                          "pricingType": "LINEAR",
                          "pricePerUnit": "0.25",
                          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                          "isPricePercentage": false
                        },
                        "billingFrequency": "MONTHLY",
                        "billingType": "IN_ARREARS",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "deletedAt": "2022-06-28T16:47:00Z",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "parameters": [
                          {
                            "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                            "value": "10"
                          }
                        ]
                      }
                    ],
                    "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                    "eligibleCustomerIds": [],
                    "status": "LIVE",
                    "versionEffectiveFrom": "2022-09-01",
                    "versionChangeBehaviour": "IMMEDIATE",
                    "createdAt": "2022-09-01T16:47:00Z",
                    "updatedAt": "2022-09-01T16:47:00Z",
                    "schedulesCount": 0
                  }
                },
                "examples": {
                  "Plan": {
                    "summary": "",
                    "value": {
                      "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                      "name": "Sample plan",
                      "label": "Sample plan - EU",
                      "type": "REUSABLE",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "version": 1,
                      "currency": "GBP",
                      "minimum": "100.00",
                      "prices": [
                        {
                          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                          "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                          "name": "Demo Product",
                          "currency": "GBP",
                          "structure": {
                            "pricingType": "LINEAR",
                            "pricePerUnit": "0.25",
                            "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                            "isPricePercentage": false
                          },
                          "billingFrequency": "MONTHLY",
                          "billingType": "IN_ARREARS",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "deletedAt": "2022-06-28T16:47:00Z",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "parameters": [
                            {
                              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                              "value": "10"
                            }
                          ]
                        }
                      ],
                      "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                      "eligibleCustomerIds": [],
                      "status": "LIVE",
                      "versionEffectiveFrom": "2022-09-01",
                      "versionChangeBehaviour": "IMMEDIATE",
                      "createdAt": "2022-09-01T16:47:00Z",
                      "updatedAt": "2022-09-01T16:47:00Z",
                      "schedulesCount": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update Plan",
        "description": "Update an existing [Plan](/docs/plans) within one of your [Sequence Accounts](/docs/organisations-and-accounts).As a result a new version of the plan will be created",
        "operationId": "putPlansByPlanId",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "Plan ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanRequest",
                "example": {
                  "name": "Sample plan",
                  "label": "Sample plan - EU",
                  "currency": "GBP",
                  "minimum": "100.00",
                  "priceIds": [
                    "723a5433-7771-4ce6-bd0d-2324016bd9c2",
                    "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
                  ],
                  "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                  "eligibleCustomerIds": [],
                  "versionEffectiveFrom": "2025-03-14",
                  "versionChangeBehaviour": "NEXT_BILLING_DATE",
                  "makeVersionEffectiveFromOutset": true
                }
              },
              "examples": {
                "UpdatePlanRequest": {
                  "summary": "",
                  "value": {
                    "name": "Sample plan",
                    "label": "Sample plan - EU",
                    "currency": "GBP",
                    "minimum": "100.00",
                    "priceIds": [
                      "723a5433-7771-4ce6-bd0d-2324016bd9c2",
                      "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
                    ],
                    "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                    "eligibleCustomerIds": [],
                    "versionEffectiveFrom": "2025-03-14",
                    "versionChangeBehaviour": "NEXT_BILLING_DATE",
                    "makeVersionEffectiveFromOutset": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan",
                  "example": {
                    "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                    "name": "Sample plan",
                    "label": "Sample plan - EU",
                    "type": "REUSABLE",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "version": 1,
                    "currency": "GBP",
                    "minimum": "100.00",
                    "prices": [
                      {
                        "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                        "name": "Demo Product",
                        "currency": "GBP",
                        "structure": {
                          "pricingType": "LINEAR",
                          "pricePerUnit": "0.25",
                          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                          "isPricePercentage": false
                        },
                        "billingFrequency": "MONTHLY",
                        "billingType": "IN_ARREARS",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "deletedAt": "2022-06-28T16:47:00Z",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "parameters": [
                          {
                            "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                            "value": "10"
                          }
                        ]
                      }
                    ],
                    "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                    "eligibleCustomerIds": [],
                    "status": "LIVE",
                    "versionEffectiveFrom": "2022-09-01",
                    "versionChangeBehaviour": "IMMEDIATE",
                    "createdAt": "2022-09-01T16:47:00Z",
                    "updatedAt": "2022-09-01T16:47:00Z",
                    "schedulesCount": 0
                  }
                },
                "examples": {
                  "Plan": {
                    "summary": "",
                    "value": {
                      "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                      "name": "Sample plan",
                      "label": "Sample plan - EU",
                      "type": "REUSABLE",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "version": 1,
                      "currency": "GBP",
                      "minimum": "100.00",
                      "prices": [
                        {
                          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                          "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                          "name": "Demo Product",
                          "currency": "GBP",
                          "structure": {
                            "pricingType": "LINEAR",
                            "pricePerUnit": "0.25",
                            "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                            "isPricePercentage": false
                          },
                          "billingFrequency": "MONTHLY",
                          "billingType": "IN_ARREARS",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "deletedAt": "2022-06-28T16:47:00Z",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "parameters": [
                            {
                              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                              "value": "10"
                            }
                          ]
                        }
                      ],
                      "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                      "eligibleCustomerIds": [],
                      "status": "LIVE",
                      "versionEffectiveFrom": "2022-09-01",
                      "versionChangeBehaviour": "IMMEDIATE",
                      "createdAt": "2022-09-01T16:47:00Z",
                      "updatedAt": "2022-09-01T16:47:00Z",
                      "schedulesCount": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/time-travellers": {
      "get": {
        "tags": [],
        "summary": "List all Time Travellers",
        "description": "List all Time Travellers",
        "operationId": "getTimeTravellers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTimeTravellerEndpointProductListTimeTravellerPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                        "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                        "createdAt": "2022-10-07T14:12:08.826121Z",
                        "updatedAt": "2022-10-07T14:12:08.826121Z",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "frozenTime": "2022-10-07T14:12:08.826121Z",
                        "status": "READY"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListTimeTravellerEndpointProductListTimeTravellerPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                          "createdAt": "2022-10-07T14:12:08.826121Z",
                          "updatedAt": "2022-10-07T14:12:08.826121Z",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "frozenTime": "2022-10-07T14:12:08.826121Z",
                          "status": "READY"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Time Traveller",
        "description": "Create a new Time Traveller",
        "operationId": "postTimeTravellers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTimeTravellerEndpointCreateTimeTravellerRequestModel",
                "example": {
                  "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                  "frozenTime": "2022-10-07T14:12:08.826121Z"
                }
              },
              "examples": {
                "CreateTimeTravellerEndpointCreateTimeTravellerRequestModel": {
                  "summary": "",
                  "value": {
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "frozenTime": "2022-10-07T14:12:08.826121Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTimeTravellerEndpointProductCreateTimeTravellerResponseModel",
                  "example": {
                    "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "createdAt": "2022-10-07T14:12:08.826121Z",
                    "updatedAt": "2022-10-07T14:12:08.826121Z",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "frozenTime": "2022-10-07T14:12:08.826121Z",
                    "status": "READY"
                  }
                },
                "examples": {
                  "CreateTimeTravellerEndpointProductCreateTimeTravellerResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "createdAt": "2022-10-07T14:12:08.826121Z",
                      "updatedAt": "2022-10-07T14:12:08.826121Z",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "frozenTime": "2022-10-07T14:12:08.826121Z",
                      "status": "READY"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/time-travellers/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Time Traveller by ID",
        "description": "Get a Time Traveller by ID",
        "operationId": "getTimeTravellersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeTravellerEndpointProductGetTimeTravellerResponseModel",
                  "example": {
                    "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "createdAt": "2022-10-07T14:12:08.826121Z",
                    "updatedAt": "2022-10-07T14:12:08.826121Z",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "frozenTime": "2022-10-07T14:12:08.826121Z",
                    "status": "READY"
                  }
                },
                "examples": {
                  "GetTimeTravellerEndpointProductGetTimeTravellerResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "createdAt": "2022-10-07T14:12:08.826121Z",
                      "updatedAt": "2022-10-07T14:12:08.826121Z",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "frozenTime": "2022-10-07T14:12:08.826121Z",
                      "status": "READY"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Time Traveller",
        "description": "Update a Time Traveller",
        "operationId": "putTimeTravellersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTimeTravellerEndpointUpdateTimeTravellerRequestModel",
                "example": {
                  "frozenTime": "2022-10-07T14:12:08.826121Z"
                }
              },
              "examples": {
                "UpdateTimeTravellerEndpointUpdateTimeTravellerRequestModel": {
                  "summary": "",
                  "value": {
                    "frozenTime": "2022-10-07T14:12:08.826121Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTimeTravellerEndpointProductUpdateTimeTravellerResponseModel",
                  "example": {
                    "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "createdAt": "2022-10-07T14:12:08.826121Z",
                    "updatedAt": "2022-10-07T14:12:08.826121Z",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "frozenTime": "2022-10-07T14:12:08.826121Z",
                    "status": "READY"
                  }
                },
                "examples": {
                  "UpdateTimeTravellerEndpointProductUpdateTimeTravellerResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "createdAt": "2022-10-07T14:12:08.826121Z",
                      "updatedAt": "2022-10-07T14:12:08.826121Z",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "frozenTime": "2022-10-07T14:12:08.826121Z",
                      "status": "READY"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/discounts": {
      "get": {
        "tags": [],
        "summary": "List all Discounts",
        "description": "List all Discounts",
        "operationId": "getDiscounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDiscountEndpointProductListDiscountPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                        "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                        "priceIds": [
                          "e007e884-5100-4183-8355-4771865cb4d7"
                        ],
                        "separateLineItem": false,
                        "amount": 25,
                        "discountCalculationType": "PERCENTAGE",
                        "message": "Loyalty Discount",
                        "validFrom": "2023-01-01",
                        "validTo": "2023-01-31",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListDiscountEndpointProductListDiscountPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                          "priceIds": [
                            "e007e884-5100-4183-8355-4771865cb4d7"
                          ],
                          "separateLineItem": false,
                          "amount": 25,
                          "discountCalculationType": "PERCENTAGE",
                          "message": "Loyalty Discount",
                          "validFrom": "2023-01-01",
                          "validTo": "2023-01-31",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Discount",
        "description": "Create a new Discount",
        "operationId": "postDiscounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscountEndpointCreateDiscountRequestModel",
                "example": {
                  "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                  "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                  "priceIds": [
                    "e007e884-5100-4183-8355-4771865cb4d7"
                  ],
                  "separateLineItem": false,
                  "amount": 25,
                  "discountCalculationType": "PERCENTAGE",
                  "message": "Loyalty Discount",
                  "validFrom": "2023-01-01",
                  "validTo": "2023-01-31"
                }
              },
              "examples": {
                "CreateDiscountEndpointCreateDiscountRequestModel": {
                  "summary": "",
                  "value": {
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDiscountEndpointProductCreateDiscountResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "CreateDiscountEndpointProductCreateDiscountResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                      "priceIds": [
                        "e007e884-5100-4183-8355-4771865cb4d7"
                      ],
                      "separateLineItem": false,
                      "amount": 25,
                      "discountCalculationType": "PERCENTAGE",
                      "message": "Loyalty Discount",
                      "validFrom": "2023-01-01",
                      "validTo": "2023-01-31",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/discounts/filtered": {
      "get": {
        "tags": [],
        "summary": "List all Discounts by a provided id",
        "description": "List all Discounts by a provided id",
        "operationId": "getDiscountsFiltered",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingScheduleId",
            "in": "query",
            "description": "The id to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListByQueryIdDiscountEndpointProductListByQueryIdDiscountPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                        "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "priceIds": [
                          "e007e884-5100-4183-8355-4771865cb4d7"
                        ],
                        "separateLineItem": false,
                        "amount": 25,
                        "discountCalculationType": "PERCENTAGE",
                        "message": "Loyalty Discount",
                        "validFrom": "2023-01-01",
                        "validTo": "2023-01-31",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListByQueryIdDiscountEndpointProductListByQueryIdDiscountPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "priceIds": [
                            "e007e884-5100-4183-8355-4771865cb4d7"
                          ],
                          "separateLineItem": false,
                          "amount": 25,
                          "discountCalculationType": "PERCENTAGE",
                          "message": "Loyalty Discount",
                          "validFrom": "2023-01-01",
                          "validTo": "2023-01-31",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/discounts/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Discount by ID",
        "description": "Get a Discount by ID",
        "operationId": "getDiscountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDiscountEndpointProductGetDiscountResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "GetDiscountEndpointProductGetDiscountResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                      "priceIds": [
                        "e007e884-5100-4183-8355-4771865cb4d7"
                      ],
                      "separateLineItem": false,
                      "amount": 25,
                      "discountCalculationType": "PERCENTAGE",
                      "message": "Loyalty Discount",
                      "validFrom": "2023-01-01",
                      "validTo": "2023-01-31",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Discount",
        "description": "Update a Discount",
        "operationId": "putDiscountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscountEndpointUpdateDiscountRequestModel",
                "example": {
                  "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                  "priceIds": [
                    "e007e884-5100-4183-8355-4771865cb4d7"
                  ],
                  "separateLineItem": false,
                  "amount": 25,
                  "discountCalculationType": "PERCENTAGE",
                  "message": "Loyalty Discount",
                  "validFrom": "2023-01-01",
                  "validTo": "2023-01-31"
                }
              },
              "examples": {
                "UpdateDiscountEndpointUpdateDiscountRequestModel": {
                  "summary": "",
                  "value": {
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDiscountEndpointProductUpdateDiscountResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "UpdateDiscountEndpointProductUpdateDiscountResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                      "priceIds": [
                        "e007e884-5100-4183-8355-4771865cb4d7"
                      ],
                      "separateLineItem": false,
                      "amount": 25,
                      "discountCalculationType": "PERCENTAGE",
                      "message": "Loyalty Discount",
                      "validFrom": "2023-01-01",
                      "validTo": "2023-01-31",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Discount",
        "description": "Delete a Discount",
        "operationId": "deleteDiscountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDiscountEndpointProductDeleteDiscountResponseModel",
                  "example": {
                    "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                    "priceIds": [
                      "e007e884-5100-4183-8355-4771865cb4d7"
                    ],
                    "separateLineItem": false,
                    "amount": 25,
                    "discountCalculationType": "PERCENTAGE",
                    "message": "Loyalty Discount",
                    "validFrom": "2023-01-01",
                    "validTo": "2023-01-31",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                },
                "examples": {
                  "DeleteDiscountEndpointProductDeleteDiscountResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                      "priceIds": [
                        "e007e884-5100-4183-8355-4771865cb4d7"
                      ],
                      "separateLineItem": false,
                      "amount": 25,
                      "discountCalculationType": "PERCENTAGE",
                      "message": "Loyalty Discount",
                      "validFrom": "2023-01-01",
                      "validTo": "2023-01-31",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credits/filtered": {
      "get": {
        "tags": [],
        "summary": "List all Credit Grants by a provided id",
        "description": "List all Credit Grants by a provided id",
        "operationId": "getCreditsFiltered",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "The id to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListByQueryIdCreditGrantEndpointProductList_by_query_idCreditGrantPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                        "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                        "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                        "name": "On-boarding Credits",
                        "creditUnitType": "CURRENCY",
                        "currency": "GBP",
                        "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "amount": 10,
                        "costOfCredit": 10,
                        "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                        "effectiveDate": "2023-01-01",
                        "expiryDate": "2023-01-31",
                        "createdAt": "2022-10-07T14:12:08.826121Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListByQueryIdCreditGrantEndpointProductList_by_query_idCreditGrantPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                          "name": "On-boarding Credits",
                          "creditUnitType": "CURRENCY",
                          "currency": "GBP",
                          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "amount": 10,
                          "costOfCredit": 10,
                          "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                          "effectiveDate": "2023-01-01",
                          "expiryDate": "2023-01-31",
                          "createdAt": "2022-10-07T14:12:08.826121Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credits/{customerId}/grants": {
      "get": {
        "tags": [],
        "summary": "List Credit Grants for a customer",
        "description": "List all Credit Grants and their outstanding balances where the balance is non-zero",
        "operationId": "getCreditsByCustomerIdGrants",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreditGrantsForCustomerEndpointCreditGrantsResponse",
                  "example": {
                    "items": [
                      {
                        "id": "22efb229-c474-407c-bbf7-f5e113ee8b20",
                        "name": "API Calls",
                        "grantAmount": 1000,
                        "balance": 324,
                        "issueDate": "2022-02-22",
                        "expiryDate": "2030-03-03"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListCreditGrantsForCustomerEndpointCreditGrantsResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "22efb229-c474-407c-bbf7-f5e113ee8b20",
                          "name": "API Calls",
                          "grantAmount": 1000,
                          "balance": 324,
                          "issueDate": "2022-02-22",
                          "expiryDate": "2030-03-03"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credits/{customerId}/balances": {
      "get": {
        "tags": [],
        "summary": "List Credit Balances for a customer",
        "description": "List all Credit Balances including their grants and transactions",
        "operationId": "getCreditsByCustomerIdBalances",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditBalancesReply",
                  "example": {
                    "items": [
                      {
                        "id": "6587e308-ab0d-4a58-8cc1-1d168490de7b",
                        "type": "CASH",
                        "name": "Credits",
                        "balance": "50",
                        "grants": [
                          {
                            "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                            "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
                            "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
                            "type": "CASH",
                            "currency": "GBP",
                            "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
                            "name": "GBP",
                            "originalAmount": "10",
                            "currentBalance": "1",
                            "expiryDate": "2024-01-02",
                            "costOfCredit": "10",
                            "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
                            "effectiveDate": "2024-01-01",
                            "createdAt": "2024-01-01T12:00:00Z"
                          }
                        ],
                        "transactions": [
                          {
                            "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
                            "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                            "reason": "because",
                            "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
                            "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
                            "type": "CREDIT",
                            "amount": "10",
                            "date": "2024-01-01"
                          }
                        ]
                      }
                    ]
                  }
                },
                "examples": {
                  "CreditBalancesReply": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "6587e308-ab0d-4a58-8cc1-1d168490de7b",
                          "type": "CASH",
                          "name": "Credits",
                          "balance": "50",
                          "grants": [
                            {
                              "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                              "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
                              "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
                              "type": "CASH",
                              "currency": "GBP",
                              "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
                              "name": "GBP",
                              "originalAmount": "10",
                              "currentBalance": "1",
                              "expiryDate": "2024-01-02",
                              "costOfCredit": "10",
                              "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
                              "effectiveDate": "2024-01-01",
                              "createdAt": "2024-01-01T12:00:00Z"
                            }
                          ],
                          "transactions": [
                            {
                              "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
                              "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                              "reason": "because",
                              "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
                              "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
                              "type": "CREDIT",
                              "amount": "10",
                              "date": "2024-01-01"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credits": {
      "get": {
        "tags": [],
        "summary": "List all Credit Grants",
        "description": "List all Credit Grants",
        "operationId": "getCredits",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreditGrantEndpointProductListCreditGrantPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                        "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                        "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                        "name": "On-boarding Credits",
                        "creditUnitType": "CURRENCY",
                        "currency": "GBP",
                        "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                        "amount": 10,
                        "costOfCredit": 10,
                        "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                        "effectiveDate": "2023-01-01",
                        "expiryDate": "2023-01-31",
                        "createdAt": "2022-10-07T14:12:08.826121Z"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCreditGrantEndpointProductListCreditGrantPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                          "name": "On-boarding Credits",
                          "creditUnitType": "CURRENCY",
                          "currency": "GBP",
                          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                          "amount": 10,
                          "costOfCredit": 10,
                          "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                          "effectiveDate": "2023-01-01",
                          "expiryDate": "2023-01-31",
                          "createdAt": "2022-10-07T14:12:08.826121Z"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new CreditGrant",
        "description": "Create a new CreditGrant",
        "operationId": "postCredits",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditGrantEndpointCreateCreditGrantRequestModel",
                "example": {
                  "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                  "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                  "name": "On-boarding Credits",
                  "creditUnitType": "CURRENCY",
                  "currency": "GBP",
                  "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                  "amount": 10,
                  "costOfCredit": 10,
                  "effectiveDate": "2023-01-01",
                  "expiryDate": "2023-01-31"
                }
              },
              "examples": {
                "CreateCreditGrantEndpointCreateCreditGrantRequestModel": {
                  "summary": "",
                  "value": {
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "name": "On-boarding Credits",
                    "creditUnitType": "CURRENCY",
                    "currency": "GBP",
                    "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "amount": 10,
                    "costOfCredit": 10,
                    "effectiveDate": "2023-01-01",
                    "expiryDate": "2023-01-31"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditGrantEndpointProductCreateCreditGrantResponseModel",
                  "example": {
                    "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "name": "On-boarding Credits",
                    "creditUnitType": "CURRENCY",
                    "currency": "GBP",
                    "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "amount": 10,
                    "costOfCredit": 10,
                    "effectiveDate": "2023-01-01",
                    "expiryDate": "2023-01-31",
                    "createdAt": "2022-10-07T14:12:08.826121Z"
                  }
                },
                "examples": {
                  "CreateCreditGrantEndpointProductCreateCreditGrantResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "name": "On-boarding Credits",
                      "creditUnitType": "CURRENCY",
                      "currency": "GBP",
                      "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "amount": 10,
                      "costOfCredit": 10,
                      "effectiveDate": "2023-01-01",
                      "expiryDate": "2023-01-31",
                      "createdAt": "2022-10-07T14:12:08.826121Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credits/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Credit Grant by ID",
        "description": "Get a Credit Grant by ID",
        "operationId": "getCreditsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Grant ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditGrantEndpointProductGetCreditGrantResponseModel",
                  "example": {
                    "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                    "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "name": "On-boarding Credits",
                    "creditUnitType": "CURRENCY",
                    "currency": "GBP",
                    "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "amount": 10,
                    "costOfCredit": 10,
                    "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                    "effectiveDate": "2023-01-01",
                    "expiryDate": "2023-01-31",
                    "createdAt": "2022-10-07T14:12:08.826121Z"
                  }
                },
                "examples": {
                  "GetCreditGrantEndpointProductGetCreditGrantResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                      "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "name": "On-boarding Credits",
                      "creditUnitType": "CURRENCY",
                      "currency": "GBP",
                      "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                      "amount": 10,
                      "costOfCredit": 10,
                      "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                      "effectiveDate": "2023-01-01",
                      "expiryDate": "2023-01-31",
                      "createdAt": "2022-10-07T14:12:08.826121Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules": {
      "get": {
        "tags": [],
        "summary": "List all Billing Schedules",
        "description": "List all Billing Schedules within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getBillingSchedules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter by label.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "query",
            "description": "Filter by plan ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by customer ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingScheduleStatus",
            "in": "query",
            "description": "Filter by status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoSendInvoices",
            "in": "query",
            "description": "Filter by auto send invoices.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArchivedSchedules",
            "in": "query",
            "description": "Include archived schedules.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBillingSchedulesEndpointListBillingSchedulesResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                        "status": "ACTIVE",
                        "startDate": "2022-01-01",
                        "endDate": "2022-12-01",
                        "taxRates": [
                          {
                            "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                            "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                          }
                        ],
                        "firstBillingDate": "2022-02-02",
                        "autoIssueInvoices": false,
                        "purchaseOrderNumber": "PO123",
                        "reference": "ref",
                        "label": "label",
                        "recurrenceDayOfMonth": 1,
                        "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "priceIds": [
                          "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                        ],
                        "prices": [
                          {
                            "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                            "name": "Demo Product",
                            "currency": "GBP",
                            "structure": {
                              "pricingType": "LINEAR",
                              "pricePerUnit": "0.25",
                              "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                              "isPricePercentage": false
                            },
                            "billingFrequency": "MONTHLY",
                            "billingType": "IN_ARREARS",
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z",
                            "deletedAt": "2022-06-28T16:47:00Z",
                            "externalIds": [],
                            "parameters": [
                              {
                                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                                "value": "10"
                              }
                            ]
                          }
                        ],
                        "type": "PLAN",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z",
                        "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                        "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                        "phases": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "createdAt": "2022-06-28T16:47:00Z",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "priceIds": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "startDate": "2022-01-01",
                            "endDate": "2022-06-30",
                            "discounts": [
                              {
                                "restrictToPrices": [
                                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                                ],
                                "type": "PERCENTAGE",
                                "amount": 0.15,
                                "message": "15% Discount",
                                "separateLineItem": true
                              }
                            ],
                            "minimums": [
                              {
                                "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                                "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                                "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                                "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                                "amount": 100,
                                "restrictToPrices": [
                                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                                ],
                                "createdAt": "2022-06-28T16:47:00Z",
                                "updatedAt": "2022-06-28T16:47:00Z"
                              }
                            ]
                          }
                        ],
                        "archivedAt": "2022-06-28T16:47:00Z",
                        "rollUpBilling": false
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListBillingSchedulesEndpointListBillingSchedulesResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                          "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                          "status": "ACTIVE",
                          "startDate": "2022-01-01",
                          "endDate": "2022-12-01",
                          "taxRates": [
                            {
                              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                            }
                          ],
                          "firstBillingDate": "2022-02-02",
                          "autoIssueInvoices": false,
                          "purchaseOrderNumber": "PO123",
                          "reference": "ref",
                          "label": "label",
                          "recurrenceDayOfMonth": 1,
                          "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "priceIds": [
                            "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                          ],
                          "prices": [
                            {
                              "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                              "name": "Demo Product",
                              "currency": "GBP",
                              "structure": {
                                "pricingType": "LINEAR",
                                "pricePerUnit": "0.25",
                                "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                                "isPricePercentage": false
                              },
                              "billingFrequency": "MONTHLY",
                              "billingType": "IN_ARREARS",
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z",
                              "deletedAt": "2022-06-28T16:47:00Z",
                              "externalIds": [],
                              "parameters": [
                                {
                                  "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                                  "value": "10"
                                }
                              ]
                            }
                          ],
                          "type": "PLAN",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "updatedAt": "2022-06-28T16:47:00Z",
                          "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                          "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                          "phases": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "createdAt": "2022-06-28T16:47:00Z",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "priceIds": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "startDate": "2022-01-01",
                              "endDate": "2022-06-30",
                              "discounts": [
                                {
                                  "restrictToPrices": [
                                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                                  ],
                                  "type": "PERCENTAGE",
                                  "amount": 0.15,
                                  "message": "15% Discount",
                                  "separateLineItem": true
                                }
                              ],
                              "minimums": [
                                {
                                  "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                                  "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                                  "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                                  "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                                  "amount": 100,
                                  "restrictToPrices": [
                                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                                  ],
                                  "createdAt": "2022-06-28T16:47:00Z",
                                  "updatedAt": "2022-06-28T16:47:00Z"
                                }
                              ]
                            }
                          ],
                          "archivedAt": "2022-06-28T16:47:00Z",
                          "rollUpBilling": false
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create Billing Schedule",
        "description": "Create a new [Billing Schedule](/docs/subscriptions) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "postBillingSchedules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "CUSTOM",
                  "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                  "startDate": "2022-01-01",
                  "endDate": "2022-12-01",
                  "recurrenceDayOfMonth": 1,
                  "taxRates": [
                    {
                      "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                    }
                  ],
                  "autoIssueInvoices": false,
                  "purchaseOrderNumber": "PO123",
                  "discounts": [
                    {
                      "priceIds": [
                        "e007e884-5100-4183-8355-4771865cb4d7"
                      ],
                      "separateLineItem": false,
                      "amount": 25,
                      "discountCalculationType": "PERCENTAGE",
                      "message": "Loyalty Discount",
                      "validFrom": "2023-01-01",
                      "validTo": "2023-01-31"
                    }
                  ],
                  "collectionPaymentProvider": "STRIPE",
                  "priceIds": [
                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                  ],
                  "createAsDraft": false,
                  "rollUpBilling": false
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateBillingScheduleRequestWithPrices"
                  },
                  {
                    "$ref": "#/components/schemas/CreateBillingScheduleRequestWithPhases"
                  }
                ]
              },
              "examples": {
                "CreateBillingScheduleRequestWithPrices": {
                  "summary": "",
                  "value": {
                    "type": "CUSTOM",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "recurrenceDayOfMonth": 1,
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "discounts": [
                      {
                        "priceIds": [
                          "e007e884-5100-4183-8355-4771865cb4d7"
                        ],
                        "separateLineItem": false,
                        "amount": 25,
                        "discountCalculationType": "PERCENTAGE",
                        "message": "Loyalty Discount",
                        "validFrom": "2023-01-01",
                        "validTo": "2023-01-31"
                      }
                    ],
                    "collectionPaymentProvider": "STRIPE",
                    "priceIds": [
                      "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                    ],
                    "createAsDraft": false,
                    "rollUpBilling": false
                  }
                },
                "CreateBillingScheduleRequestWithPhases": {
                  "summary": "",
                  "value": {
                    "type": "PHASES",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "recurrenceDayOfMonth": 1,
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "discounts": [
                      {
                        "priceIds": [
                          "e007e884-5100-4183-8355-4771865cb4d7"
                        ],
                        "separateLineItem": false,
                        "amount": 25,
                        "discountCalculationType": "PERCENTAGE",
                        "message": "Loyalty Discount",
                        "validFrom": "2023-01-01",
                        "validTo": "2023-01-31"
                      }
                    ],
                    "collectionPaymentProvider": "STRIPE",
                    "createAsDraft": false,
                    "rollUpBilling": false,
                    "phases": [
                      {
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.08,
                            "message": "8% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "restrictToPrices": [
                              "9fe9986b-e205-42b7-a58f-42845c91f03f"
                            ],
                            "amount": 100
                          }
                        ]
                      },
                      {
                        "priceIds": [
                          "9fe9986b-e205-42b7-a58f-42845c91f03f"
                        ],
                        "startDate": "2022-07-01",
                        "endDate": "2022-12-31",
                        "discounts": [],
                        "minimums": [
                          {
                            "restrictToPrices": [
                              "9fe9986b-e205-42b7-a58f-42845c91f03f"
                            ],
                            "amount": 100
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingScheduleResponse",
                  "example": {
                    "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "status": "ACTIVE",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "firstBillingDate": "2022-02-02",
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "label": "label",
                    "recurrenceDayOfMonth": 1,
                    "priceIds": [],
                    "prices": [],
                    "type": "CUSTOM",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                    "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                    "phases": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.15,
                            "message": "15% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "amount": 100,
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z",
                    "rollUpBilling": true
                  }
                },
                "examples": {
                  "BillingScheduleResponse": {
                    "summary": "",
                    "value": {
                      "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "status": "ACTIVE",
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "priceIds": [],
                      "prices": [],
                      "type": "CUSTOM",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                      "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                      "phases": [
                        {
                          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "priceIds": [
                            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                          ],
                          "startDate": "2022-01-01",
                          "endDate": "2022-06-30",
                          "discounts": [
                            {
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "type": "PERCENTAGE",
                              "amount": 0.15,
                              "message": "15% Discount",
                              "separateLineItem": true
                            }
                          ],
                          "minimums": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "amount": 100,
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z",
                      "rollUpBilling": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/preview": {
      "post": {
        "tags": [],
        "summary": "Create Billing Schedule Preview",
        "description": "Create a billing schedule preview.",
        "operationId": "postBillingSchedulesPreview",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewRequestModel",
                "example": {
                  "startDate": "2022-01-01T12:00:00Z",
                  "endDate": "2022-03-31T12:00:00Z",
                  "recurrenceDayOfMonth": 1,
                  "prices": [
                    {
                      "billingFrequency": "QUARTERLY",
                      "billingType": "IN_ADVANCE"
                    },
                    {
                      "billingFrequency": "MONTHLY",
                      "billingType": "IN_ARREARS"
                    }
                  ]
                }
              },
              "examples": {
                "CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewRequestModel": {
                  "summary": "",
                  "value": {
                    "startDate": "2022-01-01T12:00:00Z",
                    "endDate": "2022-03-31T12:00:00Z",
                    "recurrenceDayOfMonth": 1,
                    "prices": [
                      {
                        "billingFrequency": "QUARTERLY",
                        "billingType": "IN_ADVANCE"
                      },
                      {
                        "billingFrequency": "MONTHLY",
                        "billingType": "IN_ARREARS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewResponseModel",
                  "example": {
                    "occurrences": [
                      {
                        "start": "2022-01-01",
                        "end": "2022-01-31"
                      },
                      {
                        "start": "2022-02-01",
                        "end": "2022-02-28"
                      },
                      {
                        "start": "2022-03-01",
                        "end": "2022-03-31"
                      }
                    ]
                  }
                },
                "examples": {
                  "CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewResponseModel": {
                    "summary": "",
                    "value": {
                      "occurrences": [
                        {
                          "start": "2022-01-01",
                          "end": "2022-01-31"
                        },
                        {
                          "start": "2022-02-01",
                          "end": "2022-02-28"
                        },
                        {
                          "start": "2022-03-01",
                          "end": "2022-03-31"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}": {
      "get": {
        "tags": [],
        "summary": "Get Billing Schedule",
        "description": "Retrieve the details of one of your Billing Schedules.",
        "operationId": "getBillingSchedulesByBillingScheduleId",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingScheduleResponse",
                  "example": {
                    "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "status": "ACTIVE",
                    "activeVersion": {
                      "id": "499f5dde-9735-4f6f-9ca8-337071e562ee",
                      "version": 1,
                      "validityPeriod": {
                        "startDate": "2022-01-01",
                        "endDate": "2022-12-01"
                      },
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                      "type": "PLAN"
                    },
                    "futureVersions": [
                      {
                        "id": "053e77bf-2a7a-4c3b-bd7f-689959d848a6",
                        "version": 2,
                        "validityPeriod": {
                          "startDate": "2023-01-01",
                          "endDate": "+999999999-12-31"
                        },
                        "startDate": "2022-01-01",
                        "endDate": "2022-12-01",
                        "taxRates": [
                          {
                            "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                            "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                          }
                        ],
                        "firstBillingDate": "2022-02-02",
                        "autoIssueInvoices": false,
                        "purchaseOrderNumber": "PO123",
                        "reference": "ref",
                        "label": "label",
                        "recurrenceDayOfMonth": 1,
                        "priceIds": [
                          "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                        ],
                        "type": "CUSTOM"
                      }
                    ],
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "firstBillingDate": "2022-02-02",
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "label": "label",
                    "recurrenceDayOfMonth": 1,
                    "priceIds": [],
                    "prices": [],
                    "type": "CUSTOM",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                    "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                    "phases": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.15,
                            "message": "15% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "amount": 100,
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z",
                    "rollUpBilling": false
                  }
                },
                "examples": {
                  "BillingScheduleResponse": {
                    "summary": "",
                    "value": {
                      "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "status": "ACTIVE",
                      "activeVersion": {
                        "id": "499f5dde-9735-4f6f-9ca8-337071e562ee",
                        "version": 1,
                        "validityPeriod": {
                          "startDate": "2022-01-01",
                          "endDate": "2022-12-01"
                        },
                        "startDate": "2022-01-01",
                        "endDate": "2022-12-01",
                        "taxRates": [
                          {
                            "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                            "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                          }
                        ],
                        "firstBillingDate": "2022-02-02",
                        "autoIssueInvoices": false,
                        "purchaseOrderNumber": "PO123",
                        "reference": "ref",
                        "label": "label",
                        "recurrenceDayOfMonth": 1,
                        "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "type": "PLAN"
                      },
                      "futureVersions": [
                        {
                          "id": "053e77bf-2a7a-4c3b-bd7f-689959d848a6",
                          "version": 2,
                          "validityPeriod": {
                            "startDate": "2023-01-01",
                            "endDate": "+999999999-12-31"
                          },
                          "startDate": "2022-01-01",
                          "endDate": "2022-12-01",
                          "taxRates": [
                            {
                              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                            }
                          ],
                          "firstBillingDate": "2022-02-02",
                          "autoIssueInvoices": false,
                          "purchaseOrderNumber": "PO123",
                          "reference": "ref",
                          "label": "label",
                          "recurrenceDayOfMonth": 1,
                          "priceIds": [
                            "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                          ],
                          "type": "CUSTOM"
                        }
                      ],
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "priceIds": [],
                      "prices": [],
                      "type": "CUSTOM",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                      "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                      "phases": [
                        {
                          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "priceIds": [
                            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                          ],
                          "startDate": "2022-01-01",
                          "endDate": "2022-06-30",
                          "discounts": [
                            {
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "type": "PERCENTAGE",
                              "amount": 0.15,
                              "message": "15% Discount",
                              "separateLineItem": true
                            }
                          ],
                          "minimums": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "amount": 100,
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z",
                      "rollUpBilling": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update Billing Schedules",
        "description": "Update an existing [Billing Schedule](/docs/subscriptions) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "putBillingSchedulesByBillingScheduleId",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "CUSTOM",
                  "startDate": "2022-01-01",
                  "endDate": "2022-12-01",
                  "recurrenceDayOfMonth": 1,
                  "taxRates": [
                    {
                      "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                      "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                    }
                  ],
                  "autoIssueInvoices": true,
                  "purchaseOrderNumber": "PO123",
                  "effectiveFrom": "2023-01-01",
                  "rollUpBilling": false,
                  "priceIds": [
                    "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                  ]
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateBillingScheduleRequestWithPrices"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateBillingScheduleRequestWithPhases"
                  }
                ]
              },
              "examples": {
                "UpdateBillingScheduleRequestWithPrices": {
                  "summary": "",
                  "value": {
                    "type": "CUSTOM",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "recurrenceDayOfMonth": 1,
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "autoIssueInvoices": true,
                    "purchaseOrderNumber": "PO123",
                    "effectiveFrom": "2023-01-01",
                    "rollUpBilling": false,
                    "priceIds": [
                      "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                    ]
                  }
                },
                "UpdateBillingScheduleRequestWithPhases": {
                  "summary": "",
                  "value": {
                    "type": "CUSTOM",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "recurrenceDayOfMonth": 1,
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "autoIssueInvoices": true,
                    "purchaseOrderNumber": "PO123",
                    "rollUpBilling": false,
                    "phases": [
                      {
                        "priceIds": [
                          "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-12-01",
                        "discounts": [],
                        "minimums": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingScheduleResponse",
                  "example": {
                    "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "status": "ACTIVE",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "firstBillingDate": "2022-02-02",
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "label": "label",
                    "recurrenceDayOfMonth": 1,
                    "priceIds": [],
                    "prices": [],
                    "type": "CUSTOM",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                    "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                    "phases": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.15,
                            "message": "15% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "amount": 100,
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z",
                    "rollUpBilling": true
                  }
                },
                "examples": {
                  "BillingScheduleResponse": {
                    "summary": "",
                    "value": {
                      "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "status": "ACTIVE",
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "priceIds": [],
                      "prices": [],
                      "type": "CUSTOM",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                      "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                      "phases": [
                        {
                          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "priceIds": [
                            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                          ],
                          "startDate": "2022-01-01",
                          "endDate": "2022-06-30",
                          "discounts": [
                            {
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "type": "PERCENTAGE",
                              "amount": 0.15,
                              "message": "15% Discount",
                              "separateLineItem": true
                            }
                          ],
                          "minimums": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "amount": 100,
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z",
                      "rollUpBilling": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}/activate": {
      "put": {
        "tags": [],
        "summary": "Activate Billing Schedule",
        "description": "Activate an existing draft [Billing Schedule](/docs/subscriptions) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "putBillingSchedulesByBillingScheduleIdActivate",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingScheduleResponse",
                  "example": {
                    "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "status": "ACTIVE",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "firstBillingDate": "2022-02-02",
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "label": "label",
                    "recurrenceDayOfMonth": 1,
                    "priceIds": [],
                    "prices": [],
                    "type": "CUSTOM",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                    "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                    "phases": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.15,
                            "message": "15% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "amount": 100,
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z",
                    "rollUpBilling": true
                  }
                },
                "examples": {
                  "BillingScheduleResponse": {
                    "summary": "",
                    "value": {
                      "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "status": "ACTIVE",
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "priceIds": [],
                      "prices": [],
                      "type": "CUSTOM",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                      "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                      "phases": [
                        {
                          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "priceIds": [
                            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                          ],
                          "startDate": "2022-01-01",
                          "endDate": "2022-06-30",
                          "discounts": [
                            {
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "type": "PERCENTAGE",
                              "amount": 0.15,
                              "message": "15% Discount",
                              "separateLineItem": true
                            }
                          ],
                          "minimums": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "amount": 100,
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z",
                      "rollUpBilling": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}/archive": {
      "put": {
        "tags": [],
        "summary": "Archive Billing Schedule",
        "description": "Archive a [Billing Schedule](/docs/subscriptions) within one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "putBillingSchedulesByBillingScheduleIdArchive",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingScheduleResponse",
                  "example": {
                    "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                    "status": "ACTIVE",
                    "startDate": "2022-01-01",
                    "endDate": "2022-12-01",
                    "taxRates": [
                      {
                        "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                        "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                      }
                    ],
                    "firstBillingDate": "2022-02-02",
                    "autoIssueInvoices": false,
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "label": "label",
                    "recurrenceDayOfMonth": 1,
                    "priceIds": [],
                    "prices": [],
                    "type": "CUSTOM",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                    "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                    "phases": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "priceIds": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "startDate": "2022-01-01",
                        "endDate": "2022-06-30",
                        "discounts": [
                          {
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "type": "PERCENTAGE",
                            "amount": 0.15,
                            "message": "15% Discount",
                            "separateLineItem": true
                          }
                        ],
                        "minimums": [
                          {
                            "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                            "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                            "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                            "amount": 100,
                            "restrictToPrices": [
                              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                            ],
                            "createdAt": "2022-06-28T16:47:00Z",
                            "updatedAt": "2022-06-28T16:47:00Z"
                          }
                        ]
                      }
                    ],
                    "archivedAt": "2022-06-28T16:47:00Z",
                    "rollUpBilling": true
                  }
                },
                "examples": {
                  "BillingScheduleResponse": {
                    "summary": "",
                    "value": {
                      "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "status": "ACTIVE",
                      "startDate": "2022-01-01",
                      "endDate": "2022-12-01",
                      "taxRates": [
                        {
                          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                        }
                      ],
                      "firstBillingDate": "2022-02-02",
                      "autoIssueInvoices": false,
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "label": "label",
                      "recurrenceDayOfMonth": 1,
                      "priceIds": [],
                      "prices": [],
                      "type": "CUSTOM",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z",
                      "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                      "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                      "phases": [
                        {
                          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                          "priceIds": [
                            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                          ],
                          "startDate": "2022-01-01",
                          "endDate": "2022-06-30",
                          "discounts": [
                            {
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "type": "PERCENTAGE",
                              "amount": 0.15,
                              "message": "15% Discount",
                              "separateLineItem": true
                            }
                          ],
                          "minimums": [
                            {
                              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                              "amount": 100,
                              "restrictToPrices": [
                                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                              ],
                              "createdAt": "2022-06-28T16:47:00Z",
                              "updatedAt": "2022-06-28T16:47:00Z"
                            }
                          ]
                        }
                      ],
                      "archivedAt": "2022-06-28T16:47:00Z",
                      "rollUpBilling": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}/usage-metrics": {
      "get": {
        "tags": [],
        "summary": "List usage metrics for billing schedule",
        "description": "List usage metrics for billing schedule",
        "operationId": "getBillingSchedulesByBillingScheduleIdUsageMetrics",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsageMetricsForBillingScheduleEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "27ba4761-7573-41c5-b780-2993b2c254f7",
                        "name": "Coffee",
                        "eventType": "coffee",
                        "aggregationProperty": "Cost",
                        "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                        "aggregationType": "COUNT"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListUsageMetricsForBillingScheduleEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "27ba4761-7573-41c5-b780-2993b2c254f7",
                          "name": "Coffee",
                          "eventType": "coffee",
                          "aggregationProperty": "Cost",
                          "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                          "aggregationType": "COUNT"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}/usage-data": {
      "post": {
        "tags": [],
        "summary": "Get usage events for billing schedule and event type for the given usage period",
        "description": "List usage events for billing schedule and event type for the given usage period",
        "operationId": "postBillingSchedulesByBillingScheduleIdUsageData",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsageDataForBillingScheduleEndpointRequestModel",
                "example": {
                  "usagePeriodType": "CURRENT",
                  "eventType": "event",
                  "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                  "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                  "customerAliases": [
                    "alias"
                  ],
                  "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
                }
              },
              "examples": {
                "GetUsageDataForBillingScheduleEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "usagePeriodType": "CURRENT",
                    "eventType": "event",
                    "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                    "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                    "customerAliases": [
                      "alias"
                    ],
                    "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionalUsageDataResponse1",
                  "example": {
                    "data": {
                      "usageStart": "2023-02-01",
                      "usageEnd": "2023-04-30",
                      "metricName": "API Calls",
                      "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                      "total": "35",
                      "usageData": [
                        {
                          "periodStart": "2023-02-01",
                          "amount": "10",
                          "cumulativeAmount": "10"
                        },
                        {
                          "periodStart": "2023-03-01",
                          "amount": "15",
                          "cumulativeAmount": "25"
                        },
                        {
                          "periodStart": "2023-04-01",
                          "amount": "10",
                          "cumulativeAmount": "35"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "OptionalUsageDataResponse": {
                    "summary": "",
                    "value": {
                      "data": {
                        "usageStart": "2023-02-01",
                        "usageEnd": "2023-04-30",
                        "metricName": "API Calls",
                        "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                        "total": "35",
                        "usageData": [
                          {
                            "periodStart": "2023-02-01",
                            "amount": "10",
                            "cumulativeAmount": "10"
                          },
                          {
                            "periodStart": "2023-03-01",
                            "amount": "15",
                            "cumulativeAmount": "25"
                          },
                          {
                            "periodStart": "2023-04-01",
                            "amount": "10",
                            "cumulativeAmount": "35"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-runs/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Billing Run by ID",
        "description": "Get a Billing Run by ID",
        "operationId": "getBillingRunsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique billing run ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillingRunEndpointProductGetBillingRunResponseModel",
                  "example": {
                    "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                    "createdAt": "2022-10-07T14:12:08.826121Z",
                    "status": "SCHEDULED",
                    "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                    "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                    "intendedDraftingDate": "2023-01-01",
                    "billingStartDate": "2023-01-01",
                    "billingEndDate": "2023-01-31",
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                  }
                },
                "examples": {
                  "GetBillingRunEndpointProductGetBillingRunResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                      "createdAt": "2022-10-07T14:12:08.826121Z",
                      "status": "SCHEDULED",
                      "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                      "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                      "intendedDraftingDate": "2023-01-01",
                      "billingStartDate": "2023-01-01",
                      "billingEndDate": "2023-01-31",
                      "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-runs": {
      "get": {
        "tags": [],
        "summary": "List all Billing Runs",
        "description": "List all Billing Runs",
        "operationId": "getBillingRuns",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBillingRunEndpointProductListBillingRunPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                        "createdAt": "2022-10-07T14:12:08.826121Z",
                        "status": "SCHEDULED",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                        "intendedDraftingDate": "2023-01-01",
                        "billingStartDate": "2023-01-01",
                        "billingEndDate": "2023-01-31",
                        "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListBillingRunEndpointProductListBillingRunPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                          "createdAt": "2022-10-07T14:12:08.826121Z",
                          "status": "SCHEDULED",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                          "intendedDraftingDate": "2023-01-01",
                          "billingStartDate": "2023-01-01",
                          "billingEndDate": "2023-01-31",
                          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-schedules/{billingScheduleId}/billing-runs": {
      "get": {
        "tags": [],
        "summary": "List all Billing Runs for a Billing Schedule",
        "description": "List all Billing Runs for a Billing Schedule",
        "operationId": "getBillingSchedulesByBillingScheduleIdBillingRuns",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingRunPageResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                        "createdAt": "2022-10-07T14:12:08.826121Z",
                        "status": "SCHEDULED",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                        "billingStartDate": "2023-01-01",
                        "billingEndDate": "2023-01-31",
                        "intendedDraftingDate": "2023-02-01",
                        "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "BillingRunPageResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                          "createdAt": "2022-10-07T14:12:08.826121Z",
                          "status": "SCHEDULED",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                          "billingStartDate": "2023-01-01",
                          "billingEndDate": "2023-01-31",
                          "intendedDraftingDate": "2023-02-01",
                          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-runs/filtered": {
      "get": {
        "tags": [],
        "summary": "List all Billing Runs by status",
        "description": "List all Billing Runs by status",
        "operationId": "getBillingRunsFiltered",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Billing Schedule Status",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingRunPageResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                        "createdAt": "2022-10-07T14:12:08.826121Z",
                        "status": "SCHEDULED",
                        "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                        "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                        "billingStartDate": "2023-01-01",
                        "billingEndDate": "2023-01-31",
                        "intendedDraftingDate": "2023-02-01",
                        "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "BillingRunPageResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                          "createdAt": "2022-10-07T14:12:08.826121Z",
                          "status": "SCHEDULED",
                          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                          "billingStartDate": "2023-01-01",
                          "billingEndDate": "2023-01-31",
                          "intendedDraftingDate": "2023-02-01",
                          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing-runs/{billingRunId}/invoice-preview": {
      "post": {
        "tags": [],
        "summary": "Preview the current period invoice for a billing run",
        "description": "Preview the current period invoice for a billing run",
        "operationId": "postBillingRunsByBillingRunIdInvoicePreview",
        "parameters": [
          {
            "name": "billingRunId",
            "in": "path",
            "description": "Billing Run ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentPeriodInvoicePreviewEndpointResponseModel",
                  "example": {
                    "currency": "GBP",
                    "purchaseOrderNumber": "PO123",
                    "customer": {
                      "id": "cca32597-b6b0-4499-9669-128aef8702e4",
                      "taxId": "123"
                    },
                    "billingPeriod": {
                      "startDate": "2023-01-01",
                      "endDate": "2023-01-31"
                    },
                    "lineItems": [
                      {
                        "title": "Some random value",
                        "description": "",
                        "quantity": 10,
                        "rate": "100",
                        "taxRate": "0",
                        "servicePeriodStart": "2023-01-01",
                        "servicePeriodEnd": "2023-01-31",
                        "priceId": "e007e884-5100-4183-8355-4771865cb4d7",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ]
                      }
                    ],
                    "lineItemGroups": [],
                    "memo": "memo",
                    "accountingDate": "2023-01-31",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ]
                  }
                },
                "examples": {
                  "CurrentPeriodInvoicePreviewEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "currency": "GBP",
                      "purchaseOrderNumber": "PO123",
                      "customer": {
                        "id": "cca32597-b6b0-4499-9669-128aef8702e4",
                        "taxId": "123"
                      },
                      "billingPeriod": {
                        "startDate": "2023-01-01",
                        "endDate": "2023-01-31"
                      },
                      "lineItems": [
                        {
                          "title": "Some random value",
                          "description": "",
                          "quantity": 10,
                          "rate": "100",
                          "taxRate": "0",
                          "servicePeriodStart": "2023-01-01",
                          "servicePeriodEnd": "2023-01-31",
                          "priceId": "e007e884-5100-4183-8355-4771865cb4d7",
                          "rateDisplay": "ABSOLUTE",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ]
                        }
                      ],
                      "lineItemGroups": [],
                      "memo": "memo",
                      "accountingDate": "2023-01-31",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/all/for-date/{date}": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for all accounts for a given date",
        "description": "Execute all billing schedules for all accounts for a given date",
        "operationId": "postBillingExecutionAccountsAllForDateByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/all": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for all accounts",
        "description": "Execute all billing schedules for all accounts",
        "operationId": "postBillingExecutionAccountsAll",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/self/for-date/{date}": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for the current account for a given date",
        "description": "Execute all billing schedules for the current account for a given date",
        "operationId": "postBillingExecutionAccountsSelfForDateByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/self": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for the current account",
        "description": "Execute all billing schedules for the current account",
        "operationId": "postBillingExecutionAccountsSelf",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/{accountId}/for-date/{date}": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for an account for a specific date",
        "description": "Execute all billing schedules for an account for a specific date",
        "operationId": "postBillingExecutionAccountsByAccountIdForDateByDate",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/accounts/{accountId}": {
      "post": {
        "tags": [],
        "summary": "Execute all billing schedules for an account",
        "description": "Execute all billing schedules for an account",
        "operationId": "postBillingExecutionAccountsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/billing-schedules/{billingScheduleId}/for-date/{date}": {
      "post": {
        "tags": [],
        "summary": "Execute a single billing schedule at a given date",
        "description": "Execute a single billing schedule ate a given date",
        "operationId": "postBillingExecutionBillingSchedulesByBillingScheduleIdForDateByDate",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/execution/billing-schedules/{billingScheduleId}": {
      "post": {
        "tags": [],
        "summary": "Execute a single billing schedule with today's date",
        "description": "Execute a single billing schedule with today's date",
        "operationId": "postBillingExecutionBillingSchedulesByBillingScheduleId",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/backfill-phases/billing-schedules/{billingScheduleId}": {
      "post": {
        "tags": [],
        "summary": "Backfill phases for a single billing schedule",
        "description": "Backfill phases for a single billing schedule",
        "operationId": "postBillingBackfillPhasesBillingSchedulesByBillingScheduleId",
        "parameters": [
          {
            "name": "billingScheduleId",
            "in": "path",
            "description": "Billing Schedule ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/backfill-phases/accounts/{accountId}": {
      "post": {
        "tags": [],
        "summary": "Backfill phases for a single account",
        "description": "Backfill phases for a single account",
        "operationId": "postBillingBackfillPhasesAccountsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/billing/backfill-phases/all-accounts": {
      "post": {
        "tags": [],
        "summary": "Backfill phases for all accounts",
        "description": "Backfill phases for all accounts",
        "operationId": "postBillingBackfillPhasesAllAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "On-Behalf-Of",
            "in": "header",
            "description": "The Sequence account that this request is made on behalf of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/insights/customer-totals": {
      "get": {
        "tags": [],
        "summary": "Get customer totals",
        "description": "Get customer totals by active billing schedules",
        "operationId": "getInsightsCustomerTotals",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalCustomersResponseModel",
                  "example": {
                    "total": 4,
                    "numCustomersWithActiveSchedule": 2,
                    "numCustomersNoLongerBilled": 1,
                    "numCustomersNeverBilled": 1
                  }
                },
                "examples": {
                  "GetTotalCustomersResponseModel": {
                    "summary": "",
                    "value": {
                      "total": 4,
                      "numCustomersWithActiveSchedule": 2,
                      "numCustomersNoLongerBilled": 1,
                      "numCustomersNeverBilled": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoice-merchant-details": {
      "get": {
        "tags": [],
        "summary": "Get invoice merchant details",
        "description": "Get invoice merchant details",
        "operationId": "getInvoiceMerchantDetails",
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "description": "Invoice currency",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Customer country",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Customer state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceMerchantDetails",
                  "example": {
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "phoneNumber": "0800001066",
                    "email": "donald@example.com",
                    "taxId": "TAX",
                    "iban": "GB33BUKB20201555555555",
                    "ukAccountDetails": {
                      "sortCode": "123456",
                      "accountNumber": "12345678"
                    },
                    "usAchDetails": {
                      "accountNumber": "12345678",
                      "accountName": "John Doe",
                      "bankName": "Chase",
                      "bankRoutingNumber": "123456789"
                    },
                    "usWireDetails": {
                      "accountNumber": "12345678",
                      "accountName": "John Doe",
                      "bankName": "Chase",
                      "bankRoutingNumber": "123456789",
                      "swiftCode": "CHASUS33",
                      "bankAddress": {
                        "line1": "JP Morgan Chase",
                        "town": "New York City",
                        "state": "NY",
                        "postcode": "10017",
                        "country": "US"
                      }
                    },
                    "legalCompanyName": "The Merchant",
                    "customFields": [],
                    "includeBeneficiaryAddressInPaymentDetails": false
                  }
                },
                "examples": {
                  "InvoiceMerchantDetails": {
                    "summary": "",
                    "value": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/merchant-for-sequence-account": {
      "get": {
        "tags": [],
        "summary": "Get a Merchant by Sequence Account ID",
        "description": "Get a Merchant by Sequence Account ID",
        "operationId": "getMerchantForSequenceAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Merchant",
                  "example": {
                    "id": "8252c275-80ce-4845-abe7-027f5b2daa8c",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "invoiceNumberPrefix": "SEQ",
                    "creditNoteNumberPrefix": "SCN",
                    "legalCompanyName": "The Merchant",
                    "address": {
                      "line1": "Flat 1",
                      "line2": "123 Fake Street",
                      "town": "New York",
                      "state": "NY",
                      "postcode": "AB1 2EF",
                      "country": "US"
                    },
                    "phoneNumber": "0800001066",
                    "email": "donald@example.com",
                    "defaultDueDateDays": 30,
                    "lastInvoiceNumber": 1,
                    "lastCreditNoteNumber": 0,
                    "bankAccountDetails": [
                      {
                        "key": "GBP",
                        "value": {
                          "type": "UK_BANK_ACCOUNT",
                          "iban": "GB33BUKB20201555555555",
                          "ukBankAccount": {
                            "sortCode": "123456",
                            "accountNumber": "12345678"
                          },
                          "usAchDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789"
                          },
                          "usWireDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            }
                          },
                          "canadianBankAccount": {
                            "transitNumber": "12345",
                            "institutionNumber": "123",
                            "accountNumber": "1234567"
                          },
                          "canadianInternationalDestination": {
                            "legalName": "John Doe",
                            "accountNumber": "12345678",
                            "transitNumber": "12345",
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "institutionNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "intermediaryBank": {
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "swiftCode": "CHASUS33",
                              "routingNumber": "123456789"
                            }
                          }
                        }
                      },
                      {
                        "key": "EUR",
                        "value": {
                          "type": "IBAN",
                          "iban": "GB33BUKB20201555555555"
                        }
                      }
                    ],
                    "manualNumbering": false,
                    "customerPortalEnabled": true,
                    "includeBeneficiaryAddressInPaymentDetails": false
                  }
                },
                "examples": {
                  "Merchant": {
                    "summary": "",
                    "value": {
                      "id": "8252c275-80ce-4845-abe7-027f5b2daa8c",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "invoiceNumberPrefix": "SEQ",
                      "creditNoteNumberPrefix": "SCN",
                      "legalCompanyName": "The Merchant",
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "defaultDueDateDays": 30,
                      "lastInvoiceNumber": 1,
                      "lastCreditNoteNumber": 0,
                      "bankAccountDetails": [
                        {
                          "key": "GBP",
                          "value": {
                            "type": "UK_BANK_ACCOUNT",
                            "iban": "GB33BUKB20201555555555",
                            "ukBankAccount": {
                              "sortCode": "123456",
                              "accountNumber": "12345678"
                            },
                            "usAchDestination": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789"
                            },
                            "usWireDestination": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789",
                              "swiftCode": "CHASUS33",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              }
                            },
                            "canadianBankAccount": {
                              "transitNumber": "12345",
                              "institutionNumber": "123",
                              "accountNumber": "1234567"
                            },
                            "canadianInternationalDestination": {
                              "legalName": "John Doe",
                              "accountNumber": "12345678",
                              "transitNumber": "12345",
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "institutionNumber": "123456789",
                              "swiftCode": "CHASUS33",
                              "intermediaryBank": {
                                "bankName": "Chase",
                                "bankAddress": {
                                  "line1": "JP Morgan Chase",
                                  "town": "New York City",
                                  "state": "NY",
                                  "postcode": "10017",
                                  "country": "US"
                                },
                                "swiftCode": "CHASUS33",
                                "routingNumber": "123456789"
                              }
                            }
                          }
                        },
                        {
                          "key": "EUR",
                          "value": {
                            "type": "IBAN",
                            "iban": "GB33BUKB20201555555555"
                          }
                        }
                      ],
                      "manualNumbering": false,
                      "customerPortalEnabled": true,
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/merchants/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Merchant",
        "description": "Update a Merchant",
        "operationId": "putMerchantsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMerchantEndpointUpdateMerchantRequestModel",
                "example": {
                  "invoiceNumberPrefix": "SEQ",
                  "creditNoteNumberPrefix": "SCN",
                  "legalCompanyName": "The company",
                  "address": {
                    "line1": "15 The Shire",
                    "line2": "Shire Lane",
                    "town": "Hobbiton",
                    "state": "CA",
                    "postcode": "HO123",
                    "country": "US"
                  },
                  "phoneNumber": "01234567890",
                  "email": "merchant@example.com",
                  "defaultDueDateDays": 30,
                  "bankAccountDetails": [
                    {
                      "key": "GBP",
                      "value": {
                        "type": "IBAN",
                        "iban": "GB33BUKB20201555555555",
                        "ukBankAccount": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDestination": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDestination": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "canadianBankAccount": {
                          "transitNumber": "12345",
                          "institutionNumber": "123",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        }
                      }
                    }
                  ],
                  "appUrl": "www.sequencehq.com",
                  "customerPortalEnabled": true,
                  "includeBeneficiaryAddressInPaymentDetails": true
                }
              },
              "examples": {
                "UpdateMerchantEndpointUpdateMerchantRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceNumberPrefix": "SEQ",
                    "creditNoteNumberPrefix": "SCN",
                    "legalCompanyName": "The company",
                    "address": {
                      "line1": "15 The Shire",
                      "line2": "Shire Lane",
                      "town": "Hobbiton",
                      "state": "CA",
                      "postcode": "HO123",
                      "country": "US"
                    },
                    "phoneNumber": "01234567890",
                    "email": "merchant@example.com",
                    "defaultDueDateDays": 30,
                    "bankAccountDetails": [
                      {
                        "key": "GBP",
                        "value": {
                          "type": "IBAN",
                          "iban": "GB33BUKB20201555555555",
                          "ukBankAccount": {
                            "sortCode": "000000",
                            "accountNumber": "12345678"
                          },
                          "usAchDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789"
                          },
                          "usWireDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            }
                          },
                          "canadianBankAccount": {
                            "transitNumber": "12345",
                            "institutionNumber": "123",
                            "accountNumber": "1234567"
                          },
                          "canadianInternationalDestination": {
                            "legalName": "John Doe",
                            "accountNumber": "12345678",
                            "transitNumber": "12345",
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "institutionNumber": "123",
                            "swiftCode": "CHASUS33",
                            "intermediaryBank": {
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "swiftCode": "CHASUS33",
                              "routingNumber": "123456789"
                            }
                          }
                        }
                      }
                    ],
                    "appUrl": "www.sequencehq.com",
                    "customerPortalEnabled": true,
                    "includeBeneficiaryAddressInPaymentDetails": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMerchantEndpointProductUpdateMerchantResponseModel",
                  "example": {
                    "id": "466e6610-dc7f-4d0c-a304-089ea473e1e3",
                    "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                    "invoiceNumberPrefix": "SEQ",
                    "creditNoteNumberPrefix": "SCN",
                    "legalCompanyName": "The company",
                    "address": {
                      "line1": "15 The Shire",
                      "line2": "Shire Lane",
                      "town": "Hobbiton",
                      "state": "CA",
                      "postcode": "HO123",
                      "country": "US"
                    },
                    "phoneNumber": "01234567890",
                    "email": "merchant@example.com",
                    "defaultDueDateDays": 30,
                    "lastInvoiceNumber": 0,
                    "lastCreditNoteNumber": 0,
                    "bankAccountDetails": [
                      {
                        "key": "GBP",
                        "value": {
                          "type": "IBAN",
                          "iban": "GB33BUKB20201555555555",
                          "ukBankAccount": {
                            "sortCode": "000000",
                            "accountNumber": "12345678"
                          },
                          "usAchDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789"
                          },
                          "usWireDestination": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            }
                          },
                          "canadianBankAccount": {
                            "transitNumber": "12345",
                            "institutionNumber": "123",
                            "accountNumber": "1234567"
                          },
                          "canadianInternationalDestination": {
                            "legalName": "John Doe",
                            "accountNumber": "12345678",
                            "transitNumber": "12345",
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "institutionNumber": "123",
                            "swiftCode": "CHASUS33",
                            "intermediaryBank": {
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "swiftCode": "CHASUS33",
                              "routingNumber": "123456789"
                            }
                          }
                        }
                      }
                    ],
                    "manualNumbering": true,
                    "appUrl": "www.sequencehq.com",
                    "customerPortalEnabled": true,
                    "includeBeneficiaryAddressInPaymentDetails": true
                  }
                },
                "examples": {
                  "UpdateMerchantEndpointProductUpdateMerchantResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "466e6610-dc7f-4d0c-a304-089ea473e1e3",
                      "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                      "invoiceNumberPrefix": "SEQ",
                      "creditNoteNumberPrefix": "SCN",
                      "legalCompanyName": "The company",
                      "address": {
                        "line1": "15 The Shire",
                        "line2": "Shire Lane",
                        "town": "Hobbiton",
                        "state": "CA",
                        "postcode": "HO123",
                        "country": "US"
                      },
                      "phoneNumber": "01234567890",
                      "email": "merchant@example.com",
                      "defaultDueDateDays": 30,
                      "lastInvoiceNumber": 0,
                      "lastCreditNoteNumber": 0,
                      "bankAccountDetails": [
                        {
                          "key": "GBP",
                          "value": {
                            "type": "IBAN",
                            "iban": "GB33BUKB20201555555555",
                            "ukBankAccount": {
                              "sortCode": "000000",
                              "accountNumber": "12345678"
                            },
                            "usAchDestination": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789"
                            },
                            "usWireDestination": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789",
                              "swiftCode": "CHASUS33",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              }
                            },
                            "canadianBankAccount": {
                              "transitNumber": "12345",
                              "institutionNumber": "123",
                              "accountNumber": "1234567"
                            },
                            "canadianInternationalDestination": {
                              "legalName": "John Doe",
                              "accountNumber": "12345678",
                              "transitNumber": "12345",
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "institutionNumber": "123",
                              "swiftCode": "CHASUS33",
                              "intermediaryBank": {
                                "bankName": "Chase",
                                "bankAddress": {
                                  "line1": "JP Morgan Chase",
                                  "town": "New York City",
                                  "state": "NY",
                                  "postcode": "10017",
                                  "country": "US"
                                },
                                "swiftCode": "CHASUS33",
                                "routingNumber": "123456789"
                              }
                            }
                          }
                        }
                      ],
                      "manualNumbering": true,
                      "appUrl": "www.sequencehq.com",
                      "customerPortalEnabled": true,
                      "includeBeneficiaryAddressInPaymentDetails": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices-totals": {
      "post": {
        "tags": [],
        "summary": "Calculate invoice totals",
        "description": "Calculate invoice totals",
        "operationId": "postInvoicesTotals",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsRequest",
                "example": {
                  "lineItems": [
                    {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "servicePeriodStart": "2022-10-20T00:00:00Z",
                      "servicePeriodEnd": "2022-10-24T00:00:00Z",
                      "servicePeriod": {
                        "startDate": "2022-10-20",
                        "endDate": "2022-10-24"
                      },
                      "index": 2,
                      "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                      "netTotal": "40000.20",
                      "totalTax": "8000.04",
                      "grossTotal": "48000.24",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "revenueClassification": "EARNED"
                    }
                  ]
                }
              },
              "examples": {
                "CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsRequest": {
                  "summary": "",
                  "value": {
                    "lineItems": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "2",
                        "rate": "20000.10",
                        "taxRate": "0.2",
                        "servicePeriodStart": "2022-10-20T00:00:00Z",
                        "servicePeriodEnd": "2022-10-24T00:00:00Z",
                        "servicePeriod": {
                          "startDate": "2022-10-20",
                          "endDate": "2022-10-24"
                        },
                        "index": 2,
                        "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                        "netTotal": "40000.20",
                        "totalTax": "8000.04",
                        "grossTotal": "48000.24",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "revenueClassification": "EARNED"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsResponse",
                  "example": {
                    "total": {
                      "netTotal": "200000",
                      "totalTax": "10",
                      "grossTotal": "22000"
                    },
                    "lineItemTotals": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "total": {
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      }
                    ],
                    "lineItemGroupTotals": [
                      {
                        "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "total": {
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      }
                    ]
                  }
                },
                "examples": {
                  "CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsResponse": {
                    "summary": "",
                    "value": {
                      "total": {
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000"
                      },
                      "lineItemTotals": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "total": {
                            "netTotal": "200000",
                            "totalTax": "10",
                            "grossTotal": "22000"
                          }
                        }
                      ],
                      "lineItemGroupTotals": [
                        {
                          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "total": {
                            "netTotal": "200000",
                            "totalTax": "10",
                            "grossTotal": "22000"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices": {
      "get": {
        "tags": [],
        "summary": "List all Invoices",
        "description": "List all Invoices",
        "operationId": "getInvoices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time. Options: CUSTOMER_LEGAL_COMPANY_NAME, GROSS_TOTAL, ACCOUNTING_DATE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceStatus",
            "in": "query",
            "description": "Filter by invoice status. Options: IN_PROGRESS, DRAFT, FINAL, SENT, VOIDED",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoicePaymentStatus",
            "in": "query",
            "description": "Filter by payment status. Options: UNPAID, PARTIALLY_PAID, PAID, UNCOLLECTIBLE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by customer id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingScheduleId",
            "in": "query",
            "description": "Filter by billing schedule id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Filter by due date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Filter by due date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentBefore",
            "in": "query",
            "description": "Filter by sent date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentAfter",
            "in": "query",
            "description": "Filter by sent date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceBefore",
            "in": "query",
            "description": "Filter by invoice date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceAfter",
            "in": "query",
            "description": "Filter by invoice date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZeroQuantity",
            "in": "query",
            "description": "Exclude invoices with zero quantity.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceEndpointListInvoicePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                        "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                        "status": "DRAFT",
                        "currency": "GBP",
                        "invoiceNumber": "INV2",
                        "dueDate": "2022-11-05",
                        "purchaseOrderNumber": "PO123",
                        "reference": "ref",
                        "customerEmails": [
                          "customer@example.com"
                        ],
                        "customerLegalCompanyName": "Facebook",
                        "customerBillingAddress": {
                          "line1": "Flat 1",
                          "line2": "15 Yemen Road",
                          "town": "Yemen",
                          "state": "CA",
                          "postcode": "YE1 2YE",
                          "country": "YE"
                        },
                        "customerShippingAddress": {
                          "line1": "742 Evergreen Terrace",
                          "line2": "",
                          "town": "Springfield",
                          "state": "CA",
                          "postcode": "12345",
                          "country": "US"
                        },
                        "memo": "Thanks",
                        "paymentOptions": [
                          "BANK_TRANSFER"
                        ],
                        "billingPeriod": {
                          "start": "2022-10-01",
                          "endInclusive": "2022-10-30"
                        },
                        "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                        "totalTax": "2",
                        "netTotal": "12",
                        "grossTotal": "10",
                        "metadata": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "paymentStatus": "UNPAID",
                        "createdAt": "2022-10-30T00:00:00Z",
                        "creditNoteIds": [
                          "941272d1-f840-4e16-b698-0cd455c81e0e"
                        ],
                        "linkedServices": [
                          {
                            "externalId": "ID",
                            "externalService": "Xero",
                            "syncTime": "2022-06-28T16:47:00Z"
                          }
                        ],
                        "merchantDetails": {
                          "address": {
                            "line1": "Flat 1",
                            "line2": "123 Fake Street",
                            "town": "New York",
                            "state": "NY",
                            "postcode": "AB1 2EF",
                            "country": "US"
                          },
                          "phoneNumber": "0800001066",
                          "email": "donald@example.com",
                          "taxId": "TAX",
                          "iban": "GB33BUKB20201555555555",
                          "ukAccountDetails": {
                            "sortCode": "123456",
                            "accountNumber": "12345678"
                          },
                          "usAchDetails": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789"
                          },
                          "usWireDetails": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            }
                          },
                          "legalCompanyName": "The Merchant",
                          "customFields": [],
                          "includeBeneficiaryAddressInPaymentDetails": false
                        },
                        "accountingDate": "2022-10-05",
                        "customerTaxStatus": "TAXED"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListInvoiceEndpointListInvoicePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                          "status": "DRAFT",
                          "currency": "GBP",
                          "invoiceNumber": "INV2",
                          "dueDate": "2022-11-05",
                          "purchaseOrderNumber": "PO123",
                          "reference": "ref",
                          "customerEmails": [
                            "customer@example.com"
                          ],
                          "customerLegalCompanyName": "Facebook",
                          "customerBillingAddress": {
                            "line1": "Flat 1",
                            "line2": "15 Yemen Road",
                            "town": "Yemen",
                            "state": "CA",
                            "postcode": "YE1 2YE",
                            "country": "YE"
                          },
                          "customerShippingAddress": {
                            "line1": "742 Evergreen Terrace",
                            "line2": "",
                            "town": "Springfield",
                            "state": "CA",
                            "postcode": "12345",
                            "country": "US"
                          },
                          "memo": "Thanks",
                          "paymentOptions": [
                            "BANK_TRANSFER"
                          ],
                          "billingPeriod": {
                            "start": "2022-10-01",
                            "endInclusive": "2022-10-30"
                          },
                          "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                          "totalTax": "2",
                          "netTotal": "12",
                          "grossTotal": "10",
                          "metadata": [
                            {
                              "key": "example-label",
                              "value": "label-value"
                            }
                          ],
                          "paymentStatus": "UNPAID",
                          "createdAt": "2022-10-30T00:00:00Z",
                          "creditNoteIds": [
                            "941272d1-f840-4e16-b698-0cd455c81e0e"
                          ],
                          "linkedServices": [
                            {
                              "externalId": "ID",
                              "externalService": "Xero",
                              "syncTime": "2022-06-28T16:47:00Z"
                            }
                          ],
                          "merchantDetails": {
                            "address": {
                              "line1": "Flat 1",
                              "line2": "123 Fake Street",
                              "town": "New York",
                              "state": "NY",
                              "postcode": "AB1 2EF",
                              "country": "US"
                            },
                            "phoneNumber": "0800001066",
                            "email": "donald@example.com",
                            "taxId": "TAX",
                            "iban": "GB33BUKB20201555555555",
                            "ukAccountDetails": {
                              "sortCode": "123456",
                              "accountNumber": "12345678"
                            },
                            "usAchDetails": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789"
                            },
                            "usWireDetails": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789",
                              "swiftCode": "CHASUS33",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              }
                            },
                            "legalCompanyName": "The Merchant",
                            "customFields": [],
                            "includeBeneficiaryAddressInPaymentDetails": false
                          },
                          "accountingDate": "2022-10-05",
                          "customerTaxStatus": "TAXED"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Invoice",
        "description": "Create a new Invoice",
        "operationId": "postInvoices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceEndpointCreateInvoiceRequestModel",
                "example": {
                  "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                  "currency": "GBP",
                  "dueDate": "2022-09-30",
                  "purchaseOrderNumber": "PO123",
                  "reference": "ref",
                  "customerEmails": [
                    "customer.user.a@example.com",
                    "customer.user.b@example.com"
                  ],
                  "customerLegalCompanyName": "Facebook",
                  "customerBillingAddress": {
                    "line1": "Flat 1",
                    "line2": "15 Yemen Road",
                    "town": "Yemen",
                    "state": "CA",
                    "postcode": "YE1 2YE",
                    "country": "YE"
                  },
                  "customerShippingAddress": {
                    "line1": "742 Evergreen Terrace",
                    "town": "Springfield",
                    "state": "CA",
                    "postcode": "12345",
                    "country": "US"
                  },
                  "memo": "Thanks",
                  "paymentOptions": [
                    "BANK_TRANSFER"
                  ],
                  "billingPeriod": {
                    "start": "2022-10-01",
                    "endInclusive": "2022-10-30"
                  },
                  "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                  "metadata": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                  "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                  "accountingDate": "2022-09-30"
                }
              },
              "examples": {
                "CreateInvoiceEndpointCreateInvoiceRequestModel": {
                  "summary": "",
                  "value": {
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "currency": "GBP",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                    "accountingDate": "2022-09-30"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceEndpointProductCreateInvoiceResponseModel",
                  "example": {
                    "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV00001",
                    "issueDate": "2022-09-15",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "af60cab3-812d-4250-a051-0fb7133a00c7"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "finance@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "dunningStatus": "SCHEDULED",
                    "accountingDate": "2022-09-30",
                    "calculatedAt": "2022-09-30T00:00:00Z",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "CreateInvoiceEndpointProductCreateInvoiceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV00001",
                      "issueDate": "2022-09-15",
                      "dueDate": "2022-09-30",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer.user.a@example.com",
                        "customer.user.b@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "af60cab3-812d-4250-a051-0fb7133a00c7"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "finance@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                      "dunningStatus": "SCHEDULED",
                      "accountingDate": "2022-09-30",
                      "calculatedAt": "2022-09-30T00:00:00Z",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoice}/line-items": {
      "get": {
        "tags": [],
        "summary": "List all Line Items",
        "description": "List all Line Items",
        "operationId": "getInvoicesByInvoiceLineItems",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLineItemEndpointPaginatedLineItemResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "2",
                        "rate": "20000.10",
                        "taxRate": "0.2",
                        "servicePeriodStart": "2022-10-20T00:00:00Z",
                        "servicePeriodEnd": "2022-10-24T00:00:00Z",
                        "servicePeriod": {
                          "startDate": "2022-10-20",
                          "endDate": "2022-10-24"
                        },
                        "index": 2,
                        "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "netTotal": "51.20",
                        "totalTax": "2.50",
                        "grossTotal": "101.23",
                        "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "revenueClassification": "EARNED",
                        "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListLineItemEndpointPaginatedLineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "title": "Ferraris",
                          "description": "Red",
                          "quantity": "2",
                          "rate": "20000.10",
                          "taxRate": "0.2",
                          "servicePeriodStart": "2022-10-20T00:00:00Z",
                          "servicePeriodEnd": "2022-10-24T00:00:00Z",
                          "servicePeriod": {
                            "startDate": "2022-10-20",
                            "endDate": "2022-10-24"
                          },
                          "index": 2,
                          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "netTotal": "51.20",
                          "totalTax": "2.50",
                          "grossTotal": "101.23",
                          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                          "rateDisplay": "ABSOLUTE",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "revenueClassification": "EARNED",
                          "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Line Item",
        "description": "Create a new Line Item",
        "operationId": "postInvoicesByInvoiceLineItems",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLineItemRequestModel",
                "example": {
                  "title": "Ferraris",
                  "description": "Red",
                  "quantity": "2",
                  "rate": "20000.10",
                  "taxRate": "0.2",
                  "servicePeriodStart": "2022-10-20T00:00:00Z",
                  "servicePeriodEnd": "2022-10-24T00:00:00Z",
                  "servicePeriod": {
                    "startDate": "2022-10-20",
                    "endDate": "2022-10-24"
                  },
                  "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                  "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                  "rateDisplay": "ABSOLUTE",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ],
                  "revenueClassification": "EARNED",
                  "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                }
              },
              "examples": {
                "CreateOrUpdateLineItemRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "servicePeriodStart": "2022-10-20T00:00:00Z",
                    "servicePeriodEnd": "2022-10-24T00:00:00Z",
                    "servicePeriod": {
                      "startDate": "2022-10-20",
                      "endDate": "2022-10-24"
                    },
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "revenueClassification": "EARNED",
                    "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "servicePeriodStart": "2022-10-20T00:00:00Z",
                    "servicePeriodEnd": "2022-10-24T00:00:00Z",
                    "servicePeriod": {
                      "startDate": "2022-10-20",
                      "endDate": "2022-10-24"
                    },
                    "index": 2,
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23",
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "revenueClassification": "EARNED",
                    "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                  }
                },
                "examples": {
                  "LineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "servicePeriodStart": "2022-10-20T00:00:00Z",
                      "servicePeriodEnd": "2022-10-24T00:00:00Z",
                      "servicePeriod": {
                        "startDate": "2022-10-20",
                        "endDate": "2022-10-24"
                      },
                      "index": 2,
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23",
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "revenueClassification": "EARNED",
                      "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoice}/line-item-groups": {
      "get": {
        "tags": [],
        "summary": "List all Line Item Groups",
        "description": "List all Line Item Groups",
        "operationId": "getInvoicesByInvoiceLineItemGroups",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLineItemGroupEndpointProductListLineItemGroupPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Users",
                        "description": "Charges for users",
                        "index": 2,
                        "netTotal": "51.20",
                        "totalTax": "2.50",
                        "grossTotal": "101.23"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListLineItemGroupEndpointProductListLineItemGroupPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "title": "Users",
                          "description": "Charges for users",
                          "index": 2,
                          "netTotal": "51.20",
                          "totalTax": "2.50",
                          "grossTotal": "101.23"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Line Item Group",
        "description": "Create a new Line Item Group",
        "operationId": "postInvoicesByInvoiceLineItemGroups",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineItemGroupEndpointCreateLineItemGroupRequestModel",
                "example": {
                  "title": "Users",
                  "description": "Charges for users"
                }
              },
              "examples": {
                "CreateLineItemGroupEndpointCreateLineItemGroupRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Users",
                    "description": "Charges for users"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLineItemGroupEndpointProductCreateLineItemGroupResponseModel",
                  "example": {
                    "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Users",
                    "description": "Charges for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "CreateLineItemGroupEndpointProductCreateLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Users",
                      "description": "Charges for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}": {
      "get": {
        "tags": [],
        "summary": "Get an Invoice by ID",
        "description": "Get an Invoice by ID",
        "operationId": "getInvoicesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceEndpointProductGetInvoiceResponseModel",
                  "example": {
                    "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV00001",
                    "issueDate": "2022-09-15",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "af60cab3-812d-4250-a051-0fb7133a00c7"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "finance@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "dunningStatus": "SCHEDULED",
                    "accountingDate": "2022-09-30",
                    "calculatedAt": "2022-09-30T00:00:00Z",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "GetInvoiceEndpointProductGetInvoiceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV00001",
                      "issueDate": "2022-09-15",
                      "dueDate": "2022-09-30",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer.user.a@example.com",
                        "customer.user.b@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "af60cab3-812d-4250-a051-0fb7133a00c7"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "finance@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                      "dunningStatus": "SCHEDULED",
                      "accountingDate": "2022-09-30",
                      "calculatedAt": "2022-09-30T00:00:00Z",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update an Invoice",
        "description": "Update an Invoice",
        "operationId": "putInvoicesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceEndpointUpdateInvoiceRequestModel",
                "example": {
                  "dueDate": "2022-09-30",
                  "purchaseOrderNumber": "PO123",
                  "reference": "ref",
                  "customerEmails": [
                    "customer.user.a@example.com",
                    "customer.user.b@example.com"
                  ],
                  "customerLegalCompanyName": "Facebook",
                  "customerBillingAddress": {
                    "line1": "Flat 1",
                    "line2": "15 Yemen Road",
                    "town": "Yemen",
                    "state": "CA",
                    "postcode": "YE1 2YE",
                    "country": "YE"
                  },
                  "customerShippingAddress": {
                    "line1": "742 Evergreen Terrace",
                    "town": "Springfield",
                    "state": "CA",
                    "postcode": "12345",
                    "country": "US"
                  },
                  "memo": "Thanks",
                  "paymentOptions": [
                    "BANK_TRANSFER"
                  ],
                  "billingPeriod": {
                    "start": "2022-10-01",
                    "endInclusive": "2022-10-30"
                  },
                  "metadata": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                  "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                  "accountingDate": "2022-09-30"
                }
              },
              "examples": {
                "UpdateInvoiceEndpointUpdateInvoiceRequestModel": {
                  "summary": "",
                  "value": {
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                    "accountingDate": "2022-09-30"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceEndpointProductUpdateInvoiceResponseModel",
                  "example": {
                    "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV00001",
                    "issueDate": "2022-09-15",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "af60cab3-812d-4250-a051-0fb7133a00c7"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "finance@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "dunningStatus": "SCHEDULED",
                    "accountingDate": "2022-09-30",
                    "calculatedAt": "2022-09-30T00:00:00Z",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "UpdateInvoiceEndpointProductUpdateInvoiceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV00001",
                      "issueDate": "2022-09-15",
                      "dueDate": "2022-09-30",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer.user.a@example.com",
                        "customer.user.b@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "af60cab3-812d-4250-a051-0fb7133a00c7"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "finance@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                      "dunningStatus": "SCHEDULED",
                      "accountingDate": "2022-09-30",
                      "calculatedAt": "2022-09-30T00:00:00Z",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete an Invoice",
        "description": "Delete an Invoice. NB. To help with sandbox testing, deleting an invoice in sandbox and other non-production environments also deletes its associated credit notes and all line items and groups",
        "operationId": "deleteInvoicesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInvoiceEndpointProductDeleteInvoiceResponseModel",
                  "example": {
                    "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV00001",
                    "issueDate": "2022-09-15",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "af60cab3-812d-4250-a051-0fb7133a00c7"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "finance@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "dunningStatus": "SCHEDULED",
                    "accountingDate": "2022-09-30",
                    "calculatedAt": "2022-09-30T00:00:00Z",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "DeleteInvoiceEndpointProductDeleteInvoiceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV00001",
                      "issueDate": "2022-09-15",
                      "dueDate": "2022-09-30",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer.user.a@example.com",
                        "customer.user.b@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "af60cab3-812d-4250-a051-0fb7133a00c7"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "finance@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                      "dunningStatus": "SCHEDULED",
                      "accountingDate": "2022-09-30",
                      "calculatedAt": "2022-09-30T00:00:00Z",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [],
        "summary": "Patch an Invoice",
        "description": "Patch an Invoice",
        "operationId": "patchInvoicesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchInvoiceEndpointPatchInvoiceRequestModel",
                "example": {
                  "dueDate": "2022-09-30",
                  "purchaseOrderNumber": "PO123",
                  "reference": "ref",
                  "customerEmails": [
                    "customer.user.a@example.com",
                    "customer.user.b@example.com"
                  ],
                  "customerLegalCompanyName": "Facebook",
                  "customerBillingAddress": {
                    "line1": "Flat 1",
                    "line2": "15 Yemen Road",
                    "town": "Yemen",
                    "state": "CA",
                    "postcode": "YE1 2YE",
                    "country": "YE"
                  },
                  "customerShippingAddress": {
                    "line1": "742 Evergreen Terrace",
                    "town": "Springfield",
                    "state": "CA",
                    "postcode": "12345",
                    "country": "US"
                  },
                  "memo": "Thanks",
                  "paymentOptions": [
                    "BANK_TRANSFER"
                  ],
                  "billingPeriod": {
                    "start": "2022-10-01",
                    "endInclusive": "2022-10-30"
                  },
                  "metadata": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                  "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                  "accountingDate": "2022-09-30"
                }
              },
              "examples": {
                "PatchInvoiceEndpointPatchInvoiceRequestModel": {
                  "summary": "",
                  "value": {
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
                    "accountingDate": "2022-09-30"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchInvoiceEndpointProductPatchInvoiceResponseModel",
                  "example": {
                    "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV00001",
                    "issueDate": "2022-09-15",
                    "dueDate": "2022-09-30",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer.user.a@example.com",
                      "customer.user.b@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "af60cab3-812d-4250-a051-0fb7133a00c7"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "finance@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                    "dunningStatus": "SCHEDULED",
                    "accountingDate": "2022-09-30",
                    "calculatedAt": "2022-09-30T00:00:00Z",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "PatchInvoiceEndpointProductPatchInvoiceResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV00001",
                      "issueDate": "2022-09-15",
                      "dueDate": "2022-09-30",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer.user.a@example.com",
                        "customer.user.b@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "af60cab3-812d-4250-a051-0fb7133a00c7"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "finance@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
                      "dunningStatus": "SCHEDULED",
                      "accountingDate": "2022-09-30",
                      "calculatedAt": "2022-09-30T00:00:00Z",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoice}/line-items/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Line Item",
        "description": "Update a Line Item",
        "operationId": "putInvoicesByInvoiceLineItemsById",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Line Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLineItemRequestModel",
                "example": {
                  "title": "Ferraris",
                  "description": "Red",
                  "quantity": "2",
                  "rate": "20000.10",
                  "taxRate": "0.2",
                  "servicePeriodStart": "2022-10-20T00:00:00Z",
                  "servicePeriodEnd": "2022-10-24T00:00:00Z",
                  "servicePeriod": {
                    "startDate": "2022-10-20",
                    "endDate": "2022-10-24"
                  },
                  "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                  "rateDisplay": "ABSOLUTE",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ]
                }
              },
              "examples": {
                "CreateOrUpdateLineItemRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "servicePeriodStart": "2022-10-20T00:00:00Z",
                    "servicePeriodEnd": "2022-10-24T00:00:00Z",
                    "servicePeriod": {
                      "startDate": "2022-10-20",
                      "endDate": "2022-10-24"
                    },
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "servicePeriodStart": "2022-10-20T00:00:00Z",
                    "servicePeriodEnd": "2022-10-24T00:00:00Z",
                    "servicePeriod": {
                      "startDate": "2022-10-20",
                      "endDate": "2022-10-24"
                    },
                    "index": 2,
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23",
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "revenueClassification": "EARNED",
                    "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                  }
                },
                "examples": {
                  "LineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "servicePeriodStart": "2022-10-20T00:00:00Z",
                      "servicePeriodEnd": "2022-10-24T00:00:00Z",
                      "servicePeriod": {
                        "startDate": "2022-10-20",
                        "endDate": "2022-10-24"
                      },
                      "index": 2,
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23",
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "revenueClassification": "EARNED",
                      "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Line Item",
        "description": "Delete a Line Item",
        "operationId": "deleteInvoicesByInvoiceLineItemsById",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Line Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "servicePeriodStart": "2022-10-20T00:00:00Z",
                    "servicePeriodEnd": "2022-10-24T00:00:00Z",
                    "servicePeriod": {
                      "startDate": "2022-10-20",
                      "endDate": "2022-10-24"
                    },
                    "index": 2,
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23",
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "revenueClassification": "EARNED",
                    "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                  }
                },
                "examples": {
                  "LineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "servicePeriodStart": "2022-10-20T00:00:00Z",
                      "servicePeriodEnd": "2022-10-24T00:00:00Z",
                      "servicePeriod": {
                        "startDate": "2022-10-20",
                        "endDate": "2022-10-24"
                      },
                      "index": 2,
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23",
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ],
                      "revenueClassification": "EARNED",
                      "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoice}/line-item-groups/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Line Item Group",
        "description": "Update a Line Item Group",
        "operationId": "putInvoicesByInvoiceLineItemGroupsById",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Line Item Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLineItemGroupEndpointUpdateLineItemGroupRequestModel",
                "example": {
                  "title": "Users",
                  "description": "Charges for users"
                }
              },
              "examples": {
                "UpdateLineItemGroupEndpointUpdateLineItemGroupRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Users",
                    "description": "Charges for users"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLineItemGroupEndpointProductUpdateLineItemGroupResponseModel",
                  "example": {
                    "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Users",
                    "description": "Charges for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "UpdateLineItemGroupEndpointProductUpdateLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Users",
                      "description": "Charges for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Line Item Group",
        "description": "Delete a Line Item Group",
        "operationId": "deleteInvoicesByInvoiceLineItemGroupsById",
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "description": "The Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Line Item Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLineItemGroupEndpointProductDeleteLineItemGroupResponseModel",
                  "example": {
                    "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                    "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "title": "Users",
                    "description": "Charges for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "DeleteLineItemGroupEndpointProductDeleteLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                      "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "title": "Users",
                      "description": "Charges for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/download": {
      "get": {
        "tags": [],
        "summary": "Download invoice PDF",
        "description": "Download invoice PDF",
        "operationId": "getInvoicesByIdDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/download": {
      "post": {
        "tags": [],
        "summary": "Download multiple invoice PDFs",
        "description": "Download multiple invoice PDFs as zip",
        "operationId": "postInvoicesDownload",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadMultipleInvoicePdfsEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "b9524205-b973-48bb-911f-db92f22c8c49"
                  ]
                }
              },
              "examples": {
                "DownloadMultipleInvoicePdfsEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "b9524205-b973-48bb-911f-db92f22c8c49"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/finalize-and-send": {
      "post": {
        "tags": [],
        "summary": "Finalize and send invoice",
        "description": "Updates to SENT status, generates invoice PDF and sends to end-customer",
        "operationId": "postInvoicesByIdFinalizeAndSend",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceNumber",
            "in": "query",
            "description": "Invoice number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/finalize-and-send": {
      "post": {
        "tags": [],
        "summary": "Finalize and send multiple invoices",
        "description": "Updates to SENT status, generates invoice PDF and sends to end-customer",
        "operationId": "postInvoicesFinalizeAndSend",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaliseAndSendMultipleInvoicesEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "FinaliseAndSendMultipleInvoicesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/finalize": {
      "post": {
        "tags": [],
        "summary": "Finalize invoice",
        "description": "Updates to FINAL status, generates invoice PDF and prevents further editing",
        "operationId": "postInvoicesByIdFinalize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceNumber",
            "in": "query",
            "description": "Invoice number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/finalize": {
      "post": {
        "tags": [],
        "summary": "Finalize multiple invoices",
        "description": "Updates to FINAL status, generates invoice PDF and prevents further editing",
        "operationId": "postInvoicesFinalize",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaliseMultipleInvoicesEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "FinaliseMultipleInvoicesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/invoices-grid": {
      "get": {
        "tags": [],
        "summary": "Get invoices grid",
        "description": "Get invoices grid",
        "operationId": "getInvoicesInvoicesGrid",
        "parameters": [
          {
            "name": "invoiceCurrency",
            "in": "query",
            "description": "Get invoices grid for a specific currency (cannot mix currencies)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerIds",
            "in": "query",
            "description": "Filter invoices by one or many comma-separated customer IDs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceStatuses",
            "in": "query",
            "description": "Filter invoices by one or many comma-separated statuses",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentStatuses",
            "in": "query",
            "description": "Filter invoices by one or many comma-separated payment statuses",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesGrid",
                  "example": {
                    "sequenceAccountId": "ac4c5184-b282-40b6-862c-ac9de3859e27",
                    "customerDetails": [
                      {
                        "customerId": "4ecc7384-e25e-459d-b811-fb5f3ae73923",
                        "legalName": "Saas Corp",
                        "total": "600",
                        "netTotal": "400",
                        "monthDetails": [
                          {
                            "month": "2023-09-01",
                            "total": "300",
                            "netTotal": "200",
                            "invoiceIds": [
                              "b78f0591-afcc-43bc-851f-2288aa25b07b"
                            ]
                          },
                          {
                            "month": "2023-10-01",
                            "total": "300",
                            "netTotal": "200",
                            "invoiceIds": [
                              "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
                            ]
                          }
                        ]
                      },
                      {
                        "customerId": "a0bc49b1-8e9a-4995-af73-5db2f9bd494b",
                        "legalName": "Hermanos Cafeteros Inc.",
                        "total": "600",
                        "netTotal": "400",
                        "monthDetails": [
                          {
                            "month": "2023-09-01",
                            "total": "300",
                            "netTotal": "200",
                            "invoiceIds": [
                              "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                            ]
                          },
                          {
                            "month": "2023-10-01",
                            "total": "300",
                            "netTotal": "200",
                            "invoiceIds": [
                              "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                              "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                            ]
                          }
                        ]
                      }
                    ],
                    "accountTotal": "1200",
                    "accountNetTotal": "800",
                    "monthDetails": [
                      {
                        "month": "2023-09-01",
                        "total": "600",
                        "netTotal": "400",
                        "invoiceIds": [
                          "b78f0591-afcc-43bc-851f-2288aa25b07b",
                          "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                        ]
                      },
                      {
                        "month": "2023-10-01",
                        "total": "600",
                        "netTotal": "400",
                        "invoiceIds": [
                          "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8",
                          "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                          "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                        ]
                      }
                    ]
                  }
                },
                "examples": {
                  "InvoicesGrid": {
                    "summary": "",
                    "value": {
                      "sequenceAccountId": "ac4c5184-b282-40b6-862c-ac9de3859e27",
                      "customerDetails": [
                        {
                          "customerId": "4ecc7384-e25e-459d-b811-fb5f3ae73923",
                          "legalName": "Saas Corp",
                          "total": "600",
                          "netTotal": "400",
                          "monthDetails": [
                            {
                              "month": "2023-09-01",
                              "total": "300",
                              "netTotal": "200",
                              "invoiceIds": [
                                "b78f0591-afcc-43bc-851f-2288aa25b07b"
                              ]
                            },
                            {
                              "month": "2023-10-01",
                              "total": "300",
                              "netTotal": "200",
                              "invoiceIds": [
                                "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
                              ]
                            }
                          ]
                        },
                        {
                          "customerId": "a0bc49b1-8e9a-4995-af73-5db2f9bd494b",
                          "legalName": "Hermanos Cafeteros Inc.",
                          "total": "600",
                          "netTotal": "400",
                          "monthDetails": [
                            {
                              "month": "2023-09-01",
                              "total": "300",
                              "netTotal": "200",
                              "invoiceIds": [
                                "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                              ]
                            },
                            {
                              "month": "2023-10-01",
                              "total": "300",
                              "netTotal": "200",
                              "invoiceIds": [
                                "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                                "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                              ]
                            }
                          ]
                        }
                      ],
                      "accountTotal": "1200",
                      "accountNetTotal": "800",
                      "monthDetails": [
                        {
                          "month": "2023-09-01",
                          "total": "600",
                          "netTotal": "400",
                          "invoiceIds": [
                            "b78f0591-afcc-43bc-851f-2288aa25b07b",
                            "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                          ]
                        },
                        {
                          "month": "2023-10-01",
                          "total": "600",
                          "netTotal": "400",
                          "invoiceIds": [
                            "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8",
                            "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                            "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/invoices-grid-csv": {
      "get": {
        "tags": [],
        "summary": "Download invoices grid CSV",
        "description": "Download invoices grid CSV",
        "operationId": "getInvoicesInvoicesGridCsv",
        "parameters": [
          {
            "name": "invoiceCurrency",
            "in": "query",
            "description": "Get invoices grid for a specific currency (cannot mix currencies)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (inclusive)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (inclusive)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/invoices-csv": {
      "get": {
        "tags": [],
        "summary": "Download invoices CSV",
        "description": "Download invoices CSV",
        "operationId": "getInvoicesInvoicesCsv",
        "parameters": [
          {
            "name": "invoiceStatus",
            "in": "query",
            "description": "Filter by invoice status. Options: IN_PROGRESS, DRAFT, FINAL, SENT, VOIDED",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoicePaymentStatus",
            "in": "query",
            "description": "Filter by payment status. Options: UNPAID, PARTIALLY_PAID, PAID, UNCOLLECTIBLE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by customer id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingScheduleId",
            "in": "query",
            "description": "Filter by billing schedule id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Filter by due date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Filter by due date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentBefore",
            "in": "query",
            "description": "Filter by sent date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentAfter",
            "in": "query",
            "description": "Filter by sent date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceBefore",
            "in": "query",
            "description": "Filter by invoice date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceAfter",
            "in": "query",
            "description": "Filter by invoice date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZeroQuantity",
            "in": "query",
            "description": "Exclude invoices with zero quantity.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoiceId}/line-item-groups/{lineItemGroupId}/usage-data": {
      "get": {
        "tags": [],
        "summary": "Get usage data for a line item group",
        "description": "Get usage data for a line item group",
        "operationId": "getInvoicesByInvoiceIdLineItemGroupsByLineItemGroupIdUsageData",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineItemGroupId",
            "in": "path",
            "description": "Line item group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptionalUsageDataResponse2",
                  "example": {
                    "data": {
                      "usageStart": "2023-02-01",
                      "usageEnd": "2023-04-30",
                      "metricName": "API Calls",
                      "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                      "total": "35",
                      "usageData": [
                        {
                          "periodStart": "2023-02-01",
                          "amount": "10",
                          "cumulativeAmount": "10"
                        },
                        {
                          "periodStart": "2023-03-01",
                          "amount": "15",
                          "cumulativeAmount": "25"
                        },
                        {
                          "periodStart": "2023-04-01",
                          "amount": "10",
                          "cumulativeAmount": "35"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "OptionalUsageDataResponse": {
                    "summary": "",
                    "value": {
                      "data": {
                        "usageStart": "2023-02-01",
                        "usageEnd": "2023-04-30",
                        "metricName": "API Calls",
                        "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
                        "total": "35",
                        "usageData": [
                          {
                            "periodStart": "2023-02-01",
                            "amount": "10",
                            "cumulativeAmount": "10"
                          },
                          {
                            "periodStart": "2023-03-01",
                            "amount": "15",
                            "cumulativeAmount": "25"
                          },
                          {
                            "periodStart": "2023-04-01",
                            "amount": "10",
                            "cumulativeAmount": "35"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/line-item-groups/all": {
      "get": {
        "tags": [],
        "summary": "List all line item groups for invoice",
        "description": "List all line item groups for invoice (unpaginated)",
        "operationId": "getInvoicesByIdLineItemGroupsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllLineItemGroupsUnpaginatedEndpointListAllLineItemGroupsResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Cars",
                        "description": "Charges for cars",
                        "index": 1,
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListAllLineItemGroupsUnpaginatedEndpointListAllLineItemGroupsResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "title": "Cars",
                          "description": "Charges for cars",
                          "index": 1,
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/line-items/all": {
      "get": {
        "tags": [],
        "summary": "List all line items for invoice",
        "description": "List all line items for invoice (unpaginated)",
        "operationId": "getInvoicesByIdLineItemsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllLineItemsUnpaginatedEndpointListAllLineItemsResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "2",
                        "rate": "20000.10",
                        "taxRate": "0.2",
                        "servicePeriodStart": "2022-10-20T00:00:00Z",
                        "servicePeriodEnd": "2022-10-24T00:00:00Z",
                        "servicePeriod": {
                          "startDate": "2022-10-20",
                          "endDate": "2022-10-24"
                        },
                        "index": 2,
                        "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                        "netTotal": "40000.20",
                        "totalTax": "8000.04",
                        "grossTotal": "48000.24",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ],
                        "revenueClassification": "EARNED"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListAllLineItemsUnpaginatedEndpointListAllLineItemsResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "title": "Ferraris",
                          "description": "Red",
                          "quantity": "2",
                          "rate": "20000.10",
                          "taxRate": "0.2",
                          "servicePeriodStart": "2022-10-20T00:00:00Z",
                          "servicePeriodEnd": "2022-10-24T00:00:00Z",
                          "servicePeriod": {
                            "startDate": "2022-10-20",
                            "endDate": "2022-10-24"
                          },
                          "index": 2,
                          "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                          "netTotal": "40000.20",
                          "totalTax": "8000.04",
                          "grossTotal": "48000.24",
                          "rateDisplay": "ABSOLUTE",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ],
                          "revenueClassification": "EARNED"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoiceId}/usage-item-groups/{id}": {
      "get": {
        "tags": [],
        "summary": "Get an Usage Item Group by ID",
        "description": "Get an Usage Item Group by ID",
        "operationId": "getInvoicesByInvoiceIdUsageItemGroupsById",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsageItemGroupEndpointGetUsageItemGroupResponseModel",
                  "example": {
                    "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
                    "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "title": "Successful API Calls",
                    "items": [
                      {
                        "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                        "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                        "title": "Eldest Child",
                        "value": "150",
                        "groupedValues": [],
                        "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                        "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                      },
                      {
                        "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                        "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                        "title": "Youngest Child",
                        "value": "300",
                        "groupedValues": [],
                        "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                        "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetUsageItemGroupEndpointGetUsageItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
                      "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                      "title": "Successful API Calls",
                      "items": [
                        {
                          "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                          "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                          "title": "Eldest Child",
                          "value": "150",
                          "groupedValues": [],
                          "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                          "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                        },
                        {
                          "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                          "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                          "title": "Youngest Child",
                          "value": "300",
                          "groupedValues": [],
                          "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                          "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{invoiceId}/usage-item-groups": {
      "get": {
        "tags": [],
        "summary": "Get an Usage Item Group by ID",
        "description": "Get an Usage Item Group by ID",
        "operationId": "getInvoicesByInvoiceIdUsageItemGroups",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsageItemGroupEndpointListUsageItemGroupResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
                        "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                        "title": "Successful API Calls",
                        "items": [
                          {
                            "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                            "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                            "title": "Eldest Child",
                            "value": "150",
                            "groupedValues": [],
                            "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                            "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                          },
                          {
                            "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                            "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                            "title": "Youngest Child",
                            "value": "300",
                            "groupedValues": [],
                            "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                            "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                          }
                        ]
                      }
                    ]
                  }
                },
                "examples": {
                  "ListUsageItemGroupEndpointListUsageItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
                          "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                          "title": "Successful API Calls",
                          "items": [
                            {
                              "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                              "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                              "title": "Eldest Child",
                              "value": "150",
                              "groupedValues": [],
                              "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                              "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                            },
                            {
                              "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                              "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                              "title": "Youngest Child",
                              "value": "300",
                              "groupedValues": [],
                              "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                              "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/usage-items/all": {
      "get": {
        "tags": [],
        "summary": "List all line usage items for invoice",
        "description": "List all usage items for invoice (unpaginated)",
        "operationId": "getInvoicesByIdUsageItemsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllUsageItemsUnpaginatedEndpointListAllUsageItemsResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "0186a182-5f3f-7ff0-8227-02d4e3999149",
                        "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "title": "Number of messages sent",
                        "value": "100",
                        "groupedValues": [
                          {
                            "grouping": "sms",
                            "value": 25
                          },
                          {
                            "grouping": "email",
                            "value": 75
                          }
                        ],
                        "lineItemGroupId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "usageItemGroupId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListAllUsageItemsUnpaginatedEndpointListAllUsageItemsResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "0186a182-5f3f-7ff0-8227-02d4e3999149",
                          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "title": "Number of messages sent",
                          "value": "100",
                          "groupedValues": [
                            {
                              "grouping": "sms",
                              "value": 25
                            },
                            {
                              "grouping": "email",
                              "value": 75
                            }
                          ],
                          "lineItemGroupId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "usageItemGroupId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/recalculate": {
      "post": {
        "tags": [],
        "summary": "Recalculate an Invoice",
        "description": "Recalculate an Invoice",
        "operationId": "postInvoicesByIdRecalculate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/recalculate": {
      "post": {
        "tags": [],
        "summary": "Recalculate multiple Invoices",
        "description": "Recalculate multiple Invoices in bulk",
        "operationId": "postInvoicesRecalculate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculateMultipleInvoicesEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "RecalculateMultipleInvoicesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/send": {
      "post": {
        "tags": [],
        "summary": "Send invoice",
        "description": "Updates to SENT status and sends to end-customer",
        "operationId": "postInvoicesByIdSend",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/send-payment-reminder": {
      "post": {
        "tags": [],
        "summary": "Send a payment reminder for an Invoice",
        "description": "Send a payment reminder for an Invoice",
        "operationId": "postInvoicesByIdSendPaymentReminder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/send": {
      "post": {
        "tags": [],
        "summary": "Send multiple invoices",
        "description": "Updates to SENT status and sends to end-customer",
        "operationId": "postInvoicesSend",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMultipleInvoicesEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "SendMultipleInvoicesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/send/{testEmail}": {
      "post": {
        "tags": [],
        "summary": "Send test invoice",
        "description": "Send test invoice email",
        "operationId": "postInvoicesByIdSendByTestEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testEmail",
            "in": "path",
            "description": "Test email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/payment-status": {
      "put": {
        "tags": [],
        "summary": "Update payment status for an invoice",
        "description": "Update payment status for an invoice",
        "operationId": "putInvoicesByIdPaymentStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoicePaymentStatusEndpointRequestModel",
                "example": {
                  "paymentStatus": "PAID"
                }
              },
              "examples": {
                "UpdateInvoicePaymentStatusEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "paymentStatus": "PAID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/payment-status": {
      "put": {
        "tags": [],
        "summary": "Update payment status for multiple invoices",
        "description": "Update payment status for multiple invoices",
        "operationId": "putInvoicesPaymentStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultipleInvoicesPaymentStatusEndpointRequestModel",
                "example": {
                  "paymentStatus": "PAID",
                  "invoiceIds": [
                    "e47552ce-8944-4404-8d62-101b0bd55bbd"
                  ]
                }
              },
              "examples": {
                "UpdateMultipleInvoicesPaymentStatusEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "paymentStatus": "PAID",
                    "invoiceIds": [
                      "e47552ce-8944-4404-8d62-101b0bd55bbd"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/{id}/void": {
      "post": {
        "tags": [],
        "summary": "Void an Invoice",
        "description": "Void an Invoice",
        "operationId": "postInvoicesByIdVoid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceNumber",
            "in": "query",
            "description": "Invoice number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice",
                  "example": {
                    "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "currency": "GBP",
                    "invoiceNumber": "INV2",
                    "dueDate": "2022-11-05",
                    "purchaseOrderNumber": "PO123",
                    "reference": "ref",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "paymentOptions": [
                      "BANK_TRANSFER"
                    ],
                    "billingPeriod": {
                      "start": "2022-10-01",
                      "endInclusive": "2022-10-30"
                    },
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "totalTax": "2",
                    "netTotal": "12",
                    "grossTotal": "10",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "paymentStatus": "UNPAID",
                    "createdAt": "2022-10-30T00:00:00Z",
                    "creditNoteIds": [
                      "941272d1-f840-4e16-b698-0cd455c81e0e"
                    ],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    },
                    "accountingDate": "2022-10-05",
                    "customerTaxStatus": "TAXED"
                  }
                },
                "examples": {
                  "Invoice": {
                    "summary": "",
                    "value": {
                      "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "currency": "GBP",
                      "invoiceNumber": "INV2",
                      "dueDate": "2022-11-05",
                      "purchaseOrderNumber": "PO123",
                      "reference": "ref",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "paymentOptions": [
                        "BANK_TRANSFER"
                      ],
                      "billingPeriod": {
                        "start": "2022-10-01",
                        "endInclusive": "2022-10-30"
                      },
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "totalTax": "2",
                      "netTotal": "12",
                      "grossTotal": "10",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "paymentStatus": "UNPAID",
                      "createdAt": "2022-10-30T00:00:00Z",
                      "creditNoteIds": [
                        "941272d1-f840-4e16-b698-0cd455c81e0e"
                      ],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      },
                      "accountingDate": "2022-10-05",
                      "customerTaxStatus": "TAXED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoices/void": {
      "post": {
        "tags": [],
        "summary": "Void multiple Invoices",
        "description": "Void multiple Invoices",
        "operationId": "postInvoicesVoid",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidMultipleInvoicesEndpointRequestModel",
                "example": {
                  "invoiceIds": [
                    "eaa8f192-6517-4548-a4e5-50b33858cda6"
                  ]
                }
              },
              "examples": {
                "VoidMultipleInvoicesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceIds": [
                      "eaa8f192-6517-4548-a4e5-50b33858cda6"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkAction",
                  "example": {
                    "id": "e007e884-5100-4183-8355-4771865cb4dd",
                    "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                    "type": "VOID_INVOICES",
                    "status": "PROCESSING",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "requestedIds": [],
                    "completedIds": [],
                    "failedIds": []
                  }
                },
                "examples": {
                  "BulkAction": {
                    "summary": "",
                    "value": {
                      "id": "e007e884-5100-4183-8355-4771865cb4dd",
                      "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                      "type": "VOID_INVOICES",
                      "status": "PROCESSING",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "requestedIds": [],
                      "completedIds": [],
                      "failedIds": []
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/credit-notes-csv": {
      "get": {
        "tags": [],
        "summary": "Download credit notes CSV",
        "description": "Download credit notes CSV",
        "operationId": "getCreditNotesCreditNotesCsv",
        "parameters": [
          {
            "name": "creditNoteStatus",
            "in": "query",
            "description": "Filter by credit note status. Options: DRAFT, FINAL, SENT, VOIDED",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by customer id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentBefore",
            "in": "query",
            "description": "Filter by sent date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentAfter",
            "in": "query",
            "description": "Filter by sent date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/line-items/from-invoice": {
      "post": {
        "tags": [],
        "summary": "Add line items from invoice to credit note",
        "description": "Creates line items from invoice and adds to credit note",
        "operationId": "postCreditNotesByIdLineItemsFromInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCreditNoteLineItemsFromInvoiceEndpointRequestModel",
                "example": {
                  "lineItemIds": [
                    "64414246-3704-4582-9e14-82784547fef7"
                  ]
                }
              },
              "examples": {
                "AddCreditNoteLineItemsFromInvoiceEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "lineItemIds": [
                      "64414246-3704-4582-9e14-82784547fef7"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes-totals": {
      "post": {
        "tags": [],
        "summary": "Calculate credit note totals",
        "description": "Calculate credit note totals",
        "operationId": "postCreditNotesTotals",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsRequest",
                "example": {
                  "lineItems": [
                    {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "10",
                      "rate": "200000",
                      "taxRate": "0.1",
                      "index": 1,
                      "netTotal": "200000",
                      "totalTax": "10",
                      "grossTotal": "22000",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": []
                    }
                  ]
                }
              },
              "examples": {
                "CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsRequest": {
                  "summary": "",
                  "value": {
                    "lineItems": [
                      {
                        "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                        "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "10",
                        "rate": "200000",
                        "taxRate": "0.1",
                        "index": 1,
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsResponse",
                  "example": {
                    "total": {
                      "netTotal": "200000",
                      "totalTax": "10",
                      "grossTotal": "22000"
                    },
                    "lineItemTotals": [
                      {
                        "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "total": {
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      }
                    ],
                    "lineItemGroupTotals": [
                      {
                        "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                        "total": {
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      }
                    ]
                  }
                },
                "examples": {
                  "CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsResponse": {
                    "summary": "",
                    "value": {
                      "total": {
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000"
                      },
                      "lineItemTotals": [
                        {
                          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "total": {
                            "netTotal": "200000",
                            "totalTax": "10",
                            "grossTotal": "22000"
                          }
                        }
                      ],
                      "lineItemGroupTotals": [
                        {
                          "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                          "total": {
                            "netTotal": "200000",
                            "totalTax": "10",
                            "grossTotal": "22000"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes": {
      "get": {
        "tags": [],
        "summary": "List all CreditNotes",
        "description": "List all CreditNotes",
        "operationId": "getCreditNotes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort column. Default: creation time. Options: GROSS_TOTAL, CREDIT_NOTE_NUMBER, STATUS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditNoteStatus",
            "in": "query",
            "description": "Filter by credit note status. Options: DRAFT, FINAL, SENT, VOIDED",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter by customer id.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentBefore",
            "in": "query",
            "description": "Filter by sent date before. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sentAfter",
            "in": "query",
            "description": "Filter by sent date after. Format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreditNoteEndpointProductListCreditNotePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                        "status": "DRAFT",
                        "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "invoiceNumber": "INV00001",
                        "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                        "currency": "GBP",
                        "issueDate": "2022-09-15",
                        "billingPeriodStart": "2022-10-01T00:00:00Z",
                        "billingPeriodEnd": "2022-10-30T00:00:00Z",
                        "creditNoteNumber": "CN00001",
                        "purchaseOrderNumber": "PO123",
                        "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                        "customerEmails": [
                          "customer@example.com"
                        ],
                        "customerLegalCompanyName": "Facebook",
                        "customerBillingAddress": {
                          "line1": "Flat 1",
                          "line2": "15 Yemen Road",
                          "town": "Yemen",
                          "state": "CA",
                          "postcode": "YE1 2YE",
                          "country": "YE"
                        },
                        "customerShippingAddress": {
                          "line1": "742 Evergreen Terrace",
                          "town": "Springfield",
                          "state": "CA",
                          "postcode": "12345",
                          "country": "US"
                        },
                        "memo": "Thanks",
                        "totalTax": "2.50",
                        "netTotal": "51.20",
                        "grossTotal": "101.23",
                        "metadata": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "customerTaxId": "TAX123",
                        "linkedServices": [
                          {
                            "externalId": "123",
                            "externalService": "Xero",
                            "syncTime": "2022-06-28T16:47:00Z"
                          }
                        ],
                        "merchantDetails": {
                          "address": {
                            "line1": "The White House",
                            "line2": "1600 Pennsylvania Avenue",
                            "town": "Washington, D.C.",
                            "state": "CA",
                            "postcode": "20500",
                            "country": "US"
                          },
                          "phoneNumber": "0800001066",
                          "email": "donald@example.com",
                          "taxId": "TAX60",
                          "logoUrl": "logo",
                          "legalCompanyName": "The Merchant",
                          "primaryColour": "#000000",
                          "customFields": [
                            {
                              "key": "example-label",
                              "value": "label-value"
                            }
                          ],
                          "includeBeneficiaryAddressInPaymentDetails": false
                        }
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListCreditNoteEndpointProductListCreditNotePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                          "status": "DRAFT",
                          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "invoiceNumber": "INV00001",
                          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                          "currency": "GBP",
                          "issueDate": "2022-09-15",
                          "billingPeriodStart": "2022-10-01T00:00:00Z",
                          "billingPeriodEnd": "2022-10-30T00:00:00Z",
                          "creditNoteNumber": "CN00001",
                          "purchaseOrderNumber": "PO123",
                          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                          "customerEmails": [
                            "customer@example.com"
                          ],
                          "customerLegalCompanyName": "Facebook",
                          "customerBillingAddress": {
                            "line1": "Flat 1",
                            "line2": "15 Yemen Road",
                            "town": "Yemen",
                            "state": "CA",
                            "postcode": "YE1 2YE",
                            "country": "YE"
                          },
                          "customerShippingAddress": {
                            "line1": "742 Evergreen Terrace",
                            "town": "Springfield",
                            "state": "CA",
                            "postcode": "12345",
                            "country": "US"
                          },
                          "memo": "Thanks",
                          "totalTax": "2.50",
                          "netTotal": "51.20",
                          "grossTotal": "101.23",
                          "metadata": [
                            {
                              "key": "example-label",
                              "value": "label-value"
                            }
                          ],
                          "customerTaxId": "TAX123",
                          "linkedServices": [
                            {
                              "externalId": "123",
                              "externalService": "Xero",
                              "syncTime": "2022-06-28T16:47:00Z"
                            }
                          ],
                          "merchantDetails": {
                            "address": {
                              "line1": "The White House",
                              "line2": "1600 Pennsylvania Avenue",
                              "town": "Washington, D.C.",
                              "state": "CA",
                              "postcode": "20500",
                              "country": "US"
                            },
                            "phoneNumber": "0800001066",
                            "email": "donald@example.com",
                            "taxId": "TAX60",
                            "logoUrl": "logo",
                            "legalCompanyName": "The Merchant",
                            "primaryColour": "#000000",
                            "customFields": [
                              {
                                "key": "example-label",
                                "value": "label-value"
                              }
                            ],
                            "includeBeneficiaryAddressInPaymentDetails": false
                          }
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Credit Note",
        "description": "Create a new Credit Note",
        "operationId": "postCreditNotes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteEndpointCreateCreditNoteRequestModel",
                "example": {
                  "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                  "currency": "GBP",
                  "billingPeriodStart": "2022-10-01T00:00:00Z",
                  "billingPeriodEnd": "2022-10-30T00:00:00Z",
                  "purchaseOrderNumber": "PO123",
                  "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                  "customerEmails": [
                    "customer@example.com",
                    "customer.alias@example.com"
                  ],
                  "customerLegalCompanyName": "Facebook",
                  "customerBillingAddress": {
                    "line1": "Flat 1",
                    "line2": "15 Yemen Road",
                    "town": "Yemen",
                    "state": "CA",
                    "postcode": "YE1 2YE",
                    "country": "YE"
                  },
                  "customerShippingAddress": {
                    "line1": "742 Evergreen Terrace",
                    "town": "Springfield",
                    "state": "CA",
                    "postcode": "12345",
                    "country": "US"
                  },
                  "memo": "Thanks",
                  "metadata": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "customerTaxId": "TAX123"
                }
              },
              "examples": {
                "CreateCreditNoteEndpointCreateCreditNoteRequestModel": {
                  "summary": "",
                  "value": {
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "currency": "GBP",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditNoteEndpointProductCreateCreditNoteResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "status": "DRAFT",
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceNumber": "INV00001",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "currency": "GBP",
                    "issueDate": "2022-09-15",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": true
                    }
                  }
                },
                "examples": {
                  "CreateCreditNoteEndpointProductCreateCreditNoteResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "status": "DRAFT",
                      "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceNumber": "INV00001",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "currency": "GBP",
                      "issueDate": "2022-09-15",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "customerEmails": [
                        "customer@example.com",
                        "customer.alias@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{creditnote}/line-items": {
      "get": {
        "tags": [],
        "summary": "List all Credit Note Line Items",
        "description": "List all Credit Note Line Items",
        "operationId": "getCreditNotesByCreditnoteLineItems",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreditNoteLineItemEndpointProductListCreditNoteLineItemPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                        "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "2",
                        "rate": "20000.10",
                        "taxRate": "0.2",
                        "index": 2,
                        "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                        "netTotal": "20000.00",
                        "totalTax": "2000.00",
                        "grossTotal": "22000.00",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": [
                          {
                            "key": "Xero",
                            "value": "123"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCreditNoteLineItemEndpointProductListCreditNoteLineItemPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "title": "Ferraris",
                          "description": "Red",
                          "quantity": "2",
                          "rate": "20000.10",
                          "taxRate": "0.2",
                          "index": 2,
                          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                          "netTotal": "20000.00",
                          "totalTax": "2000.00",
                          "grossTotal": "22000.00",
                          "rateDisplay": "ABSOLUTE",
                          "externalIds": [
                            {
                              "key": "Xero",
                              "value": "123"
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Credit Note Line Item",
        "description": "Create a new Credit Note Line Item",
        "operationId": "postCreditNotesByCreditnoteLineItems",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteLineItemEndpointCreateCreditNoteLineItemRequestModel",
                "example": {
                  "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                  "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                  "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                  "title": "Ferraris",
                  "description": "Red",
                  "quantity": "2",
                  "rate": "20000.10",
                  "taxRate": "0.2",
                  "rateDisplay": "ABSOLUTE",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ]
                }
              },
              "examples": {
                "CreateCreditNoteLineItemEndpointCreateCreditNoteLineItemRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditNoteLineItemEndpointProductCreateCreditNoteLineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "index": 2,
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "netTotal": "20000.00",
                    "totalTax": "2000.00",
                    "grossTotal": "22000.00",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                },
                "examples": {
                  "CreateCreditNoteLineItemEndpointProductCreateCreditNoteLineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "index": 2,
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "netTotal": "20000.00",
                      "totalTax": "2000.00",
                      "grossTotal": "22000.00",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{creditnote}/line-item-groups": {
      "get": {
        "tags": [],
        "summary": "List all Credit Note Line Item Groups",
        "description": "List all Credit Note Line Item Groups",
        "operationId": "getCreditNotesByCreditnoteLineItemGroups",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreditNoteLineItemGroupEndpointProductListCreditNoteLineItemGroupPaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                        "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "title": "Users",
                        "description": "Credit note for users",
                        "index": 2,
                        "netTotal": "51.20",
                        "totalTax": "2.50",
                        "grossTotal": "101.23"
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListCreditNoteLineItemGroupEndpointProductListCreditNoteLineItemGroupPaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "title": "Users",
                          "description": "Credit note for users",
                          "index": 2,
                          "netTotal": "51.20",
                          "totalTax": "2.50",
                          "grossTotal": "101.23"
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create a new Credit Note Line Item Group",
        "description": "Create a new Credit Note Line Item Group",
        "operationId": "postCreditNotesByCreditnoteLineItemGroups",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteLineItemGroupEndpointCreateCreditNoteLineItemGroupRequestModel",
                "example": {
                  "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                  "title": "Users",
                  "description": "Credit note for users"
                }
              },
              "examples": {
                "CreateCreditNoteLineItemGroupEndpointCreateCreditNoteLineItemGroupRequestModel": {
                  "summary": "",
                  "value": {
                    "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Users",
                    "description": "Credit note for users"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditNoteLineItemGroupEndpointProductCreateCreditNoteLineItemGroupResponseModel",
                  "example": {
                    "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Users",
                    "description": "Credit note for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "CreateCreditNoteLineItemGroupEndpointProductCreateCreditNoteLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Users",
                      "description": "Credit note for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}": {
      "get": {
        "tags": [],
        "summary": "Get a Credit Note by ID",
        "description": "Get a Credit Note by ID",
        "operationId": "getCreditNotesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditNoteEndpointProductGetCreditNoteResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "status": "DRAFT",
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceNumber": "INV00001",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "currency": "GBP",
                    "issueDate": "2022-09-15",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": true
                    }
                  }
                },
                "examples": {
                  "GetCreditNoteEndpointProductGetCreditNoteResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "status": "DRAFT",
                      "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceNumber": "INV00001",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "currency": "GBP",
                      "issueDate": "2022-09-15",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "customerEmails": [
                        "customer@example.com",
                        "customer.alias@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update a Credit Note",
        "description": "Update a Credit Note",
        "operationId": "putCreditNotesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditNoteEndpointUpdateCreditNoteRequestModel",
                "example": {
                  "billingPeriodStart": "2022-10-01T00:00:00Z",
                  "billingPeriodEnd": "2022-10-30T00:00:00Z",
                  "purchaseOrderNumber": "PO123",
                  "customerEmails": [
                    "customer@example.com",
                    "customer.alias@example.com"
                  ],
                  "customerLegalCompanyName": "Facebook",
                  "customerBillingAddress": {
                    "line1": "Flat 1",
                    "line2": "15 Yemen Road",
                    "town": "Yemen",
                    "state": "CA",
                    "postcode": "YE1 2YE",
                    "country": "YE"
                  },
                  "customerShippingAddress": {
                    "line1": "742 Evergreen Terrace",
                    "town": "Springfield",
                    "state": "CA",
                    "postcode": "12345",
                    "country": "US"
                  },
                  "memo": "Thanks",
                  "metadata": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "customerTaxId": "TAX123"
                }
              },
              "examples": {
                "UpdateCreditNoteEndpointUpdateCreditNoteRequestModel": {
                  "summary": "",
                  "value": {
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "purchaseOrderNumber": "PO123",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCreditNoteEndpointProductUpdateCreditNoteResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "status": "DRAFT",
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceNumber": "INV00001",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "currency": "GBP",
                    "issueDate": "2022-09-15",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": true
                    }
                  }
                },
                "examples": {
                  "UpdateCreditNoteEndpointProductUpdateCreditNoteResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "status": "DRAFT",
                      "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceNumber": "INV00001",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "currency": "GBP",
                      "issueDate": "2022-09-15",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "customerEmails": [
                        "customer@example.com",
                        "customer.alias@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Credit Note",
        "description": "Delete a Credit Note",
        "operationId": "deleteCreditNotesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCreditNoteEndpointProductDeleteCreditNoteResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "status": "DRAFT",
                    "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "invoiceNumber": "INV00001",
                    "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "currency": "GBP",
                    "issueDate": "2022-09-15",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                    "customerEmails": [
                      "customer@example.com",
                      "customer.alias@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "2.50",
                    "netTotal": "51.20",
                    "grossTotal": "101.23",
                    "metadata": [
                      {
                        "key": "example-label",
                        "value": "label-value"
                      }
                    ],
                    "customerTaxId": "TAX123",
                    "linkedServices": [
                      {
                        "externalId": "123",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "The White House",
                        "line2": "1600 Pennsylvania Avenue",
                        "town": "Washington, D.C.",
                        "state": "CA",
                        "postcode": "20500",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX60",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "000000",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "caBankAccountDetails": {
                        "transitNumber": "123",
                        "institutionNumber": "12345",
                        "accountNumber": "1234567"
                      },
                      "canadianInternationalDestination": {
                        "legalName": "John Doe",
                        "accountNumber": "12345678",
                        "transitNumber": "12345",
                        "bankName": "Chase",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        },
                        "institutionNumber": "123",
                        "swiftCode": "CHASUS33",
                        "intermediaryBank": {
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "swiftCode": "CHASUS33",
                          "routingNumber": "123456789"
                        }
                      },
                      "logoUrl": "logo",
                      "legalCompanyName": "The Merchant",
                      "primaryColour": "#000000",
                      "customFields": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "includeBeneficiaryAddressInPaymentDetails": true
                    }
                  }
                },
                "examples": {
                  "DeleteCreditNoteEndpointProductDeleteCreditNoteResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "status": "DRAFT",
                      "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "invoiceNumber": "INV00001",
                      "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "currency": "GBP",
                      "issueDate": "2022-09-15",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                      "customerEmails": [
                        "customer@example.com",
                        "customer.alias@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "2.50",
                      "netTotal": "51.20",
                      "grossTotal": "101.23",
                      "metadata": [
                        {
                          "key": "example-label",
                          "value": "label-value"
                        }
                      ],
                      "customerTaxId": "TAX123",
                      "linkedServices": [
                        {
                          "externalId": "123",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "The White House",
                          "line2": "1600 Pennsylvania Avenue",
                          "town": "Washington, D.C.",
                          "state": "CA",
                          "postcode": "20500",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX60",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "000000",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "caBankAccountDetails": {
                          "transitNumber": "123",
                          "institutionNumber": "12345",
                          "accountNumber": "1234567"
                        },
                        "canadianInternationalDestination": {
                          "legalName": "John Doe",
                          "accountNumber": "12345678",
                          "transitNumber": "12345",
                          "bankName": "Chase",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          },
                          "institutionNumber": "123",
                          "swiftCode": "CHASUS33",
                          "intermediaryBank": {
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "swiftCode": "CHASUS33",
                            "routingNumber": "123456789"
                          }
                        },
                        "logoUrl": "logo",
                        "legalCompanyName": "The Merchant",
                        "primaryColour": "#000000",
                        "customFields": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "includeBeneficiaryAddressInPaymentDetails": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{creditnote}/line-items/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Credit Note Line Item",
        "description": "Update a Credit Note Line Item",
        "operationId": "putCreditNotesByCreditnoteLineItemsById",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Line Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditNoteLineItemEndpointUpdateCreditNoteLineItemRequestModel",
                "example": {
                  "title": "Ferraris",
                  "description": "Red",
                  "quantity": "2",
                  "rate": "20000.10",
                  "taxRate": "0.2",
                  "rateDisplay": "ABSOLUTE",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ]
                }
              },
              "examples": {
                "UpdateCreditNoteLineItemEndpointUpdateCreditNoteLineItemRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCreditNoteLineItemEndpointProductUpdateCreditNoteLineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "index": 2,
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "netTotal": "20000.00",
                    "totalTax": "2000.00",
                    "grossTotal": "22000.00",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                },
                "examples": {
                  "UpdateCreditNoteLineItemEndpointProductUpdateCreditNoteLineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "index": 2,
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "netTotal": "20000.00",
                      "totalTax": "2000.00",
                      "grossTotal": "22000.00",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Credit Note Line Item",
        "description": "Delete a Credit Note Line Item",
        "operationId": "deleteCreditNotesByCreditnoteLineItemsById",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Line Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCreditNoteLineItemEndpointProductDeleteCreditNoteLineItemResponseModel",
                  "example": {
                    "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                    "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Ferraris",
                    "description": "Red",
                    "quantity": "2",
                    "rate": "20000.10",
                    "taxRate": "0.2",
                    "index": 2,
                    "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                    "netTotal": "20000.00",
                    "totalTax": "2000.00",
                    "grossTotal": "22000.00",
                    "rateDisplay": "ABSOLUTE",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ]
                  }
                },
                "examples": {
                  "DeleteCreditNoteLineItemEndpointProductDeleteCreditNoteLineItemResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                      "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Ferraris",
                      "description": "Red",
                      "quantity": "2",
                      "rate": "20000.10",
                      "taxRate": "0.2",
                      "index": 2,
                      "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                      "netTotal": "20000.00",
                      "totalTax": "2000.00",
                      "grossTotal": "22000.00",
                      "rateDisplay": "ABSOLUTE",
                      "externalIds": [
                        {
                          "key": "Xero",
                          "value": "123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{creditnote}/line-item-groups/{id}": {
      "put": {
        "tags": [],
        "summary": "Update a Credit Note Line Item Group",
        "description": "Update a Credit Note Line Item Group",
        "operationId": "putCreditNotesByCreditnoteLineItemGroupsById",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Line Item Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditNoteLineItemGroupEndpointUpdateCreditNoteLineItemGroupRequestModel",
                "example": {
                  "title": "Users",
                  "description": "Credit note for users"
                }
              },
              "examples": {
                "UpdateCreditNoteLineItemGroupEndpointUpdateCreditNoteLineItemGroupRequestModel": {
                  "summary": "",
                  "value": {
                    "title": "Users",
                    "description": "Credit note for users"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCreditNoteLineItemGroupEndpointProductUpdateCreditNoteLineItemGroupResponseModel",
                  "example": {
                    "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Users",
                    "description": "Credit note for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "UpdateCreditNoteLineItemGroupEndpointProductUpdateCreditNoteLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Users",
                      "description": "Credit note for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a Credit Note Line Item Group",
        "description": "Delete a Credit Note Line Item Group",
        "operationId": "deleteCreditNotesByCreditnoteLineItemGroupsById",
        "parameters": [
          {
            "name": "creditnote",
            "in": "path",
            "description": "The CreditNote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Line Item Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCreditNoteLineItemGroupEndpointProductDeleteCreditNoteLineItemGroupResponseModel",
                  "example": {
                    "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                    "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                    "title": "Users",
                    "description": "Credit note for users",
                    "index": 2,
                    "netTotal": "51.20",
                    "totalTax": "2.50",
                    "grossTotal": "101.23"
                  }
                },
                "examples": {
                  "DeleteCreditNoteLineItemGroupEndpointProductDeleteCreditNoteLineItemGroupResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                      "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                      "title": "Users",
                      "description": "Credit note for users",
                      "index": 2,
                      "netTotal": "51.20",
                      "totalTax": "2.50",
                      "grossTotal": "101.23"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/download": {
      "get": {
        "tags": [],
        "summary": "Download credit note PDF",
        "description": "Download credit note PDF",
        "operationId": "getCreditNotesByIdDownload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/download": {
      "post": {
        "tags": [],
        "summary": "Download multiple credit note PDFs",
        "description": "Download multiple credit note PDFs as zip",
        "operationId": "postCreditNotesDownload",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadMultipleCreditNotePdfsEndpointRequestModel",
                "example": {
                  "creditNoteIds": [
                    "b9524205-b973-48bb-911f-db92f22c8c49"
                  ]
                }
              },
              "examples": {
                "DownloadMultipleCreditNotePdfsEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteIds": [
                      "b9524205-b973-48bb-911f-db92f22c8c49"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/finalize-and-send": {
      "post": {
        "tags": [],
        "summary": "Finalize and send credit note",
        "description": "Updates to SENT status, generates credit note PDF and sends to end-customer",
        "operationId": "postCreditNotesByIdFinalizeAndSend",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditNoteNumber",
            "in": "query",
            "description": "Credit note number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote",
                  "example": {
                    "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                    "invoiceNumber": "INV00001",
                    "currency": "GBP",
                    "issueDate": "2022-11-05",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "0",
                    "netTotal": "0",
                    "grossTotal": "0",
                    "metadata": [],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                },
                "examples": {
                  "CreditNote": {
                    "summary": "",
                    "value": {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "invoiceNumber": "INV00001",
                      "currency": "GBP",
                      "issueDate": "2022-11-05",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "0",
                      "netTotal": "0",
                      "grossTotal": "0",
                      "metadata": [],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/finalize-and-send": {
      "post": {
        "tags": [],
        "summary": "Finalize and send multiple credit notes",
        "description": "Updates to SENT status, generates credit note PDF and sends to end-customer",
        "operationId": "postCreditNotesFinalizeAndSend",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaliseAndSendMultipleCreditNotesEndpointRequestModel",
                "example": {
                  "creditNoteIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "FinaliseAndSendMultipleCreditNotesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/finalize": {
      "post": {
        "tags": [],
        "summary": "Finalize credit note",
        "description": "Updates to FINAL status, generates credit note PDF and prevents further editing",
        "operationId": "postCreditNotesByIdFinalize",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditNoteNumber",
            "in": "query",
            "description": "Credit note number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote",
                  "example": {
                    "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                    "invoiceNumber": "INV00001",
                    "currency": "GBP",
                    "issueDate": "2022-11-05",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "0",
                    "netTotal": "0",
                    "grossTotal": "0",
                    "metadata": [],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                },
                "examples": {
                  "CreditNote": {
                    "summary": "",
                    "value": {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "invoiceNumber": "INV00001",
                      "currency": "GBP",
                      "issueDate": "2022-11-05",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "0",
                      "netTotal": "0",
                      "grossTotal": "0",
                      "metadata": [],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/finalize": {
      "post": {
        "tags": [],
        "summary": "Finalize multiple credit notes",
        "description": "Updates to FINAL status, generates credit note PDF and prevents further editing",
        "operationId": "postCreditNotesFinalize",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinaliseMultipleCreditNotesEndpointRequestModel",
                "example": {
                  "creditNoteIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "FinaliseMultipleCreditNotesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/line-items/all": {
      "get": {
        "tags": [],
        "summary": "List line items for a credit note",
        "description": "List all line items for credit note (unpaginated)",
        "operationId": "getCreditNotesByIdLineItemsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllCreditNoteLineItemsUnpaginatedEndpointListAllLineItemsResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                        "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                        "title": "Ferraris",
                        "description": "Red",
                        "quantity": "10",
                        "rate": "200000",
                        "taxRate": "0.1",
                        "index": 1,
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000",
                        "rateDisplay": "ABSOLUTE",
                        "externalIds": []
                      }
                    ]
                  }
                },
                "examples": {
                  "ListAllCreditNoteLineItemsUnpaginatedEndpointListAllLineItemsResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                          "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                          "title": "Ferraris",
                          "description": "Red",
                          "quantity": "10",
                          "rate": "200000",
                          "taxRate": "0.1",
                          "index": 1,
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000",
                          "rateDisplay": "ABSOLUTE",
                          "externalIds": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/line-item-groups/all": {
      "get": {
        "tags": [],
        "summary": "List all line item groups for credit note",
        "description": "List all line item groups for credit note (unpaginated)",
        "operationId": "getCreditNotesByIdLineItemGroupsAll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllCreditNoteLineItemGroupsUnpaginatedEndpointListAllCreditNoteLineItemGroupsResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                        "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                        "lineItemGroupId": "941272d1-f840-4e16-b698-00cd455c81e0",
                        "title": "Cars",
                        "description": "Credit for cars",
                        "index": 1,
                        "netTotal": "200000",
                        "totalTax": "10",
                        "grossTotal": "22000"
                      }
                    ]
                  }
                },
                "examples": {
                  "ListAllCreditNoteLineItemGroupsUnpaginatedEndpointListAllCreditNoteLineItemGroupsResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                          "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                          "lineItemGroupId": "941272d1-f840-4e16-b698-00cd455c81e0",
                          "title": "Cars",
                          "description": "Credit for cars",
                          "index": 1,
                          "netTotal": "200000",
                          "totalTax": "10",
                          "grossTotal": "22000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/filtered": {
      "get": {
        "tags": [],
        "summary": "List all Credit Notes by a provided id",
        "description": "List all Credit Notes by a provided id",
        "operationId": "getCreditNotesFiltered",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination cursor. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order. Default: DESC (descending, most often used for reverse chronological sorting).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "The id to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListByQueryIdCreditNoteEndpointProductListByQueryIdCreditNotePaginatedResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                        "status": "DRAFT",
                        "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                        "invoiceNumber": "INV00001",
                        "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                        "currency": "GBP",
                        "issueDate": "2022-09-15",
                        "billingPeriodStart": "2022-10-01T00:00:00Z",
                        "billingPeriodEnd": "2022-10-30T00:00:00Z",
                        "creditNoteNumber": "CN00001",
                        "purchaseOrderNumber": "PO123",
                        "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                        "customerEmails": [
                          "customer@example.com",
                          "customer.alias@example.com"
                        ],
                        "customerLegalCompanyName": "Facebook",
                        "customerBillingAddress": {
                          "line1": "Flat 1",
                          "line2": "15 Yemen Road",
                          "town": "Yemen",
                          "state": "CA",
                          "postcode": "YE1 2YE",
                          "country": "YE"
                        },
                        "customerShippingAddress": {
                          "line1": "742 Evergreen Terrace",
                          "town": "Springfield",
                          "state": "CA",
                          "postcode": "12345",
                          "country": "US"
                        },
                        "memo": "Thanks",
                        "totalTax": "2.50",
                        "netTotal": "51.20",
                        "grossTotal": "101.23",
                        "metadata": [
                          {
                            "key": "example-label",
                            "value": "label-value"
                          }
                        ],
                        "customerTaxId": "TAX123",
                        "linkedServices": [
                          {
                            "externalId": "123",
                            "externalService": "Xero",
                            "syncTime": "2022-06-28T16:47:00Z"
                          }
                        ],
                        "merchantDetails": {
                          "address": {
                            "line1": "The White House",
                            "line2": "1600 Pennsylvania Avenue",
                            "town": "Washington, D.C.",
                            "state": "CA",
                            "postcode": "20500",
                            "country": "US"
                          },
                          "phoneNumber": "0800001066",
                          "email": "donald@example.com",
                          "taxId": "TAX60",
                          "iban": "GB33BUKB20201555555555",
                          "ukAccountDetails": {
                            "sortCode": "000000",
                            "accountNumber": "12345678"
                          },
                          "usAchDetails": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789"
                          },
                          "usWireDetails": {
                            "accountNumber": "12345678",
                            "accountName": "John Doe",
                            "bankName": "Chase",
                            "bankRoutingNumber": "123456789",
                            "swiftCode": "CHASUS33",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            }
                          },
                          "caBankAccountDetails": {
                            "transitNumber": "123",
                            "institutionNumber": "12345",
                            "accountNumber": "1234567"
                          },
                          "canadianInternationalDestination": {
                            "legalName": "John Doe",
                            "accountNumber": "12345678",
                            "transitNumber": "12345",
                            "bankName": "Chase",
                            "bankAddress": {
                              "line1": "JP Morgan Chase",
                              "town": "New York City",
                              "state": "NY",
                              "postcode": "10017",
                              "country": "US"
                            },
                            "institutionNumber": "123",
                            "swiftCode": "CHASUS33",
                            "intermediaryBank": {
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "swiftCode": "CHASUS33",
                              "routingNumber": "123456789"
                            }
                          },
                          "logoUrl": "logo",
                          "legalCompanyName": "The Merchant",
                          "primaryColour": "#000000",
                          "customFields": [
                            {
                              "key": "example-label",
                              "value": "label-value"
                            }
                          ],
                          "includeBeneficiaryAddressInPaymentDetails": true
                        }
                      }
                    ],
                    "pagination": {
                      "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                      "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                      "totalResultSize": 10
                    }
                  }
                },
                "examples": {
                  "ListByQueryIdCreditNoteEndpointProductListByQueryIdCreditNotePaginatedResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                          "status": "DRAFT",
                          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                          "invoiceNumber": "INV00001",
                          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                          "currency": "GBP",
                          "issueDate": "2022-09-15",
                          "billingPeriodStart": "2022-10-01T00:00:00Z",
                          "billingPeriodEnd": "2022-10-30T00:00:00Z",
                          "creditNoteNumber": "CN00001",
                          "purchaseOrderNumber": "PO123",
                          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                          "customerEmails": [
                            "customer@example.com",
                            "customer.alias@example.com"
                          ],
                          "customerLegalCompanyName": "Facebook",
                          "customerBillingAddress": {
                            "line1": "Flat 1",
                            "line2": "15 Yemen Road",
                            "town": "Yemen",
                            "state": "CA",
                            "postcode": "YE1 2YE",
                            "country": "YE"
                          },
                          "customerShippingAddress": {
                            "line1": "742 Evergreen Terrace",
                            "town": "Springfield",
                            "state": "CA",
                            "postcode": "12345",
                            "country": "US"
                          },
                          "memo": "Thanks",
                          "totalTax": "2.50",
                          "netTotal": "51.20",
                          "grossTotal": "101.23",
                          "metadata": [
                            {
                              "key": "example-label",
                              "value": "label-value"
                            }
                          ],
                          "customerTaxId": "TAX123",
                          "linkedServices": [
                            {
                              "externalId": "123",
                              "externalService": "Xero",
                              "syncTime": "2022-06-28T16:47:00Z"
                            }
                          ],
                          "merchantDetails": {
                            "address": {
                              "line1": "The White House",
                              "line2": "1600 Pennsylvania Avenue",
                              "town": "Washington, D.C.",
                              "state": "CA",
                              "postcode": "20500",
                              "country": "US"
                            },
                            "phoneNumber": "0800001066",
                            "email": "donald@example.com",
                            "taxId": "TAX60",
                            "iban": "GB33BUKB20201555555555",
                            "ukAccountDetails": {
                              "sortCode": "000000",
                              "accountNumber": "12345678"
                            },
                            "usAchDetails": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789"
                            },
                            "usWireDetails": {
                              "accountNumber": "12345678",
                              "accountName": "John Doe",
                              "bankName": "Chase",
                              "bankRoutingNumber": "123456789",
                              "swiftCode": "CHASUS33",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              }
                            },
                            "caBankAccountDetails": {
                              "transitNumber": "123",
                              "institutionNumber": "12345",
                              "accountNumber": "1234567"
                            },
                            "canadianInternationalDestination": {
                              "legalName": "John Doe",
                              "accountNumber": "12345678",
                              "transitNumber": "12345",
                              "bankName": "Chase",
                              "bankAddress": {
                                "line1": "JP Morgan Chase",
                                "town": "New York City",
                                "state": "NY",
                                "postcode": "10017",
                                "country": "US"
                              },
                              "institutionNumber": "123",
                              "swiftCode": "CHASUS33",
                              "intermediaryBank": {
                                "bankName": "Chase",
                                "bankAddress": {
                                  "line1": "JP Morgan Chase",
                                  "town": "New York City",
                                  "state": "NY",
                                  "postcode": "10017",
                                  "country": "US"
                                },
                                "swiftCode": "CHASUS33",
                                "routingNumber": "123456789"
                              }
                            },
                            "logoUrl": "logo",
                            "legalCompanyName": "The Merchant",
                            "primaryColour": "#000000",
                            "customFields": [
                              {
                                "key": "example-label",
                                "value": "label-value"
                              }
                            ],
                            "includeBeneficiaryAddressInPaymentDetails": true
                          }
                        }
                      ],
                      "pagination": {
                        "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
                        "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
                        "totalResultSize": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/send": {
      "post": {
        "tags": [],
        "summary": "Send credit note",
        "description": "Updates to SENT status and sends to end-customer",
        "operationId": "postCreditNotesByIdSend",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote",
                  "example": {
                    "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                    "invoiceNumber": "INV00001",
                    "currency": "GBP",
                    "issueDate": "2022-11-05",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "0",
                    "netTotal": "0",
                    "grossTotal": "0",
                    "metadata": [],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                },
                "examples": {
                  "CreditNote": {
                    "summary": "",
                    "value": {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "invoiceNumber": "INV00001",
                      "currency": "GBP",
                      "issueDate": "2022-11-05",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "0",
                      "netTotal": "0",
                      "grossTotal": "0",
                      "metadata": [],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/send": {
      "post": {
        "tags": [],
        "summary": "Send multiple credit notes",
        "description": "Updates to SENT status and sends to end-customer",
        "operationId": "postCreditNotesSend",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMultipleCreditNotesEndpointRequestModel",
                "example": {
                  "creditNoteIds": [
                    "307c4d9d-8245-4f45-9c4d-5095ab845457"
                  ]
                }
              },
              "examples": {
                "SendMultipleCreditNotesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteIds": [
                      "307c4d9d-8245-4f45-9c4d-5095ab845457"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/send/{testEmail}": {
      "post": {
        "tags": [],
        "summary": "Send test credit note",
        "description": "Sends test credit note email",
        "operationId": "postCreditNotesByIdSendByTestEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testEmail",
            "in": "path",
            "description": "Test email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote",
                  "example": {
                    "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                    "invoiceNumber": "INV00001",
                    "currency": "GBP",
                    "issueDate": "2022-11-05",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "0",
                    "netTotal": "0",
                    "grossTotal": "0",
                    "metadata": [],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                },
                "examples": {
                  "CreditNote": {
                    "summary": "",
                    "value": {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "invoiceNumber": "INV00001",
                      "currency": "GBP",
                      "issueDate": "2022-11-05",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "0",
                      "netTotal": "0",
                      "grossTotal": "0",
                      "metadata": [],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/{id}/void": {
      "post": {
        "tags": [],
        "summary": "Void a Credit Note",
        "description": "Void a Credit Note",
        "operationId": "postCreditNotesByIdVoid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit Note ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditNoteNumber",
            "in": "query",
            "description": "Credit note number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote",
                  "example": {
                    "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "status": "DRAFT",
                    "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                    "invoiceNumber": "INV00001",
                    "currency": "GBP",
                    "issueDate": "2022-11-05",
                    "billingPeriodStart": "2022-10-01T00:00:00Z",
                    "billingPeriodEnd": "2022-10-30T00:00:00Z",
                    "creditNoteNumber": "CN00001",
                    "purchaseOrderNumber": "PO123",
                    "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                    "customerEmails": [
                      "customer@example.com"
                    ],
                    "customerLegalCompanyName": "Facebook",
                    "customerBillingAddress": {
                      "line1": "Flat 1",
                      "line2": "15 Yemen Road",
                      "town": "Yemen",
                      "state": "CA",
                      "postcode": "YE1 2YE",
                      "country": "YE"
                    },
                    "customerShippingAddress": {
                      "line1": "742 Evergreen Terrace",
                      "line2": "",
                      "town": "Springfield",
                      "state": "CA",
                      "postcode": "12345",
                      "country": "US"
                    },
                    "memo": "Thanks",
                    "totalTax": "0",
                    "netTotal": "0",
                    "grossTotal": "0",
                    "metadata": [],
                    "linkedServices": [
                      {
                        "externalId": "ID",
                        "externalService": "Xero",
                        "syncTime": "2022-06-28T16:47:00Z"
                      }
                    ],
                    "merchantDetails": {
                      "address": {
                        "line1": "Flat 1",
                        "line2": "123 Fake Street",
                        "town": "New York",
                        "state": "NY",
                        "postcode": "AB1 2EF",
                        "country": "US"
                      },
                      "phoneNumber": "0800001066",
                      "email": "donald@example.com",
                      "taxId": "TAX",
                      "iban": "GB33BUKB20201555555555",
                      "ukAccountDetails": {
                        "sortCode": "123456",
                        "accountNumber": "12345678"
                      },
                      "usAchDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789"
                      },
                      "usWireDetails": {
                        "accountNumber": "12345678",
                        "accountName": "John Doe",
                        "bankName": "Chase",
                        "bankRoutingNumber": "123456789",
                        "swiftCode": "CHASUS33",
                        "bankAddress": {
                          "line1": "JP Morgan Chase",
                          "town": "New York City",
                          "state": "NY",
                          "postcode": "10017",
                          "country": "US"
                        }
                      },
                      "legalCompanyName": "The Merchant",
                      "customFields": [],
                      "includeBeneficiaryAddressInPaymentDetails": false
                    }
                  }
                },
                "examples": {
                  "CreditNote": {
                    "summary": "",
                    "value": {
                      "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "status": "DRAFT",
                      "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                      "invoiceNumber": "INV00001",
                      "currency": "GBP",
                      "issueDate": "2022-11-05",
                      "billingPeriodStart": "2022-10-01T00:00:00Z",
                      "billingPeriodEnd": "2022-10-30T00:00:00Z",
                      "creditNoteNumber": "CN00001",
                      "purchaseOrderNumber": "PO123",
                      "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                      "customerEmails": [
                        "customer@example.com"
                      ],
                      "customerLegalCompanyName": "Facebook",
                      "customerBillingAddress": {
                        "line1": "Flat 1",
                        "line2": "15 Yemen Road",
                        "town": "Yemen",
                        "state": "CA",
                        "postcode": "YE1 2YE",
                        "country": "YE"
                      },
                      "customerShippingAddress": {
                        "line1": "742 Evergreen Terrace",
                        "line2": "",
                        "town": "Springfield",
                        "state": "CA",
                        "postcode": "12345",
                        "country": "US"
                      },
                      "memo": "Thanks",
                      "totalTax": "0",
                      "netTotal": "0",
                      "grossTotal": "0",
                      "metadata": [],
                      "linkedServices": [
                        {
                          "externalId": "ID",
                          "externalService": "Xero",
                          "syncTime": "2022-06-28T16:47:00Z"
                        }
                      ],
                      "merchantDetails": {
                        "address": {
                          "line1": "Flat 1",
                          "line2": "123 Fake Street",
                          "town": "New York",
                          "state": "NY",
                          "postcode": "AB1 2EF",
                          "country": "US"
                        },
                        "phoneNumber": "0800001066",
                        "email": "donald@example.com",
                        "taxId": "TAX",
                        "iban": "GB33BUKB20201555555555",
                        "ukAccountDetails": {
                          "sortCode": "123456",
                          "accountNumber": "12345678"
                        },
                        "usAchDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789"
                        },
                        "usWireDetails": {
                          "accountNumber": "12345678",
                          "accountName": "John Doe",
                          "bankName": "Chase",
                          "bankRoutingNumber": "123456789",
                          "swiftCode": "CHASUS33",
                          "bankAddress": {
                            "line1": "JP Morgan Chase",
                            "town": "New York City",
                            "state": "NY",
                            "postcode": "10017",
                            "country": "US"
                          }
                        },
                        "legalCompanyName": "The Merchant",
                        "customFields": [],
                        "includeBeneficiaryAddressInPaymentDetails": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/credit-notes/void": {
      "post": {
        "tags": [],
        "summary": "Void multiple Credit Notes",
        "description": "Void multiple Credit Notes",
        "operationId": "postCreditNotesVoid",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidMultipleCreditNotesEndpointRequestModel",
                "example": {
                  "creditNoteIds": [
                    "eaa8f192-6517-4548-a4e5-50b33858cda6"
                  ]
                }
              },
              "examples": {
                "VoidMultipleCreditNotesEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "creditNoteIds": [
                      "eaa8f192-6517-4548-a4e5-50b33858cda6"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoice-accounting-date-settings": {
      "post": {
        "tags": [],
        "summary": "Create a new Invoice Accounting Date Settings",
        "description": "Create a new Invoice Accounting Date Settings",
        "operationId": "postInvoiceAccountingDateSettings",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceAccountingDateSettingsEndpointCreateInvoiceAccountingDateSettingsRequestModel",
                "example": {
                  "preference": "INVOICE_ISSUE_DATE"
                }
              },
              "examples": {
                "CreateInvoiceAccountingDateSettingsEndpointCreateInvoiceAccountingDateSettingsRequestModel": {
                  "summary": "",
                  "value": {
                    "preference": "INVOICE_ISSUE_DATE"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceAccountingDateSettingsEndpointProductCreateInvoiceAccountingDateSettingsResponseModel",
                  "example": {
                    "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "preference": "INVOICE_ISSUE_DATE"
                  }
                },
                "examples": {
                  "CreateInvoiceAccountingDateSettingsEndpointProductCreateInvoiceAccountingDateSettingsResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "preference": "INVOICE_ISSUE_DATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoice-accounting-date-settings-for-sequence-account": {
      "get": {
        "tags": [],
        "summary": "Get Invoice Accounting Date Settings by Sequence Account ID",
        "description": "Get Invoice Accounting Date Settings by Sequence Account ID",
        "operationId": "getInvoiceAccountingDateSettingsForSequenceAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceAccountingDateSettings",
                  "example": {
                    "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                    "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                    "preference": "INTENDED_INVOICE_CREATION_DATE"
                  }
                },
                "examples": {
                  "InvoiceAccountingDateSettings": {
                    "summary": "",
                    "value": {
                      "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                      "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                      "preference": "INTENDED_INVOICE_CREATION_DATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/invoice-accounting-date-settings/{id}": {
      "get": {
        "tags": [],
        "summary": "Get an Invoice Accounting Date Settings by ID",
        "description": "Get an Invoice Accounting Date Settings by ID",
        "operationId": "getInvoiceAccountingDateSettingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Accounting Date Settings ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceAccountingDateSettingsEndpointProductGetInvoiceAccountingDateSettingsResponseModel",
                  "example": {
                    "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "preference": "INVOICE_ISSUE_DATE"
                  }
                },
                "examples": {
                  "GetInvoiceAccountingDateSettingsEndpointProductGetInvoiceAccountingDateSettingsResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "preference": "INVOICE_ISSUE_DATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update an Invoice Accounting Date Settings",
        "description": "Update an Invoice Accounting Date Settings",
        "operationId": "putInvoiceAccountingDateSettingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice Accounting Date Settings ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceAccountingDateSettingsEndpointUpdateInvoiceAccountingDateSettingsRequestModel",
                "example": {
                  "preference": "INVOICE_ISSUE_DATE"
                }
              },
              "examples": {
                "UpdateInvoiceAccountingDateSettingsEndpointUpdateInvoiceAccountingDateSettingsRequestModel": {
                  "summary": "",
                  "value": {
                    "preference": "INVOICE_ISSUE_DATE"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceAccountingDateSettingsEndpointProductUpdateInvoiceAccountingDateSettingsResponseModel",
                  "example": {
                    "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                    "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                    "preference": "INVOICE_ISSUE_DATE"
                  }
                },
                "examples": {
                  "UpdateInvoiceAccountingDateSettingsEndpointProductUpdateInvoiceAccountingDateSettingsResponseModel": {
                    "summary": "",
                    "value": {
                      "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
                      "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                      "preference": "INVOICE_ISSUE_DATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/insights/outstanding-invoices": {
      "get": {
        "tags": [],
        "summary": "Get Outstanding Invoices",
        "description": "Get Outstanding Invoices insights",
        "operationId": "getInsightsOutstandingInvoices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter by currency",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOutstandingInvoicesResponseModel",
                  "example": {
                    "currency": "GBP",
                    "totalAmount": 4900,
                    "outstandingNow": {
                      "numberOfInvoices": 1,
                      "amount": 1900
                    },
                    "overdueFrom0to30days": {
                      "numberOfInvoices": 1,
                      "amount": 1000
                    },
                    "overdueFrom31to60days": {
                      "numberOfInvoices": 1,
                      "amount": 1000
                    },
                    "overdueFrom61days": {
                      "numberOfInvoices": 1,
                      "amount": 1000
                    }
                  }
                },
                "examples": {
                  "GetOutstandingInvoicesResponseModel": {
                    "summary": "",
                    "value": {
                      "currency": "GBP",
                      "totalAmount": 4900,
                      "outstandingNow": {
                        "numberOfInvoices": 1,
                        "amount": 1900
                      },
                      "overdueFrom0to30days": {
                        "numberOfInvoices": 1,
                        "amount": 1000
                      },
                      "overdueFrom31to60days": {
                        "numberOfInvoices": 1,
                        "amount": 1000
                      },
                      "overdueFrom61days": {
                        "numberOfInvoices": 1,
                        "amount": 1000
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/insights/invoiced-revenue": {
      "get": {
        "tags": [],
        "summary": "Get Invoiced Revenue",
        "description": "Get Invoiced Revenue insights by month",
        "operationId": "getInsightsInvoicedRevenue",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter by currency",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Start date (inclusive) - must be the first day of the given month",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "End date (inclusive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoicedRevenueResponseModel",
                  "example": {
                    "currency": "GBP",
                    "totalAmount": 9400,
                    "invoicedRevenueByMonth": [
                      {
                        "amount": 4900,
                        "periodStart": "2024-01-01"
                      },
                      {
                        "amount": 4500,
                        "periodStart": "2024-02-01"
                      }
                    ]
                  }
                },
                "examples": {
                  "GetInvoicedRevenueResponseModel": {
                    "summary": "",
                    "value": {
                      "currency": "GBP",
                      "totalAmount": 9400,
                      "invoicedRevenueByMonth": [
                        {
                          "amount": 4900,
                          "periodStart": "2024-01-01"
                        },
                        {
                          "amount": 4500,
                          "periodStart": "2024-02-01"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/sequence-accounts/{id}": {
      "get": {
        "tags": [],
        "summary": "Get Account",
        "description": "Retrieve the details of one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getSequenceAccountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceAccount",
                  "example": {
                    "id": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceOrganisationId": "02441bde-24e8-43d5-8e2d-f3e480778885",
                    "companyName": "Acme Inc.",
                    "companyNumber": "GB123987",
                    "country": "GB",
                    "sendCustomerNotifications": true,
                    "alertEmailAddresses": [
                      "alerts@example.com"
                    ]
                  }
                },
                "examples": {
                  "SequenceAccount": {
                    "summary": "",
                    "value": {
                      "id": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceOrganisationId": "02441bde-24e8-43d5-8e2d-f3e480778885",
                      "companyName": "Acme Inc.",
                      "companyNumber": "GB123987",
                      "country": "GB",
                      "sendCustomerNotifications": true,
                      "alertEmailAddresses": [
                        "alerts@example.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update Account",
        "description": "Update Sequence account information",
        "operationId": "putSequenceAccountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence Account ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSequenceAccountProductEndpointUpdateSequenceAccountRequest",
                "example": {
                  "alertEmailAddresses": [
                    "alerts@example.com"
                  ]
                }
              },
              "examples": {
                "UpdateSequenceAccountProductEndpointUpdateSequenceAccountRequest": {
                  "summary": "",
                  "value": {
                    "alertEmailAddresses": [
                      "alerts@example.com"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceAccount",
                  "example": {
                    "id": "b6b0bb79-7b03-4cc0-9c70-2d3aec3aeb17",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "sequenceOrganisationId": "e4f49f12-38cf-4fcf-ad2a-0ae7d83d6be4",
                    "companyName": "Acme Inc.",
                    "companyNumber": "GB123988",
                    "country": "GB",
                    "sendCustomerNotifications": true,
                    "alertEmailAddresses": [
                      "alerts@example.com"
                    ]
                  }
                },
                "examples": {
                  "SequenceAccount": {
                    "summary": "",
                    "value": {
                      "id": "b6b0bb79-7b03-4cc0-9c70-2d3aec3aeb17",
                      "createdAt": "2022-06-28T16:47:00Z",
                      "sequenceOrganisationId": "e4f49f12-38cf-4fcf-ad2a-0ae7d83d6be4",
                      "companyName": "Acme Inc.",
                      "companyNumber": "GB123988",
                      "country": "GB",
                      "sendCustomerNotifications": true,
                      "alertEmailAddresses": [
                        "alerts@example.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/users": {
      "get": {
        "tags": [],
        "summary": "List Users",
        "description": "List all Users within your Sequence Organisation",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSequenceUsersResponse",
                  "example": {
                    "items": [
                      {
                        "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                        "email": "john@example.xyz",
                        "sequenceAccountIds": [
                          "83da2ca4-49c7-4d81-9c9a-ba5be11768b0",
                          "c0901c87-e1a9-48e9-9e2f-9e05c402dcea"
                        ],
                        "state": "active"
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListSequenceUsersResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                          "email": "john@example.xyz",
                          "sequenceAccountIds": [
                            "83da2ca4-49c7-4d81-9c9a-ba5be11768b0",
                            "c0901c87-e1a9-48e9-9e2f-9e05c402dcea"
                          ],
                          "state": "active"
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/users/{id}": {
      "get": {
        "tags": [],
        "summary": "Get User",
        "description": "Retrieve the details of one of your Users.",
        "operationId": "getUsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceUserResponse",
                  "example": {
                    "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                    "email": "person@example.com",
                    "sequenceAccountIds": [
                      "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
                    ],
                    "state": "active"
                  }
                },
                "examples": {
                  "SequenceUserResponse": {
                    "summary": "",
                    "value": {
                      "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                      "email": "person@example.com",
                      "sequenceAccountIds": [
                        "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
                      ],
                      "state": "active"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update User",
        "description": "Update the details of one of your Users.",
        "operationId": "putUsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSequenceUserRequest",
                "example": {
                  "sequenceAccountIds": [
                    "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
                  ]
                }
              },
              "examples": {
                "UpdateSequenceUserRequest": {
                  "summary": "",
                  "value": {
                    "sequenceAccountIds": [
                      "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSequenceUserResponse",
                  "example": {
                    "id": "ca88f667-a17a-4c84-a8ee-8a4293834ff4",
                    "sequenceAccountIds": [
                      "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
                    ]
                  }
                },
                "examples": {
                  "UpdateSequenceUserResponse": {
                    "summary": "",
                    "value": {
                      "id": "ca88f667-a17a-4c84-a8ee-8a4293834ff4",
                      "sequenceAccountIds": [
                        "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [],
        "summary": "Delete User",
        "description": "Delete one of your Users.",
        "operationId": "deleteUsersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sequence User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceUserResponse",
                  "example": {
                    "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                    "email": "person@example.com",
                    "sequenceAccountIds": [
                      "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
                    ],
                    "state": "active"
                  }
                },
                "examples": {
                  "SequenceUserResponse": {
                    "summary": "",
                    "value": {
                      "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                      "email": "person@example.com",
                      "sequenceAccountIds": [
                        "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
                      ],
                      "state": "active"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/self": {
      "get": {
        "tags": [],
        "summary": "Get Self",
        "description": "Retrieve the details of yourself.",
        "operationId": "getSelf",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Self",
                  "example": {
                    "sequenceUser": {
                      "id": "918af48c-9f22-4bed-8462-7df0a9772d44",
                      "email": "xyz@example.com",
                      "createdAt": "2022-06-28T16:47:00Z"
                    },
                    "sequenceAccounts": [
                      "7c8a5a33-4bba-4149-acf0-28877f18117e"
                    ],
                    "launchDarklyHash": "96053e2731801c3aa3c44c550b72af55c75ef0c17cbb1ae51c038368fd8ce7e6"
                  }
                },
                "examples": {
                  "Self": {
                    "summary": "",
                    "value": {
                      "sequenceUser": {
                        "id": "918af48c-9f22-4bed-8462-7df0a9772d44",
                        "email": "xyz@example.com",
                        "createdAt": "2022-06-28T16:47:00Z"
                      },
                      "sequenceAccounts": [
                        "7c8a5a33-4bba-4149-acf0-28877f18117e"
                      ],
                      "launchDarklyHash": "96053e2731801c3aa3c44c550b72af55c75ef0c17cbb1ae51c038368fd8ce7e6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/analytics-dashboard-link": {
      "get": {
        "tags": [],
        "summary": "Get Metabase dashboard link",
        "description": "Retrieve the Metabase link for the analytics dashboard of one of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getAnalyticsDashboardLink",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetabaseDashboardLinkResponse",
                  "example": {
                    "metabaseDashboardLink": "https://sandbox.sequencehq.com/analytics/dashboard1"
                  }
                },
                "examples": {
                  "MetabaseDashboardLinkResponse": {
                    "summary": "",
                    "value": {
                      "metabaseDashboardLink": "https://sandbox.sequencehq.com/analytics/dashboard1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/oauth-clients": {
      "get": {
        "tags": [],
        "summary": "List OAuth Clients",
        "description": "List all OAuth clients for Sequence account",
        "operationId": "getOauthClients",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOAuthClientsEndpointResponseModel",
                  "example": {
                    "items": [
                      {
                        "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                        "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
                        "name": "Client",
                        "scopes": [
                          "product"
                        ],
                        "pinnedApiVersion": "2024-01-01"
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListOAuthClientsEndpointResponseModel": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                          "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
                          "name": "Client",
                          "scopes": [
                            "product"
                          ],
                          "pinnedApiVersion": "2024-01-01"
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Create OAuth Client",
        "description": "Create an OAuth client for the SHQ Account",
        "operationId": "postOauthClients",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOAuthClientRequest",
                "example": {
                  "scopes": [
                    "product"
                  ],
                  "accountId": "7e330949-a175-496a-a060-27821656ce34",
                  "clientName": "seqhq-7e330949-a175-496a-a060-27821656ce34",
                  "pinApiVersion": false
                }
              },
              "examples": {
                "CreateOAuthClientRequest": {
                  "summary": "",
                  "value": {
                    "scopes": [
                      "product"
                    ],
                    "accountId": "7e330949-a175-496a-a060-27821656ce34",
                    "clientName": "seqhq-7e330949-a175-496a-a060-27821656ce34",
                    "pinApiVersion": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOAuthClientResponse",
                  "example": {
                    "id": "6267e4e5-688e-4eda-92d1-45a4031fe5b2",
                    "name": "seqhq-7e330949-a175-496a-a060-27821656ce34",
                    "secret": "somerandomsecret"
                  }
                },
                "examples": {
                  "CreateOAuthClientResponse": {
                    "summary": "",
                    "value": {
                      "id": "6267e4e5-688e-4eda-92d1-45a4031fe5b2",
                      "name": "seqhq-7e330949-a175-496a-a060-27821656ce34",
                      "secret": "somerandomsecret"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError",
                  "example": {
                    "error": {
                      "type": "validationError",
                      "message": "Request data validation failed",
                      "errors": [
                        {
                          "code": "validationError",
                          "message": "field_a should not be blank",
                          "key": "field_a",
                          "errors": []
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "ApiError": {
                    "summary": "",
                    "value": {
                      "error": {
                        "type": "validationError",
                        "message": "Request data validation failed",
                        "errors": [
                          {
                            "code": "validationError",
                            "message": "field_a should not be blank",
                            "key": "field_a",
                            "errors": []
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/sequence-accounts": {
      "get": {
        "tags": [],
        "summary": "List Accounts",
        "description": "List all of your [Sequence Accounts](/docs/organisations-and-accounts).",
        "operationId": "getSequenceAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of objects to return per-page.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.after` or `pagination.before` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Pagination offset. To page through items, omit this parameter to retrieve the first page, and then successively use the value you get from `pagination.next` or `pagination.previous` to retrieve each page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSequenceAccountsResponse",
                  "example": {
                    "items": [
                      {
                        "id": "7e330949-a175-496a-a060-27821656ce34",
                        "createdAt": "2022-06-28T16:47:00Z",
                        "sequenceOrganisationId": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
                        "companyName": "Acme Inc.",
                        "companyNumber": "GB123987",
                        "country": "GB",
                        "sendCustomerNotifications": true,
                        "alertEmailAddresses": [
                          "alerts@example.com"
                        ]
                      }
                    ],
                    "pagination": {
                      "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                      "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                      "totalResultSize": 100
                    }
                  }
                },
                "examples": {
                  "ListSequenceAccountsResponse": {
                    "summary": "",
                    "value": {
                      "items": [
                        {
                          "id": "7e330949-a175-496a-a060-27821656ce34",
                          "createdAt": "2022-06-28T16:47:00Z",
                          "sequenceOrganisationId": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
                          "companyName": "Acme Inc.",
                          "companyNumber": "GB123987",
                          "country": "GB",
                          "sendCustomerNotifications": true,
                          "alertEmailAddresses": [
                            "alerts@example.com"
                          ]
                        }
                      ],
                      "pagination": {
                        "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
                        "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
                        "totalResultSize": 100
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/oauth-clients/{id}": {
      "delete": {
        "tags": [],
        "summary": "Delete OAuth client from SHQ Organisation and SHQ Account",
        "operationId": "deleteOauthClientsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClient",
                  "example": {
                    "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                    "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
                    "name": "Client",
                    "scopes": [
                      "product"
                    ],
                    "pinnedApiVersion": "2024-01-01"
                  }
                },
                "examples": {
                  "OAuthClient": {
                    "summary": "",
                    "value": {
                      "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                      "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
                      "name": "Client",
                      "scopes": [
                        "product"
                      ],
                      "pinnedApiVersion": "2024-01-01"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/sequence-account-id": {
      "get": {
        "tags": [],
        "summary": "Get Account ID",
        "description": "Retrieve the ID of your [Sequence Account](/docs/organisations-and-accounts).",
        "operationId": "getSequenceAccountId",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSequenceAccountIdEndpointGetSequenceAccountIdResponse",
                  "example": {
                    "id": "13448448-ce43-4874-8acf-8ff2a8ca24c1"
                  }
                },
                "examples": {
                  "GetSequenceAccountIdEndpointGetSequenceAccountIdResponse": {
                    "summary": "",
                    "value": {
                      "id": "13448448-ce43-4874-8acf-8ff2a8ca24c1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    },
    "/sequence-account-settings": {
      "get": {
        "tags": [],
        "summary": "Get Sequence Account Settings",
        "description": "Get Sequence Account Settings",
        "operationId": "getSequenceAccountSettings",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceAccountSettings",
                  "example": {
                    "id": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6",
                    "sequenceAccountId": "5eb477d7-f421-4d30-b99c-757c81021b92",
                    "enabledCurrencies": [
                      "USD",
                      "GBP",
                      "EUR"
                    ]
                  }
                },
                "examples": {
                  "SequenceAccountSettings": {
                    "summary": "",
                    "value": {
                      "id": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6",
                      "sequenceAccountId": "5eb477d7-f421-4d30-b99c-757c81021b92",
                      "enabledCurrencies": [
                        "USD",
                        "GBP",
                        "EUR"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [],
        "summary": "Update Sequence Account Settings",
        "description": "Update Sequence Account Settings",
        "operationId": "putSequenceAccountSettings",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your [API credentials](/docs/authentication). Eg. `Basic {credentials}`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSequenceAccountSettingsEndpointRequestModel",
                "example": {
                  "enabledCurrencies": [
                    "USD",
                    "GBP",
                    "EUR"
                  ]
                }
              },
              "examples": {
                "UpdateSequenceAccountSettingsEndpointRequestModel": {
                  "summary": "",
                  "value": {
                    "enabledCurrencies": [
                      "USD",
                      "GBP",
                      "EUR"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceAccountSettings",
                  "example": {
                    "id": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6",
                    "sequenceAccountId": "5eb477d7-f421-4d30-b99c-757c81021b92",
                    "enabledCurrencies": [
                      "USD",
                      "GBP",
                      "EUR"
                    ]
                  }
                },
                "examples": {
                  "SequenceAccountSettings": {
                    "summary": "",
                    "value": {
                      "id": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6",
                      "sequenceAccountId": "5eb477d7-f421-4d30-b99c-757c81021b92",
                      "enabledCurrencies": [
                        "USD",
                        "GBP",
                        "EUR"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "servers": [],
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "CreateTaxRateEndpointCreateTaxRateRequestModel": {
        "required": [
          "amount",
          "country",
          "invoiceName",
          "invoiceShortName",
          "isPublished",
          "name"
        ],
        "type": "object",
        "example": {
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": []
        },
        "properties": {
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          }
        }
      },
      "CountryCode": {
        "type": "string",
        "example": "GB",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "CreateTaxRateEndpointProductCreateTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "CreateTaxRateVersionEndpointCreateTaxRateVersionRequestModel": {
        "required": [
          "amount",
          "country",
          "invoiceName",
          "invoiceShortName",
          "isPublished",
          "name"
        ],
        "type": "object",
        "example": {
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": []
        },
        "properties": {
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          }
        }
      },
      "CreateTaxRateVersionEndpointProductCreateTaxRateVersionResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "GetTaxRateEndpointProductGetTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "GetTaxRateVersionEndpointProductGetTaxRateVersionResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "UpdateTaxRateEndpointUpdateTaxRateRequestModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isPublished",
          "name"
        ],
        "type": "object",
        "example": {
          "id": "0373904e-0f24-4c19-bb0d-9b855f1ec3ca",
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": []
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "0373904e-0f24-4c19-bb0d-9b855f1ec3ca"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          }
        }
      },
      "UpdateTaxRateEndpointProductUpdateTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "UpdateTaxRateVersionEndpointUpdateTaxRateVersionRequestModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isPublished",
          "name",
          "subRates"
        ],
        "type": "object",
        "example": {
          "id": "d2aea732-19f5-4832-848d-f11b796e963e",
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": []
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d2aea732-19f5-4832-848d-f11b796e963e"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          }
        }
      },
      "UpdateTaxRateVersionEndpointProductUpdateTaxRateVersionResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "ListTaxRateEndpointProductListTaxRatePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
              "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
              "name": "UK Sales Tax",
              "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
              "version": 0,
              "isPublished": false,
              "invoiceName": "Value Added Tax",
              "invoiceShortName": "VAT",
              "description": "Value Added Tax applied to sales in the UK",
              "amount": "0.2",
              "country": "GB",
              "region": "London",
              "subRates": [],
              "isArchived": false
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TaxRates",
            "example": [
              {
                "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                "name": "UK Sales Tax",
                "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                "version": 0,
                "isPublished": false,
                "invoiceName": "Value Added Tax",
                "invoiceShortName": "VAT",
                "description": "Value Added Tax applied to sales in the UK",
                "amount": "0.2",
                "country": "GB",
                "region": "London",
                "subRates": [],
                "isArchived": false
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTaxRateEndpointProductListTaxRateResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListTaxRateEndpointProductListTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "example": {
          "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
          "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
          "totalResultSize": 10
        },
        "properties": {
          "after": {
            "type": "string",
            "description": "Cursor for the page after this (if it exists)",
            "example": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3"
          },
          "before": {
            "type": "string",
            "description": "Cursor for the page before this (if it exists)",
            "example": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz"
          },
          "totalResultSize": {
            "type": "integer",
            "description": "Total number of entries across all pages",
            "format": "int64",
            "example": 10
          }
        }
      },
      "ListTaxRateVersionsEndpointProductList_versionsTaxRatePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
              "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
              "name": "UK Sales Tax",
              "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
              "version": 0,
              "isPublished": false,
              "invoiceName": "Value Added Tax",
              "invoiceShortName": "VAT",
              "description": "Value Added Tax applied to sales in the UK",
              "amount": "0.2",
              "country": "GB",
              "region": "London",
              "subRates": [],
              "isArchived": false
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TaxRates",
            "example": [
              {
                "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                "name": "UK Sales Tax",
                "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                "version": 0,
                "isPublished": false,
                "invoiceName": "Value Added Tax",
                "invoiceShortName": "VAT",
                "description": "Value Added Tax applied to sales in the UK",
                "amount": "0.2",
                "country": "GB",
                "region": "London",
                "subRates": [],
                "isArchived": false
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTaxRateVersionsEndpointProductListversionsTaxRateVersionResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "ListTaxRateVersionsEndpointProductListversionsTaxRateVersionResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "PaginationResponse": {
        "type": "object",
        "example": {
          "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
          "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
          "totalResultSize": 100
        },
        "properties": {
          "after": {
            "type": "string",
            "description": "Copy this value to the `after` parameter of your next request to retrieve the next page of results",
            "example": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw=="
          },
          "before": {
            "type": "string",
            "description": "Copy this value to the `before` parameter of your next request to retrieve the next page of results",
            "example": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND"
          },
          "totalResultSize": {
            "type": "integer",
            "description": "Total number of entries across all pages",
            "format": "int64",
            "example": 100
          }
        }
      },
      "DeleteTaxRateEndpointProductDeleteTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "DeleteTaxRateVersionEndpointProductDeleteTaxRateVersionResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "subRates",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "name": "UK Sales Tax",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "subRates": [],
          "isArchived": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be a decimal between 0 and 1. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": false
          }
        }
      },
      "ArchiveTaxRateEndpointProductArchiveTaxRateResponseModel": {
        "required": [
          "amount",
          "country",
          "id",
          "invoiceName",
          "invoiceShortName",
          "isArchived",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "version": 0,
          "isPublished": false,
          "name": "UK Sales Tax",
          "invoiceName": "Value Added Tax",
          "invoiceShortName": "VAT",
          "description": "Value Added Tax applied to sales in the UK",
          "amount": "0.2",
          "country": "GB",
          "region": "London",
          "taxCategoryId": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6",
          "subRates": [],
          "isArchived": true
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Rate ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Rate Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "version": {
            "type": "integer",
            "description": "Tax Rate version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Rate status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The full name of the tax rate, e.g. \"Sales tax\"",
            "example": "UK Sales Tax"
          },
          "invoiceName": {
            "type": "string",
            "description": "The long name used on the invoice, e.g. \"Value Added Tax\"",
            "example": "Value Added Tax"
          },
          "invoiceShortName": {
            "type": "string",
            "description": "The short name used on the invoice, e.g. \"VAT\"",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "The description of the tax rate",
            "example": "Value Added Tax applied to sales in the UK"
          },
          "amount": {
            "type": "string",
            "description": "The tax rate. Must be between 0 and 100. If this tax rate has any sub-rates, then all sub-rates must add up to this amount.",
            "example": "0.2"
          },
          "country": {
            "description": "The country that this tax rate applies to",
            "$ref": "#/components/schemas/CountryCode"
          },
          "region": {
            "type": "string",
            "description": "The region that this tax rate applies to",
            "example": "London"
          },
          "taxCategoryId": {
            "type": "string",
            "description": "The Tax Category Version ID that this Tax Rate is part of",
            "example": "ce109c64-dcc0-487a-ac8c-e3237c60cdb6"
          },
          "subRates": {
            "type": "array",
            "description": "The sub rates of this tax rate",
            "example": [],
            "items": {}
          },
          "isArchived": {
            "type": "boolean",
            "description": "Archived",
            "example": true
          }
        }
      },
      "CreateTaxRegistrationEndpointCreateTaxRegistrationRequestModel": {
        "required": [
          "country",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "State": {
        "type": "string",
        "example": "CA",
        "enum": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "CA",
          "CO",
          "CT",
          "DC",
          "DE",
          "FL",
          "GA",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "AB",
          "BC",
          "MB",
          "NB",
          "NL",
          "NS",
          "ON",
          "PE",
          "QC",
          "SK"
        ]
      },
      "CreateTaxRegistrationEndpointProductCreateTaxRegistrationResponseModel": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "GetTaxRegistrationForCustomerProductResponse": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "3271ca41-d538-404f-a15f-25856a37fb88",
              "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
              "taxIdentifier": "CA123456789",
              "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
              "country": "GB",
              "state": "CA"
            }
          ],
          "pagination": {
            "after": "nextOffset",
            "before": "previousOffset",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "List of tax registrations for customer",
            "example": [
              {
                "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
                "taxIdentifier": "CA123456789",
                "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                "country": "GB",
                "state": "CA"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/TaxRegistration"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "TaxRegistration": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "42020696-da25-44d0-ab79-9ecbf8fc5307",
          "taxIdentifier": "CA123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "42020696-da25-44d0-ab79-9ecbf8fc5307"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "CA123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "GetTaxRegistrationEndpointProductGetTaxRegistrationResponseModel": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "UpdateTaxRegistrationEndpointUpdateTaxRegistrationRequestModel": {
        "required": [
          "country",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "UpdateTaxRegistrationEndpointProductUpdateTaxRegistrationResponseModel": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "ListTaxRegistrationEndpointProductListTaxRegistrationPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "3271ca41-d538-404f-a15f-25856a37fb88",
              "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
              "taxIdentifier": "GB123456789",
              "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
              "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
              "country": "GB",
              "state": "CA"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TaxRegistrations",
            "example": [
              {
                "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
                "taxIdentifier": "GB123456789",
                "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
                "country": "GB",
                "state": "CA"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTaxRegistrationEndpointProductListTaxRegistrationResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListTaxRegistrationEndpointProductListTaxRegistrationResponseModel": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "DeleteTaxRegistrationEndpointProductDeleteTaxRegistrationResponseModel": {
        "required": [
          "country",
          "id",
          "sequenceAccountId",
          "taxIdentifier"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "sequenceAccountId": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1",
          "taxIdentifier": "GB123456789",
          "customerId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "merchantId": "06457f78-85cd-4140-9972-67c6cd8f6071",
          "country": "GB",
          "state": "CA"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax registration ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a2e7ec72-e3b1-4349-8d8b-c1ad3cea03a1"
          },
          "taxIdentifier": {
            "type": "string",
            "description": "The unique identifier for this tax registration",
            "example": "GB123456789"
          },
          "customerId": {
            "type": "string",
            "description": "The customer that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "merchantId": {
            "type": "string",
            "description": "The merchant that this tax registration belongs to",
            "example": "06457f78-85cd-4140-9972-67c6cd8f6071"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The registration state",
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "CreateTaxCategoryEndpointCreateTaxCategoryRequestModel": {
        "required": [
          "description",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "CreateTaxCategoryEndpointProductCreateTaxCategoryResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "CreateTaxCategoryVersionEndpointCreateTaxCategoryVersionRequestModel": {
        "required": [
          "description",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "CreateTaxCategoryVersionEndpointProductCreateTaxCategoryVersionResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "GetTaxCategoryEndpointProductGetTaxCategoryResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "GetTaxCategoryVersionEndpointProductGetTaxCategoryVersionResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "ListTaxCategoryVersionsEndpointProductList_versionsTaxCategoryPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "3271ca41-d538-404f-a15f-25856a37fb88",
              "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
              "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
              "version": 0,
              "isPublished": false,
              "name": "EU Sales Taxes",
              "description": "All sales taxes required for the EU"
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TaxCategorys",
            "example": [
              {
                "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                "version": 0,
                "isPublished": false,
                "name": "EU Sales Taxes",
                "description": "All sales taxes required for the EU"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTaxCategoryVersionsEndpointProductListversionsTaxCategoryVersionResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "ListTaxCategoryVersionsEndpointProductListversionsTaxCategoryVersionResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "UpdateTaxCategoryEndpointUpdateTaxCategoryRequestModel": {
        "required": [
          "description",
          "isPublished",
          "name"
        ],
        "type": "object",
        "example": {
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "UpdateTaxCategoryEndpointProductUpdateTaxCategoryResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "UpdateTaxCategoryVersionEndpointUpdateTaxCategoryVersionRequestModel": {
        "required": [
          "description",
          "isPublished",
          "name"
        ],
        "type": "object",
        "example": {
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "UpdateTaxCategoryVersionEndpointProductUpdateTaxCategoryVersionResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "DeleteTaxCategoryEndpointProductDeleteTaxCategoryResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "DeleteTaxCategoryVersionEndpointProductDeleteTaxCategoryVersionResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "ListTaxCategoryEndpointProductListTaxCategoryPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "3271ca41-d538-404f-a15f-25856a37fb88",
              "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
              "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
              "version": 0,
              "isPublished": false,
              "name": "EU Sales Taxes",
              "description": "All sales taxes required for the EU"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TaxCategorys",
            "example": [
              {
                "id": "3271ca41-d538-404f-a15f-25856a37fb88",
                "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
                "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
                "version": 0,
                "isPublished": false,
                "name": "EU Sales Taxes",
                "description": "All sales taxes required for the EU"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTaxCategoryEndpointProductListTaxCategoryResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListTaxCategoryEndpointProductListTaxCategoryResponseModel": {
        "required": [
          "description",
          "id",
          "isPublished",
          "name",
          "sequenceAccountId",
          "version",
          "versionId"
        ],
        "type": "object",
        "example": {
          "id": "3271ca41-d538-404f-a15f-25856a37fb88",
          "versionId": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f",
          "sequenceAccountId": "8f614d9e-f19d-4337-a479-2653ded9624a",
          "version": 0,
          "isPublished": false,
          "name": "EU Sales Taxes",
          "description": "All sales taxes required for the EU"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Tax Category ID",
            "example": "3271ca41-d538-404f-a15f-25856a37fb88"
          },
          "versionId": {
            "type": "string",
            "description": "Tax Category Version ID",
            "example": "82ef6f1a-afc2-4a8d-b868-6d9c72bf395f"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "8f614d9e-f19d-4337-a479-2653ded9624a"
          },
          "version": {
            "type": "integer",
            "description": "Tax Category version",
            "format": "int64",
            "example": 0
          },
          "isPublished": {
            "type": "boolean",
            "description": "Tax Category status",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Tax Category name",
            "example": "EU Sales Taxes"
          },
          "description": {
            "type": "string",
            "description": "Tax Category description",
            "example": "All sales taxes required for the EU"
          }
        }
      },
      "GetUsageDataForUsageMetricEndpointRequestModel": {
        "required": [
          "customerAliases",
          "customerId",
          "eventType",
          "priceId",
          "usageEnd",
          "usageStart"
        ],
        "type": "object",
        "example": {
          "usageStart": "2023-02-01",
          "usageEnd": "2023-04-30",
          "eventType": "event",
          "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
          "customerAliases": [
            "alias"
          ],
          "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
        },
        "properties": {
          "usageStart": {
            "type": "string",
            "description": "Usage start",
            "format": "date",
            "example": "2023-02-01"
          },
          "usageEnd": {
            "type": "string",
            "description": "Usage end",
            "format": "date",
            "example": "2023-04-30"
          },
          "eventType": {
            "type": "string",
            "example": "event"
          },
          "priceId": {
            "type": "string",
            "example": "030a64dd-1d89-46a3-8043-580befdb011d"
          },
          "customerAliases": {
            "type": "array",
            "example": [
              "alias"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerId": {
            "type": "string",
            "example": "cf747d34-9497-42a8-8b28-d65523fbbadf"
          }
        }
      },
      "OptionalUsageDataResponse": {
        "type": "object",
        "example": {
          "data": {
            "usageStart": "2024-01-01",
            "usageEnd": "2024-01-03",
            "metricName": "API Calls",
            "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
            "total": "35",
            "usageData": [
              {
                "periodStart": "2024-01-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2024-01-02",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2024-01-03",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ]
          }
        },
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UsageDataResponse"
          }
        }
      },
      "UsageDataResponse": {
        "required": [
          "metricId",
          "metricName",
          "total",
          "usageData",
          "usageEnd",
          "usageStart"
        ],
        "type": "object",
        "example": {
          "usageStart": "2024-01-01",
          "usageEnd": "2024-01-03",
          "metricName": "API Calls",
          "metricId": "030a64dd-1d89-46a3-8043-580befdb011d",
          "total": "35",
          "usageData": [
            {
              "periodStart": "2024-01-01",
              "amount": "10",
              "cumulativeAmount": "10"
            },
            {
              "periodStart": "2024-01-02",
              "amount": "15",
              "cumulativeAmount": "25"
            },
            {
              "periodStart": "2024-01-03",
              "amount": "10",
              "cumulativeAmount": "35"
            }
          ]
        },
        "properties": {
          "usageStart": {
            "type": "string",
            "description": "Usage start",
            "format": "date",
            "example": "2024-01-01"
          },
          "usageEnd": {
            "type": "string",
            "description": "Usage end",
            "format": "date",
            "example": "2024-01-03"
          },
          "metricName": {
            "type": "string",
            "description": "Metric name",
            "example": "API Calls"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID",
            "example": "030a64dd-1d89-46a3-8043-580befdb011d"
          },
          "total": {
            "type": "string",
            "description": "Total for provided usage periods",
            "example": "35"
          },
          "usageData": {
            "type": "array",
            "description": "Usage data",
            "example": [
              {
                "periodStart": "2024-01-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2024-01-02",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2024-01-03",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageData"
            }
          }
        }
      },
      "UsageData": {
        "required": [
          "amount",
          "cumulativeAmount",
          "periodStart"
        ],
        "type": "object",
        "example": {
          "periodStart": "2024-01-01",
          "amount": "10",
          "cumulativeAmount": "10"
        },
        "properties": {
          "periodStart": {
            "type": "string",
            "description": "Usage period start",
            "format": "date",
            "example": "2024-01-01"
          },
          "amount": {
            "type": "string",
            "description": "Usage amount",
            "example": "10"
          },
          "cumulativeAmount": {
            "type": "string",
            "description": "Cumulative usage amount (summing all previous data points)",
            "example": "10"
          }
        }
      },
      "CreateUsageMetricEndpointCreateUsageMetricRequestModel": {
        "required": [
          "aggregationType",
          "eventType",
          "metricType",
          "name"
        ],
        "type": "object",
        "example": {
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ]
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MetricType": {
        "type": "string",
        "example": "GROUPED",
        "enum": [
          "SIMPLE",
          "GROUPED"
        ]
      },
      "AggregationType": {
        "type": "string",
        "example": "SUM",
        "enum": [
          "COUNT",
          "UNIQUE",
          "SUM",
          "CUSTOM"
        ]
      },
      "CreateUsageMetricEndpointProductCreateUsageMetricResponseModel": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "metricType",
          "name",
          "parameters",
          "propertyFilters",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ],
          "parameters": [
            {
              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "name": "myParam",
              "type": "INTEGER",
              "description": "My parameter",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "name": "myParam",
                "type": "INTEGER",
                "description": "My parameter",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomMetricParameter"
            }
          }
        }
      },
      "CustomMetricParameter": {
        "required": [
          "defaultValue",
          "description",
          "id",
          "name",
          "type",
          "usageMetricId"
        ],
        "type": "object",
        "example": {
          "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
          "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "name": "myParam",
          "type": "INTEGER",
          "description": "My parameter",
          "defaultValue": "10"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "2963e49a-c8e0-4673-89f5-7a805c0faf14"
          },
          "usageMetricId": {
            "type": "string",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "name": {
            "type": "string",
            "example": "myParam"
          },
          "type": {
            "$ref": "#/components/schemas/CustomParameterType"
          },
          "description": {
            "type": "string",
            "example": "My parameter"
          },
          "defaultValue": {
            "type": "string",
            "example": "10"
          }
        }
      },
      "CustomParameterType": {
        "type": "string",
        "example": "INTEGER",
        "enum": [
          "INTEGER",
          "POSITIVE_INTEGER"
        ]
      },
      "CreateCustomUsageMetricRequest": {
        "required": [
          "description",
          "expression",
          "name",
          "parameters",
          "unit"
        ],
        "type": "object",
        "example": {
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "expression": "MAX(0, 1)",
          "unit": "bytes",
          "parameters": [
            {
              "name": "ratio",
              "type": "POSITIVE_INTEGER",
              "description": "Ratio of A to B",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "expression": {
            "type": "string",
            "description": "Expression to use for calculation",
            "example": "MAX(0, 1)"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "name": "ratio",
                "type": "POSITIVE_INTEGER",
                "description": "Ratio of A to B",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreateCustomMetricParameterRequest"
            }
          }
        }
      },
      "CreateCustomMetricParameterRequest": {
        "required": [
          "defaultValue",
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "example": {
          "name": "ratio",
          "type": "POSITIVE_INTEGER",
          "description": "Ratio of A to B",
          "defaultValue": "10"
        },
        "properties": {
          "name": {
            "type": "string",
            "example": "ratio"
          },
          "type": {
            "$ref": "#/components/schemas/CustomParameterType"
          },
          "description": {
            "type": "string",
            "example": "Ratio of A to B"
          },
          "defaultValue": {
            "type": "string",
            "example": "10"
          }
        }
      },
      "UsageMetric": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "metricType",
          "name",
          "parameters",
          "propertyFilters",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ],
          "parameters": [
            {
              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "name": "myParam",
              "type": "INTEGER",
              "description": "My parameter",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "additionalProperties": {}
          },
          "caseSensitive": {
            "type": "boolean",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "name": "myParam",
                "type": "INTEGER",
                "description": "My parameter",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomMetricParameter"
            }
          }
        }
      },
      "UpdateCustomUsageMetricRequest": {
        "required": [
          "description",
          "expression",
          "name",
          "parameters",
          "unit"
        ],
        "type": "object",
        "example": {
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "expression": "MAX(0, 1)",
          "unit": "bytes",
          "parameters": [
            {
              "id": "f8bff40b-02be-43a6-b483-38b54f664116",
              "name": "ratio",
              "type": "POSITIVE_INTEGER",
              "description": "Ratio of A to B",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "expression": {
            "type": "string",
            "description": "Expression to use for calculation",
            "example": "MAX(0, 1)"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "f8bff40b-02be-43a6-b483-38b54f664116",
                "name": "ratio",
                "type": "POSITIVE_INTEGER",
                "description": "Ratio of A to B",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UpdateCustomMetricParameterRequest"
            }
          }
        }
      },
      "UpdateCustomMetricParameterRequest": {
        "required": [
          "defaultValue",
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "example": {
          "id": "f8bff40b-02be-43a6-b483-38b54f664116",
          "name": "ratio",
          "type": "POSITIVE_INTEGER",
          "description": "Ratio of A to B",
          "defaultValue": "10"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "f8bff40b-02be-43a6-b483-38b54f664116"
          },
          "name": {
            "type": "string",
            "example": "ratio"
          },
          "type": {
            "$ref": "#/components/schemas/CustomParameterType"
          },
          "description": {
            "type": "string",
            "example": "Ratio of A to B"
          },
          "defaultValue": {
            "type": "string",
            "example": "10"
          }
        }
      },
      "GetUsageMetricEndpointProductGetUsageMetricResponseModel": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "metricType",
          "name",
          "parameters",
          "propertyFilters",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ],
          "parameters": [
            {
              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "name": "myParam",
              "type": "INTEGER",
              "description": "My parameter",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "name": "myParam",
                "type": "INTEGER",
                "description": "My parameter",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomMetricParameter"
            }
          }
        }
      },
      "UpdateUsageMetricEndpointUpdateUsageMetricRequestModel": {
        "required": [
          "aggregationType",
          "eventType",
          "metricType",
          "name"
        ],
        "type": "object",
        "example": {
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ]
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateUsageMetricEndpointProductUpdateUsageMetricResponseModel": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "metricType",
          "name",
          "parameters",
          "propertyFilters",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ],
          "parameters": [
            {
              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "name": "myParam",
              "type": "INTEGER",
              "description": "My parameter",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "name": "myParam",
                "type": "INTEGER",
                "description": "My parameter",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomMetricParameter"
            }
          }
        }
      },
      "DeleteUsageMetricEndpointProductDeleteUsageMetricResponseModel": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "metricType",
          "name",
          "parameters",
          "propertyFilters",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "name": "Total length of sent messages.",
          "description": "Total length of sent messages.",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "COUNT",
          "aggregationProperty": "message_length",
          "groupingProperty": "channel",
          "unit": "bytes",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "propertyFilters": {
            "channels": [
              "text",
              "email"
            ]
          },
          "caseSensitive": true,
          "propertiesToNegate": [
            "channels"
          ],
          "parameters": [
            {
              "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
              "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "name": "myParam",
              "type": "INTEGER",
              "description": "My parameter",
              "defaultValue": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this metric, which should be unique",
            "example": "Total length of sent messages."
          },
          "description": {
            "type": "string",
            "description": "Description for this metric",
            "example": "Total length of sent messages."
          },
          "metricType": {
            "description": "Type of metric (simple or grouped)",
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "description": "The `eventType` of the Usage Event to be aggregated",
            "example": "message_sent"
          },
          "aggregationType": {
            "description": "Type of aggregation to perform",
            "$ref": "#/components/schemas/AggregationType"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Property within the event to aggregate",
            "example": "message_length"
          },
          "groupingProperty": {
            "type": "string",
            "description": "Property within the event to group results by",
            "example": "channel"
          },
          "unit": {
            "type": "string",
            "description": "Human-readable unit of the aggregated metric, eg. API calls)",
            "example": "bytes"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "propertyFilters": {
            "type": "object",
            "description": "propertyFilters",
            "additionalProperties": {
              "type": "object"
            }
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "caseSensitive",
            "example": true
          },
          "propertiesToNegate": {
            "type": "array",
            "description": "propertiesToNegate",
            "example": [
              "channels"
            ],
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Required parameters",
            "example": [
              {
                "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "name": "myParam",
                "type": "INTEGER",
                "description": "My parameter",
                "defaultValue": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomMetricParameter"
            }
          }
        }
      },
      "CreateUsageEventEndpointCreateUsageEventRequestModel": {
        "required": [
          "customerAlias",
          "eventType"
        ],
        "type": "object",
        "example": {
          "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "eventType": "message-sent",
          "eventTimestamp": "2022-10-01T00:00:00Z",
          "eventProperties": {
            "length": 500,
            "type": "text_message"
          }
        },
        "properties": {
          "customerEventId": {
            "type": "string",
            "description": "customerEventId",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "customerAlias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "eventType": {
            "type": "string",
            "description": "eventType",
            "example": "message-sent"
          },
          "eventTimestamp": {
            "type": "string",
            "description": "eventTimestamp",
            "example": "2022-10-01T00:00:00Z"
          },
          "eventProperties": {
            "type": "object",
            "description": "eventProperties",
            "additionalProperties": {}
          }
        }
      },
      "CreateUsageEventEndpointProductCreateUsageEventResponseModel": {
        "required": [
          "customerAlias",
          "customerEventId",
          "eventProperties",
          "eventTimestamp",
          "eventType",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "eventType": "message-sent",
          "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
          "eventTimestamp": "2022-10-01T00:00:00Z",
          "eventProperties": {
            "length": 500,
            "type": "text_message"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerEventId": {
            "type": "string",
            "description": "customerEventId",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "customerAlias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "eventType": {
            "type": "string",
            "description": "eventType",
            "example": "message-sent"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "0184421e-a9cc-711b-af93-bf0511d4d833"
          },
          "eventTimestamp": {
            "type": "string",
            "description": "eventTimestamp",
            "example": "2022-10-01T00:00:00Z"
          },
          "eventProperties": {
            "type": "object",
            "description": "eventProperties",
            "additionalProperties": {}
          }
        }
      },
      "CreateUsageEventForInstantChargeEndpointCreateUsageEventForInstantChargeResponseModel": {
        "required": [
          "instantCharges",
          "usageEvent"
        ],
        "type": "object",
        "example": {
          "usageEvent": {
            "id": "0184421a-8202-70ea-a729-30308a40bbf7",
            "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
            "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
            "eventType": "message-sent",
            "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
            "eventTimestamp": "2022-10-01T00:00:00Z",
            "eventProperties": {
              "length": 500,
              "type": "text_message"
            },
            "isLatestForCustomerEventId": true
          },
          "instantCharges": []
        },
        "properties": {
          "usageEvent": {
            "description": "usageEvent",
            "$ref": "#/components/schemas/UsageEvent"
          },
          "instantCharges": {
            "type": "array",
            "description": "instantCharges",
            "example": [],
            "items": {}
          }
        }
      },
      "UsageEvent": {
        "required": [
          "customerAlias",
          "customerEventId",
          "eventProperties",
          "eventTimestamp",
          "eventType",
          "id",
          "isLatestForCustomerEventId",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "eventType": "message-sent",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "eventTimestamp": "2022-10-01T00:00:00Z",
          "eventProperties": {
            "length": 500,
            "type": "text_message"
          },
          "isLatestForCustomerEventId": true
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerEventId": {
            "type": "string",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "eventType": {
            "type": "string",
            "example": "message-sent"
          },
          "sequenceAccountId": {
            "type": "string",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "eventTimestamp": {
            "type": "string",
            "example": "2022-10-01T00:00:00Z"
          },
          "eventProperties": {
            "type": "object",
            "additionalProperties": {}
          },
          "isLatestForCustomerEventId": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "GetUsageEventEndpointProductGetUsageEventResponseModel": {
        "required": [
          "customerAlias",
          "customerEventId",
          "eventProperties",
          "eventTimestamp",
          "eventType",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "eventType": "message-sent",
          "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
          "eventTimestamp": "2022-10-01T00:00:00Z",
          "eventProperties": {
            "length": 500,
            "type": "text_message"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerEventId": {
            "type": "string",
            "description": "customerEventId",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "customerAlias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "eventType": {
            "type": "string",
            "description": "eventType",
            "example": "message-sent"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "0184421e-a9cc-711b-af93-bf0511d4d833"
          },
          "eventTimestamp": {
            "type": "string",
            "description": "eventTimestamp",
            "example": "2022-10-01T00:00:00Z"
          },
          "eventProperties": {
            "type": "object",
            "description": "eventProperties",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "PrivilegedListUsageMetricEndpointProductResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
              "name": "Total length of sent messages.",
              "description": "Total length of sent messages.",
              "metricType": "GROUPED",
              "eventType": "message_sent",
              "aggregationType": "COUNT",
              "aggregationProperty": "message_length",
              "groupingProperty": "channel",
              "unit": "bytes",
              "createdAt": "2022-06-28T16:47:00Z",
              "deletedAt": "2022-06-28T16:47:00Z",
              "propertyFilters": {
                "channels": [
                  "text",
                  "email"
                ]
              },
              "caseSensitive": true,
              "propertiesToNegate": [
                "channels"
              ],
              "parameters": [
                {
                  "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                  "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                  "name": "myParam",
                  "type": "INTEGER",
                  "description": "My parameter",
                  "defaultValue": "10"
                }
              ]
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Usage metrics",
            "example": [
              {
                "id": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                "name": "Total length of sent messages.",
                "description": "Total length of sent messages.",
                "metricType": "GROUPED",
                "eventType": "message_sent",
                "aggregationType": "COUNT",
                "aggregationProperty": "message_length",
                "groupingProperty": "channel",
                "unit": "bytes",
                "createdAt": "2022-06-28T16:47:00Z",
                "deletedAt": "2022-06-28T16:47:00Z",
                "propertyFilters": {
                  "channels": [
                    "text",
                    "email"
                  ]
                },
                "caseSensitive": true,
                "propertiesToNegate": [
                  "channels"
                ],
                "parameters": [
                  {
                    "id": "2963e49a-c8e0-4673-89f5-7a805c0faf14",
                    "usageMetricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                    "name": "myParam",
                    "type": "INTEGER",
                    "description": "My parameter",
                    "defaultValue": "10"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageMetric"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListUsageEventEndpointEndpointResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "0184421a-8202-70ea-a729-30308a40bbf7",
              "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
              "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
              "eventType": "message-sent",
              "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
              "eventTimestamp": "2022-10-01T00:00:00Z",
              "eventProperties": {
                "length": 500,
                "type": "text_message"
              },
              "isLatestForCustomerEventId": true
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Usage events",
            "example": [
              {
                "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                "customerEventId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                "eventType": "message-sent",
                "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                "eventTimestamp": "2022-10-01T00:00:00Z",
                "eventProperties": {
                  "length": 500,
                  "type": "text_message"
                },
                "isLatestForCustomerEventId": true
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageEvent"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "UsageMetricCalculationResponse": {
        "required": [
          "aggregationType",
          "eventCount",
          "eventType",
          "metricType",
          "name",
          "value"
        ],
        "type": "object",
        "example": {
          "name": "total_messages_sent",
          "metricType": "GROUPED",
          "eventType": "message_sent",
          "aggregationType": "SUM",
          "eventCount": 5,
          "value": 150.035,
          "unit": "bytes",
          "minEventId": "0183d0f1-6b5a-74d4-9129-1f4b90191666",
          "maxEventId": "0183ea03-aca0-7019-b80d-6aacce344e92"
        },
        "properties": {
          "name": {
            "type": "string",
            "example": "total_messages_sent"
          },
          "metricType": {
            "$ref": "#/components/schemas/MetricType"
          },
          "eventType": {
            "type": "string",
            "example": "message_sent"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/AggregationType"
          },
          "eventCount": {
            "type": "integer",
            "example": 5
          },
          "value": {
            "type": "number",
            "example": 150.035
          },
          "unit": {
            "type": "string",
            "example": "bytes"
          },
          "minEventId": {
            "type": "string",
            "example": "0183d0f1-6b5a-74d4-9129-1f4b90191666"
          },
          "maxEventId": {
            "type": "string",
            "example": "0183ea03-aca0-7019-b80d-6aacce344e92"
          }
        }
      },
      "ListUniqueUsageEventTypesEndpointEndpointResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            "api_call"
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Unique usage event types",
            "example": [
              "api_call"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListUniqueUsageEventPropertiesEndpointEndpointResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            "transactions"
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Unique usage event properties",
            "example": [
              "transactions"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetUsageEventsInsightsResponseModel": {
        "required": [
          "eventsByDay",
          "totalEventCount"
        ],
        "type": "object",
        "example": {
          "totalEventCount": 5,
          "eventsByDay": [
            {
              "eventCount": 3,
              "date": "2024-01-01"
            },
            {
              "eventCount": 2,
              "date": "2024-01-02"
            }
          ]
        },
        "properties": {
          "totalEventCount": {
            "type": "integer",
            "description": "Total event count",
            "example": 5
          },
          "eventsByDay": {
            "type": "array",
            "description": "Events by day",
            "example": [
              {
                "eventCount": 3,
                "date": "2024-01-01"
              },
              {
                "eventCount": 2,
                "date": "2024-01-02"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageEventsByDay"
            }
          }
        }
      },
      "UsageEventsByDay": {
        "required": [
          "date",
          "eventCount"
        ],
        "type": "object",
        "example": {
          "eventCount": 3,
          "date": "2024-01-01"
        },
        "properties": {
          "eventCount": {
            "type": "integer",
            "description": "Count of events on this day",
            "example": 3
          },
          "date": {
            "type": "string",
            "description": "Date",
            "format": "date",
            "example": "2024-01-01"
          }
        }
      },
      "CreateSeatSnapshotEndpointCreateSeatSnapshotRequestModel": {
        "required": [
          "customerAlias",
          "seatChanges",
          "seatType",
          "snapshotTimestamp",
          "total"
        ],
        "type": "object",
        "example": {
          "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "seatType": "admin",
          "snapshotTimestamp": "2022-10-01T00:00:00Z",
          "total": 1,
          "seatChanges": [
            {
              "externalId": "joe.bloggs@example.com",
              "timestamp": "2022-10-01T00:00:00Z",
              "description": "Joe Bloggs",
              "reason": "seat manually added",
              "changeType": "SEAT_ADDED"
            }
          ]
        },
        "properties": {
          "customerSnapshotId": {
            "type": "string",
            "description": "ID provided by customer. Another snapshot with the same customer snapshot ID will supersede this one.",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "End-customer alias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "seatType": {
            "type": "string",
            "description": "Seat type",
            "example": "admin"
          },
          "snapshotTimestamp": {
            "type": "string",
            "description": "Timestamp of snapshot",
            "example": "2022-10-01T00:00:00Z"
          },
          "total": {
            "type": "integer",
            "description": "Total seats for this seat type",
            "example": 1
          },
          "seatChanges": {
            "type": "array",
            "description": "List of seat changes",
            "example": [
              {
                "externalId": "joe.bloggs@example.com",
                "timestamp": "2022-10-01T00:00:00Z",
                "description": "Joe Bloggs",
                "reason": "seat manually added",
                "changeType": "SEAT_ADDED"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeatChangeRequest"
            }
          }
        }
      },
      "SeatChangeRequest": {
        "required": [
          "changeType",
          "timestamp"
        ],
        "type": "object",
        "example": {
          "externalId": "joe.bloggs@example.com",
          "timestamp": "2022-10-01T00:00:00Z",
          "description": "Joe Bloggs",
          "reason": "seat manually added",
          "changeType": "SEAT_ADDED"
        },
        "properties": {
          "externalId": {
            "type": "string",
            "description": "Unique identifier for seat",
            "example": "joe.bloggs@example.com"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of change",
            "example": "2022-10-01T00:00:00Z"
          },
          "description": {
            "type": "string",
            "description": "Friendly description for seat",
            "example": "Joe Bloggs"
          },
          "reason": {
            "type": "string",
            "description": "Reason for the seat change",
            "example": "seat manually added"
          },
          "changeType": {
            "description": "Seat change type",
            "$ref": "#/components/schemas/SeatChangeType"
          }
        }
      },
      "SeatChangeType": {
        "type": "string",
        "example": "SEAT_ADDED",
        "enum": [
          "SEAT_ADDED",
          "SEAT_REMOVED"
        ]
      },
      "CreateSeatSnapshotEndpointProductCreateSeatSnapshotResponseModel": {
        "required": [
          "customerAlias",
          "customerSnapshotId",
          "id",
          "seatChanges",
          "seatType",
          "sequenceAccountId",
          "snapshotTimestamp",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "seatType": "admin",
          "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
          "snapshotTimestamp": "2022-10-01T00:00:00Z",
          "total": 1,
          "seatChanges": [
            {
              "id": "e1c7775d-b546-440f-a1e6-9cfd792355b5",
              "seatSnapshotId": "0184421a-8202-70ea-a729-30308a40bbf7",
              "externalId": "joe.bloggs@example.com",
              "timestamp": "2022-10-01T00:00:00Z",
              "description": "Joe Bloggs",
              "reason": "seat manually added",
              "changeType": "SEAT_ADDED"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerSnapshotId": {
            "type": "string",
            "description": "ID provided by customer. Another snapshot with the same customer snapshot ID will supersede this one.",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "End-customer alias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "seatType": {
            "type": "string",
            "description": "Seat type",
            "example": "admin"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "0184421e-a9cc-711b-af93-bf0511d4d833"
          },
          "snapshotTimestamp": {
            "type": "string",
            "description": "Timestamp of snapshot",
            "example": "2022-10-01T00:00:00Z"
          },
          "total": {
            "type": "integer",
            "description": "Total seats for this seat type",
            "example": 1
          },
          "seatChanges": {
            "type": "array",
            "description": "List of seat changes",
            "example": [
              {
                "id": "e1c7775d-b546-440f-a1e6-9cfd792355b5",
                "seatSnapshotId": "0184421a-8202-70ea-a729-30308a40bbf7",
                "externalId": "joe.bloggs@example.com",
                "timestamp": "2022-10-01T00:00:00Z",
                "description": "Joe Bloggs",
                "reason": "seat manually added",
                "changeType": "SEAT_ADDED"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeatChange"
            }
          }
        }
      },
      "SeatChange": {
        "required": [
          "changeType",
          "id",
          "seatSnapshotId",
          "timestamp"
        ],
        "type": "object",
        "example": {
          "id": "e1c7775d-b546-440f-a1e6-9cfd792355b5",
          "seatSnapshotId": "0184421a-8202-70ea-a729-30308a40bbf7",
          "externalId": "joe.bloggs@example.com",
          "timestamp": "2022-10-01T00:00:00Z",
          "description": "Joe Bloggs",
          "reason": "seat manually added",
          "changeType": "SEAT_ADDED"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "e1c7775d-b546-440f-a1e6-9cfd792355b5"
          },
          "seatSnapshotId": {
            "type": "string",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "externalId": {
            "type": "string",
            "description": "Unique identifier for seat",
            "example": "joe.bloggs@example.com"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of change",
            "example": "2022-10-01T00:00:00Z"
          },
          "description": {
            "type": "string",
            "description": "Friendly description for seat",
            "example": "Joe Bloggs"
          },
          "reason": {
            "type": "string",
            "description": "Reason for the seat change",
            "example": "seat manually added"
          },
          "changeType": {
            "description": "Seat change type",
            "$ref": "#/components/schemas/SeatChangeType"
          }
        }
      },
      "ListSeatSnapshotsEndpointEndpointResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "0184421a-8202-70ea-a729-30308a40bbf7",
              "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
              "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
              "seatType": "admin",
              "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
              "snapshotTimestamp": "2022-10-01T00:00:00Z",
              "total": 1,
              "seatChanges": []
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Seat snapshots",
            "example": [
              {
                "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
                "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                "seatType": "admin",
                "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
                "snapshotTimestamp": "2022-10-01T00:00:00Z",
                "total": 1,
                "seatChanges": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeatSnapshot"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "SeatSnapshot": {
        "required": [
          "customerAlias",
          "customerSnapshotId",
          "id",
          "seatChanges",
          "seatType",
          "sequenceAccountId",
          "snapshotTimestamp",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerSnapshotId": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "seatType": "admin",
          "sequenceAccountId": "0184421e-a9cc-711b-af93-bf0511d4d833",
          "snapshotTimestamp": "2022-10-01T00:00:00Z",
          "total": 1,
          "seatChanges": []
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerSnapshotId": {
            "type": "string",
            "description": "ID provided by customer. Another snapshot with the same customer snapshot ID will supersede this one.",
            "example": "event-id-H4twuTWpYx1rkd8OMTki2hTUcZ"
          },
          "customerAlias": {
            "type": "string",
            "description": "End-customer alias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "seatType": {
            "type": "string",
            "description": "Seat type",
            "example": "admin"
          },
          "sequenceAccountId": {
            "type": "string",
            "example": "0184421e-a9cc-711b-af93-bf0511d4d833"
          },
          "snapshotTimestamp": {
            "type": "string",
            "description": "Timestamp of snapshot",
            "example": "2022-10-01T00:00:00Z"
          },
          "total": {
            "type": "integer",
            "description": "Total seats for this seat type",
            "example": 1
          },
          "seatChanges": {
            "type": "array",
            "description": "List of seat changes",
            "example": [],
            "items": {}
          }
        }
      },
      "ListSeatChangesEndpointEndpointResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "94a9ad74-fa90-411f-b918-abd0092834e9",
              "seatSnapshotId": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5",
              "externalId": "joe.bloggs@example.com",
              "timestamp": "2022-10-01T00:00:00Z",
              "description": "Joe Bloggs",
              "reason": "seat manually added",
              "changeType": "SEAT_ADDED",
              "customerAlias": "7d9249ce-aa44-45fe-99dd-2847dd4b3112",
              "seatType": "admin"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Seat snapshots",
            "example": [
              {
                "id": "94a9ad74-fa90-411f-b918-abd0092834e9",
                "seatSnapshotId": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5",
                "externalId": "joe.bloggs@example.com",
                "timestamp": "2022-10-01T00:00:00Z",
                "description": "Joe Bloggs",
                "reason": "seat manually added",
                "changeType": "SEAT_ADDED",
                "customerAlias": "7d9249ce-aa44-45fe-99dd-2847dd4b3112",
                "seatType": "admin"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/DetailedSeatChange"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "DetailedSeatChange": {
        "required": [
          "changeType",
          "customerAlias",
          "id",
          "seatSnapshotId",
          "seatType",
          "timestamp"
        ],
        "type": "object",
        "example": {
          "id": "94a9ad74-fa90-411f-b918-abd0092834e9",
          "seatSnapshotId": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5",
          "externalId": "joe.bloggs@example.com",
          "timestamp": "2022-10-01T00:00:00Z",
          "description": "Joe Bloggs",
          "reason": "seat manually added",
          "changeType": "SEAT_ADDED",
          "customerAlias": "7d9249ce-aa44-45fe-99dd-2847dd4b3112",
          "seatType": "admin"
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "94a9ad74-fa90-411f-b918-abd0092834e9"
          },
          "seatSnapshotId": {
            "type": "string",
            "example": "cbe4a9e6-0db7-4809-9f2d-a1c18a7559b5"
          },
          "externalId": {
            "type": "string",
            "description": "Unique identifier for seat",
            "example": "joe.bloggs@example.com"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of change",
            "example": "2022-10-01T00:00:00Z"
          },
          "description": {
            "type": "string",
            "description": "Friendly description for seat",
            "example": "Joe Bloggs"
          },
          "reason": {
            "type": "string",
            "description": "Reason for the seat change",
            "example": "seat manually added"
          },
          "changeType": {
            "description": "Seat change type",
            "$ref": "#/components/schemas/SeatChangeType"
          },
          "customerAlias": {
            "type": "string",
            "description": "End-customer alias",
            "example": "7d9249ce-aa44-45fe-99dd-2847dd4b3112"
          },
          "seatType": {
            "type": "string",
            "description": "Seat type",
            "example": "admin"
          }
        }
      },
      "CreateSeatTypeEndpointCreateSeatTypeRequestModel": {
        "required": [
          "key",
          "label"
        ],
        "type": "object",
        "example": {
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
        },
        "properties": {
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          }
        }
      },
      "CreateSeatTypeEndpointProductCreateSeatTypeResponseModel": {
        "required": [
          "createdAt",
          "id",
          "key",
          "label",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "GetSeatTypeEndpointProductGetSeatTypeResponseModel": {
        "required": [
          "createdAt",
          "id",
          "key",
          "label",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListSeatTypeEndpointProductListSeatTypePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
              "key": "admin",
              "label": "Administrator",
              "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "SeatTypes",
            "example": [
              {
                "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                "key": "admin",
                "label": "Administrator",
                "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListSeatTypeEndpointProductListSeatTypeResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListSeatTypeEndpointProductListSeatTypeResponseModel": {
        "required": [
          "createdAt",
          "id",
          "key",
          "label",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "UpdateSeatTypeEndpointUpdateSeatTypeRequestModel": {
        "required": [
          "label"
        ],
        "type": "object",
        "example": {
          "label": "Administrator"
        },
        "properties": {
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          }
        }
      },
      "UpdateSeatTypeEndpointProductUpdateSeatTypeResponseModel": {
        "required": [
          "createdAt",
          "id",
          "key",
          "label",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "DeleteSeatTypeEndpointProductDeleteSeatTypeResponseModel": {
        "required": [
          "createdAt",
          "id",
          "key",
          "label",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "key": "admin",
          "label": "Administrator",
          "sequenceUserId": "4ffd439e-32e5-4046-bb40-3cb81f40e5da",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "sequenceAccountId",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "key": {
            "type": "string",
            "description": "Immutable, unique value used to identify and refer to this seat type",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "description": "Friendly, customer-facing name for seat type",
            "example": "Administrator"
          },
          "sequenceUserId": {
            "type": "string",
            "description": "The Sequence User who created this seat type",
            "example": "4ffd439e-32e5-4046-bb40-3cb81f40e5da"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListLatestSeatTotalsEndpointProductListLatestSeatTotalsPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "0184421a-8202-70ea-a729-30308a40bbf7",
              "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
              "seatType": "admin",
              "total": 10,
              "changeTimestamp": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LatestSeatTotals",
            "example": [
              {
                "id": "0184421a-8202-70ea-a729-30308a40bbf7",
                "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
                "seatType": "admin",
                "total": 10,
                "changeTimestamp": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListLatestSeatTotalsEndpointProductListLatestSeatTotalsResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListLatestSeatTotalsEndpointProductListLatestSeatTotalsResponseModel": {
        "required": [
          "changeTimestamp",
          "customerAlias",
          "id",
          "seatType",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "0184421a-8202-70ea-a729-30308a40bbf7",
          "customerAlias": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW",
          "seatType": "admin",
          "total": 10,
          "changeTimestamp": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of SeatSnapshot with the latest seat total",
            "example": "0184421a-8202-70ea-a729-30308a40bbf7"
          },
          "customerAlias": {
            "type": "string",
            "description": "customerAlias",
            "example": "customer-id-2H4u5BBwBWsS5V2sroRFqJfTXpW"
          },
          "seatType": {
            "type": "string",
            "description": "seatType",
            "example": "admin"
          },
          "total": {
            "type": "integer",
            "description": "total",
            "example": 10
          },
          "changeTimestamp": {
            "type": "string",
            "description": "Timestamp of change",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListCustomerSeatBalancesEndpointListCustomerSeatBalancesPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d82010a6-6835-41f8-9dd3-6f858f617f35",
              "sequenceAccountId": "806460ce-050d-45e4-8d22-b403a523b866",
              "legalName": "Acme Corp",
              "customerAliases": [
                "acme"
              ],
              "total": 10,
              "changeTimestamp": "2022-06-28T16:47:00Z",
              "balances": [
                {
                  "seatType": "admin",
                  "total": 10,
                  "changeTimestamp": "2022-06-28T16:47:00Z"
                }
              ]
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Seat balances",
            "example": [
              {
                "id": "d82010a6-6835-41f8-9dd3-6f858f617f35",
                "sequenceAccountId": "806460ce-050d-45e4-8d22-b403a523b866",
                "legalName": "Acme Corp",
                "customerAliases": [
                  "acme"
                ],
                "total": 10,
                "changeTimestamp": "2022-06-28T16:47:00Z",
                "balances": [
                  {
                    "seatType": "admin",
                    "total": 10,
                    "changeTimestamp": "2022-06-28T16:47:00Z"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomerSeatBalances"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "CustomerSeatBalances": {
        "required": [
          "balances",
          "changeTimestamp",
          "customerAliases",
          "id",
          "legalName",
          "sequenceAccountId",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "d82010a6-6835-41f8-9dd3-6f858f617f35",
          "sequenceAccountId": "806460ce-050d-45e4-8d22-b403a523b866",
          "legalName": "Acme Corp",
          "customerAliases": [
            "acme"
          ],
          "total": 10,
          "changeTimestamp": "2022-06-28T16:47:00Z",
          "balances": [
            {
              "seatType": "admin",
              "total": 10,
              "changeTimestamp": "2022-06-28T16:47:00Z"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Customer ID",
            "example": "d82010a6-6835-41f8-9dd3-6f858f617f35"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "806460ce-050d-45e4-8d22-b403a523b866"
          },
          "legalName": {
            "type": "string",
            "description": "Legal name",
            "example": "Acme Corp"
          },
          "customerAliases": {
            "type": "array",
            "example": [
              "acme"
            ],
            "items": {
              "type": "string"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total seats balance",
            "example": 10
          },
          "changeTimestamp": {
            "type": "string",
            "description": "Timestamp of when the customer seats last changed",
            "example": "2022-06-28T16:47:00Z"
          },
          "balances": {
            "type": "array",
            "description": "Seat balance per seat type",
            "example": [
              {
                "seatType": "admin",
                "total": 10,
                "changeTimestamp": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeatBalance"
            }
          }
        }
      },
      "SeatBalance": {
        "required": [
          "changeTimestamp",
          "seatType",
          "total"
        ],
        "type": "object",
        "example": {
          "seatType": "admin",
          "total": 10,
          "changeTimestamp": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "seatType": {
            "type": "string",
            "description": "Seat type",
            "example": "admin"
          },
          "total": {
            "type": "integer",
            "description": "Total seats for this seat type",
            "example": 10
          },
          "changeTimestamp": {
            "type": "string",
            "description": "Timestamp of change",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "CreateProductEndpointCreateProductRequestModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "example": {
          "name": "Fixed priced product",
          "label": "Fixed priced product - UK"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Product",
            "example": "Fixed priced product"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this item",
            "example": "Fixed priced product - UK"
          }
        }
      },
      "ProductResponse": {
        "required": [
          "createdAt",
          "id",
          "label",
          "name",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
          "name": "Fixed priced product",
          "label": "Fixed priced product - UK",
          "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Product ID",
            "example": "994d23f7-47b6-43ee-af6b-cd27181196b6"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Product",
            "example": "Fixed priced product"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this item",
            "example": "Fixed priced product - UK"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "683fe518-60c8-429f-9320-8aa7efc20bcc"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "UpdateProductEndpointUpdateProductRequestModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "example": {
          "name": "Fixed priced product",
          "label": "Fixed priced product - UK"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Product",
            "example": "Fixed priced product"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this item",
            "example": "Fixed priced product - UK"
          }
        }
      },
      "ListProductEndpointResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
              "name": "Fixed priced product",
              "label": "Fixed priced product - UK",
              "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Products",
            "example": [
              {
                "id": "994d23f7-47b6-43ee-af6b-cd27181196b6",
                "name": "Fixed priced product",
                "label": "Fixed priced product - UK",
                "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "Customer": {
        "required": [
          "address",
          "billingEmails",
          "createdAt",
          "email",
          "externalIds",
          "id",
          "legalName",
          "sequenceAccountId",
          "taxStatus"
        ],
        "type": "object",
        "example": {
          "id": "e309e948-088e-4d77-b654-cd85498f1555",
          "createdAt": "2022-06-28T16:47:00Z",
          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
          "legalName": "John Doe",
          "contactName": "John Doe",
          "address": {
            "line1": "Flat 1",
            "line2": "123 Fake Street",
            "town": "New York",
            "state": "NY",
            "postcode": "AB1 2EF",
            "country": "US"
          },
          "email": "john@example.com",
          "billingEmails": [
            "exampleCorpInvoices@example.com"
          ],
          "telephone": "02010001000",
          "url": "https://example.com/",
          "taxStatus": "TAXED",
          "label": "Example customer",
          "externalIds": [
            {
              "key": "Xero",
              "value": "ID",
              "syncTime": "2022-06-28T16:47:00Z"
            },
            {
              "key": "Stripe",
              "value": "cus_OCtCxqQDgu1uX9",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "archivedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "e309e948-088e-4d77-b654-cd85498f1555"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "SequenceHQ Account ID",
            "example": "25b3c342-6fa6-4375-9ed3-616f05abb77a"
          },
          "legalName": {
            "type": "string",
            "description": "Legal name",
            "example": "John Doe"
          },
          "contactName": {
            "type": "string",
            "description": "Contact Name",
            "example": "John Doe"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "description": "Main contact email address",
            "example": "john@example.com"
          },
          "billingEmails": {
            "type": "array",
            "description": "Billing email addresses",
            "example": [
              "exampleCorpInvoices@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "telephone": {
            "type": "string",
            "description": "Telephone",
            "example": "02010001000"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://example.com/"
          },
          "taxStatus": {
            "description": "Tax status applicable to customer. Can be one of TAXED, EXEMPT or REVERSE_CHARGED. The default is TAXED.",
            "$ref": "#/components/schemas/TaxStatus"
          },
          "label": {
            "type": "string",
            "description": "Label",
            "example": "Example customer"
          },
          "externalIds": {
            "type": "array",
            "description": "External services which are linked to this customer",
            "example": [
              {
                "key": "Xero",
                "value": "ID",
                "syncTime": "2022-06-28T16:47:00Z"
              },
              {
                "key": "Stripe",
                "value": "cus_OCtCxqQDgu1uX9",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValueLinkInfo"
            }
          },
          "archivedAt": {
            "type": "string",
            "description": "Date and time the Customer was archived",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "Address": {
        "required": [
          "country",
          "line1",
          "postcode",
          "town"
        ],
        "type": "object",
        "example": {
          "line1": "Flat 1",
          "line2": "123 Fake Street",
          "town": "New York",
          "state": "NY",
          "postcode": "AB1 2EF",
          "country": "US"
        },
        "properties": {
          "line1": {
            "type": "string",
            "description": "Address line 1",
            "example": "Flat 1"
          },
          "line2": {
            "type": "string",
            "description": "Address line 2",
            "example": "123 Fake Street"
          },
          "town": {
            "type": "string",
            "description": "Town or city",
            "example": "New York"
          },
          "state": {
            "description": "State (required for USA only)",
            "$ref": "#/components/schemas/State1"
          },
          "postcode": {
            "type": "string",
            "description": "Postal code",
            "example": "AB1 2EF"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode1"
          }
        }
      },
      "State1": {
        "type": "string",
        "example": "NY",
        "enum": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "CA",
          "CO",
          "CT",
          "DC",
          "DE",
          "FL",
          "GA",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "AB",
          "BC",
          "MB",
          "NB",
          "NL",
          "NS",
          "ON",
          "PE",
          "QC",
          "SK"
        ]
      },
      "CountryCode1": {
        "type": "string",
        "example": "US",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "TaxStatus": {
        "type": "string",
        "example": "TAXED",
        "enum": [
          "TAXED",
          "TAX_EXEMPT",
          "REVERSE_CHARGED"
        ]
      },
      "KeyValueLinkInfo": {
        "required": [
          "key",
          "syncTime",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "Xero",
          "value": "ID",
          "syncTime": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "key": {
            "description": "The connected service",
            "$ref": "#/components/schemas/IntegrationService"
          },
          "value": {
            "type": "string",
            "description": "The ID of the related entity in external system",
            "example": "ID"
          },
          "syncTime": {
            "type": "string",
            "description": "The time that this was synced from the connected integration",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "IntegrationService": {
        "type": "string",
        "example": "Xero",
        "enum": [
          "Amazon_Redshift",
          "Google_BigQuery",
          "Google_Sheets",
          "HubSpot",
          "NetSuite",
          "QuickBooks_Online",
          "Salesforce",
          "Slack",
          "Snowflake",
          "Stripe",
          "Xero"
        ]
      },
      "ListCustomersResponse": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "e309e948-088e-4d77-b654-cd85498f1555",
              "createdAt": "2022-06-28T16:47:00Z",
              "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
              "legalName": "John Doe",
              "contactName": "John Doe",
              "address": {
                "line1": "Flat 1",
                "line2": "123 Fake Street",
                "town": "New York",
                "state": "NY",
                "postcode": "AB1 2EF",
                "country": "US"
              },
              "email": "john@example.com",
              "billingEmails": [
                "exampleCorpInvoices@example.com"
              ],
              "telephone": "02010001000",
              "url": "https://example.com/",
              "taxStatus": "TAXED",
              "label": "Example customer",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "ID",
                  "syncTime": "2022-06-28T16:47:00Z"
                },
                {
                  "key": "Stripe",
                  "value": "cus_OCtCxqQDgu1uX9",
                  "syncTime": "2022-06-28T16:47:00Z"
                }
              ],
              "archivedAt": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Customers",
            "example": [
              {
                "id": "e309e948-088e-4d77-b654-cd85498f1555",
                "createdAt": "2022-06-28T16:47:00Z",
                "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
                "legalName": "John Doe",
                "contactName": "John Doe",
                "address": {
                  "line1": "Flat 1",
                  "line2": "123 Fake Street",
                  "town": "New York",
                  "state": "NY",
                  "postcode": "AB1 2EF",
                  "country": "US"
                },
                "email": "john@example.com",
                "billingEmails": [
                  "exampleCorpInvoices@example.com"
                ],
                "telephone": "02010001000",
                "url": "https://example.com/",
                "taxStatus": "TAXED",
                "label": "Example customer",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "ID",
                    "syncTime": "2022-06-28T16:47:00Z"
                  },
                  {
                    "key": "Stripe",
                    "value": "cus_OCtCxqQDgu1uX9",
                    "syncTime": "2022-06-28T16:47:00Z"
                  }
                ],
                "archivedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "CreateCustomerRequest": {
        "required": [
          "address",
          "billingEmails",
          "email",
          "legalName"
        ],
        "type": "object",
        "example": {
          "legalName": "John Doe",
          "contactName": "John Doe",
          "address": {
            "line1": "Flat 1",
            "line2": "123 Fake Street",
            "town": "New York",
            "state": "NY",
            "postcode": "AB1 2EF",
            "country": "US"
          },
          "email": "john@example.com",
          "billingEmails": [
            "exampleCorpInvoices@example.com"
          ],
          "telephone": "john@example.com",
          "url": "https://example.com/",
          "label": "Example customer",
          "taxStatus": "TAXED",
          "customerAliases": [
            "b1c87177-088a-40ec-8917-9809343f3f9c"
          ],
          "externalIds": [
            {
              "key": "Xero",
              "value": "123456789"
            },
            {
              "key": "Stripe",
              "value": "cus_OCtCxqQDgu1uX9"
            },
            {
              "key": "HubSpot",
              "value": "123456789"
            }
          ]
        },
        "properties": {
          "legalName": {
            "type": "string",
            "description": "Legal name",
            "example": "John Doe"
          },
          "contactName": {
            "type": "string",
            "description": "Contact name",
            "example": "John Doe"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "john@example.com"
          },
          "billingEmails": {
            "type": "array",
            "description": "Billing email addresses",
            "example": [
              "exampleCorpInvoices@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "telephone": {
            "type": "string",
            "description": "Telephone",
            "example": "john@example.com"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://example.com/"
          },
          "label": {
            "type": "string",
            "description": "Label",
            "example": "Example customer"
          },
          "taxStatus": {
            "description": "Tax status applicable to customer. Can be one of TAXED, EXEMPT or REVERSE_CHARGED. The default is TAXED.",
            "$ref": "#/components/schemas/TaxStatus"
          },
          "customerAliases": {
            "type": "array",
            "description": "Customer aliases.",
            "example": [
              "b1c87177-088a-40ec-8917-9809343f3f9c"
            ],
            "items": {
              "type": "string"
            }
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123456789"
              },
              {
                "key": "Stripe",
                "value": "cus_OCtCxqQDgu1uX9"
              },
              {
                "key": "HubSpot",
                "value": "123456789"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier"
            }
          }
        }
      },
      "IntegrationExternalIdentifier": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "Xero",
          "value": "123456789"
        },
        "properties": {
          "key": {
            "$ref": "#/components/schemas/IntegrationService"
          },
          "value": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "CreateCustomerResponse": {
        "required": [
          "customer"
        ],
        "type": "object",
        "example": {
          "customer": {
            "id": "e309e948-088e-4d77-b654-cd85498f1555",
            "createdAt": "2022-06-28T16:47:00Z",
            "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
            "legalName": "John Doe",
            "contactName": "John Doe",
            "address": {
              "line1": "Flat 1",
              "line2": "123 Fake Street",
              "town": "New York",
              "state": "NY",
              "postcode": "AB1 2EF",
              "country": "US"
            },
            "email": "john@example.com",
            "billingEmails": [
              "exampleCorpInvoices@example.com"
            ],
            "telephone": "02010001000",
            "url": "https://example.com/",
            "taxStatus": "TAXED",
            "label": "Example customer",
            "externalIds": [
              {
                "key": "Xero",
                "value": "ID",
                "syncTime": "2022-06-28T16:47:00Z"
              },
              {
                "key": "Stripe",
                "value": "cus_OCtCxqQDgu1uX9",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "archivedAt": "2022-06-28T16:47:00Z"
          }
        },
        "properties": {
          "customer": {
            "description": "Customer",
            "$ref": "#/components/schemas/Customer"
          }
        }
      },
      "UpdateCustomerRequest": {
        "required": [
          "address",
          "email",
          "legalName",
          "taxStatus"
        ],
        "type": "object",
        "example": {
          "legalName": "John Doe",
          "contactName": "John Doe",
          "address": {
            "line1": "Flat 1",
            "line2": "123 Fake Street",
            "town": "New York",
            "state": "NY",
            "postcode": "AB1 2EF",
            "country": "US"
          },
          "email": "john@example.com",
          "billingEmails": [
            "exampleCorpInvoices@example.com"
          ],
          "telephone": "02010001000",
          "url": "https://example.com/",
          "label": "Example customer",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123456789"
            },
            {
              "key": "Stripe",
              "value": "cus_OCtCxqQDgu1uX9"
            },
            {
              "key": "HubSpot",
              "value": "123456789"
            }
          ],
          "taxStatus": "TAXED",
          "customerAliases": [
            "b1c87177-088a-40ec-8917-9809343f3f9c"
          ]
        },
        "properties": {
          "legalName": {
            "type": "string",
            "description": "Legal name",
            "example": "John Doe"
          },
          "contactName": {
            "type": "string",
            "description": "Contact Name",
            "example": "John Doe"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "john@example.com"
          },
          "billingEmails": {
            "type": "array",
            "description": "Billing email addresses",
            "example": [
              "exampleCorpInvoices@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "telephone": {
            "type": "string",
            "description": "Telephone",
            "example": "02010001000"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://example.com/"
          },
          "label": {
            "type": "string",
            "description": "Label",
            "example": "Example customer"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123456789"
              },
              {
                "key": "Stripe",
                "value": "cus_OCtCxqQDgu1uX9"
              },
              {
                "key": "HubSpot",
                "value": "123456789"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier"
            }
          },
          "taxStatus": {
            "description": "Tax status applicable to customer. Can be one of TAXED, EXEMPT or REVERSE_CHARGED. The default is TAXED.",
            "$ref": "#/components/schemas/TaxStatus"
          },
          "customerAliases": {
            "type": "array",
            "description": "Customer aliases.",
            "example": [
              "b1c87177-088a-40ec-8917-9809343f3f9c"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCustomerAliasesEndpointEndpointResponse": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "0185a140-194a-7e9d-9fae-6a034fd4a725",
              "sequenceAccountId": "cd243b67-7d8c-42ee-b19f-b4e41f584415",
              "customerId": "0185a142-54ff-7ce5-846a-fc188432da6e",
              "value": "customer-alias-123",
              "createdAt": "2022-10-01T00:00:00Z"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "example": [
              {
                "id": "0185a140-194a-7e9d-9fae-6a034fd4a725",
                "sequenceAccountId": "cd243b67-7d8c-42ee-b19f-b4e41f584415",
                "customerId": "0185a142-54ff-7ce5-846a-fc188432da6e",
                "value": "customer-alias-123",
                "createdAt": "2022-10-01T00:00:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomerAlias"
            }
          }
        }
      },
      "CustomerAlias": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "0185a140-194a-7e9d-9fae-6a034fd4a725",
          "sequenceAccountId": "cd243b67-7d8c-42ee-b19f-b4e41f584415",
          "customerId": "0185a142-54ff-7ce5-846a-fc188432da6e",
          "value": "customer-alias-123",
          "createdAt": "2022-10-01T00:00:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "0185a140-194a-7e9d-9fae-6a034fd4a725"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "cd243b67-7d8c-42ee-b19f-b4e41f584415"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "0185a142-54ff-7ce5-846a-fc188432da6e"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "customer-alias-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Created At",
            "example": "2022-10-01T00:00:00Z"
          }
        }
      },
      "DeleteCustomerAliasEndpointProductDeleteCustomerAliasResponseModel": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
          "value": "external-customer-alias-123",
          "createdAt": "2022-10-01T00:00:00Z",
          "deletedAt": "2022-10-01T00:00:00Z",
          "label": "CRM ID"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "01849e70-0a0f-72ca-ba07-5557dd734d43"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "01849e70-703e-705a-b59a-d3fd575587e0"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "external-customer-alias-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Created At",
            "example": "2022-10-01T00:00:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted At",
            "example": "2022-10-01T00:00:00Z"
          },
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "CreateCustomerAliasEndpointCreateCustomerAliasRequestModel": {
        "required": [
          "customerId",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
          "value": "external-customer-alias-123",
          "deletedAt": "2022-10-01T00:00:00Z",
          "label": "CRM ID"
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "01849e70-703e-705a-b59a-d3fd575587e0"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "external-customer-alias-123"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted At",
            "example": "2022-10-01T00:00:00Z"
          },
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "CreateCustomerAliasEndpointProductCreateCustomerAliasResponseModel": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
          "value": "external-customer-alias-123",
          "createdAt": "2022-10-01T00:00:00Z",
          "deletedAt": "2022-10-01T00:00:00Z",
          "label": "CRM ID"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "01849e70-0a0f-72ca-ba07-5557dd734d43"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "01849e70-703e-705a-b59a-d3fd575587e0"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "external-customer-alias-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Created At",
            "example": "2022-10-01T00:00:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted At",
            "example": "2022-10-01T00:00:00Z"
          },
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "ListCustomerAliasEndpointProductListCustomerAliasPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
              "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
              "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
              "value": "external-customer-alias-123",
              "createdAt": "2022-10-01T00:00:00Z",
              "deletedAt": "2022-10-01T00:00:00Z",
              "label": "CRM ID"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CustomerAliass",
            "example": [
              {
                "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
                "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
                "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
                "value": "external-customer-alias-123",
                "createdAt": "2022-10-01T00:00:00Z",
                "deletedAt": "2022-10-01T00:00:00Z",
                "label": "CRM ID"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListCustomerAliasEndpointProductListCustomerAliasResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListCustomerAliasEndpointProductListCustomerAliasResponseModel": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
          "value": "external-customer-alias-123",
          "createdAt": "2022-10-01T00:00:00Z",
          "deletedAt": "2022-10-01T00:00:00Z",
          "label": "CRM ID"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "01849e70-0a0f-72ca-ba07-5557dd734d43"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "01849e70-703e-705a-b59a-d3fd575587e0"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "external-customer-alias-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Created At",
            "example": "2022-10-01T00:00:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted At",
            "example": "2022-10-01T00:00:00Z"
          },
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "UpdateCustomerAliasEndpointUpdateCustomerAliasRequestModel": {
        "type": "object",
        "example": {
          "label": "CRM ID"
        },
        "properties": {
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "UpdateCustomerAliasEndpointProductUpdateCustomerAliasResponseModel": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "sequenceAccountId",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "01849e70-0a0f-72ca-ba07-5557dd734d43",
          "sequenceAccountId": "ec1479a2-6ba1-421f-a7de-0853a20d17a1",
          "customerId": "01849e70-703e-705a-b59a-d3fd575587e0",
          "value": "external-customer-alias-123",
          "createdAt": "2022-10-01T00:00:00Z",
          "deletedAt": "2022-10-01T00:00:00Z",
          "label": "CRM ID"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "01849e70-0a0f-72ca-ba07-5557dd734d43"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ec1479a2-6ba1-421f-a7de-0853a20d17a1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "01849e70-703e-705a-b59a-d3fd575587e0"
          },
          "value": {
            "type": "string",
            "description": "Alias value",
            "example": "external-customer-alias-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Created At",
            "example": "2022-10-01T00:00:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted At",
            "example": "2022-10-01T00:00:00Z"
          },
          "label": {
            "type": "string",
            "description": "Alias label",
            "example": "CRM ID"
          }
        }
      },
      "CreateContactEndpointCreateContactRequestModel": {
        "required": [
          "contactType",
          "customerId",
          "email",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
          "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
          "email": "jane.smith@example.com",
          "firstName": "Jane",
          "lastName": "Smith",
          "contactType": "QUOTE_RECIPIENT",
          "deletedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "25b3c342-6fa6-4375-9ed3-616f05abb77a"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "e309e948-088e-4d77-b654-cd85498f1555"
          },
          "email": {
            "type": "string",
            "description": "Contact email address",
            "example": "jane.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "Contact first name",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name",
            "example": "Smith"
          },
          "contactType": {
            "description": "The type of contact",
            "$ref": "#/components/schemas/ContactType"
          },
          "deletedAt": {
            "type": "string",
            "description": "Date and time the Customer was deleted",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ContactType": {
        "type": "string",
        "example": "QUOTE_RECIPIENT",
        "enum": [
          "BILLING_PRIMARY",
          "BILLING",
          "CUSTOMER_PRIMARY",
          "QUOTE_RECIPIENT"
        ]
      },
      "CreateContactEndpointProductCreateContactResponseModel": {
        "required": [
          "contactType",
          "createdAt",
          "customerId",
          "email",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
          "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
          "email": "jane.smith@example.com",
          "firstName": "Jane",
          "lastName": "Smith",
          "contactType": "QUOTE_RECIPIENT",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "25b3c342-6fa6-4375-9ed3-616f05abb77a"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "e309e948-088e-4d77-b654-cd85498f1555"
          },
          "email": {
            "type": "string",
            "description": "Contact email address",
            "example": "jane.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "Contact first name",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name",
            "example": "Smith"
          },
          "contactType": {
            "description": "The type of contact",
            "$ref": "#/components/schemas/ContactType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Date and time the Customer was deleted",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "UpdateContactEndpointUpdateContactRequestModel": {
        "required": [
          "contactType",
          "email"
        ],
        "type": "object",
        "example": {
          "email": "jane.smith@example.com",
          "firstName": "Jane",
          "lastName": "Smith",
          "contactType": "QUOTE_RECIPIENT"
        },
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email address",
            "example": "jane.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "Contact first name",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name",
            "example": "Smith"
          },
          "contactType": {
            "description": "The type of contact",
            "$ref": "#/components/schemas/ContactType"
          }
        }
      },
      "UpdateContactEndpointProductUpdateContactResponseModel": {
        "required": [
          "contactType",
          "createdAt",
          "customerId",
          "email",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
          "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
          "email": "jane.smith@example.com",
          "firstName": "Jane",
          "lastName": "Smith",
          "contactType": "QUOTE_RECIPIENT",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "25b3c342-6fa6-4375-9ed3-616f05abb77a"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "e309e948-088e-4d77-b654-cd85498f1555"
          },
          "email": {
            "type": "string",
            "description": "Contact email address",
            "example": "jane.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "Contact first name",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name",
            "example": "Smith"
          },
          "contactType": {
            "description": "The type of contact",
            "$ref": "#/components/schemas/ContactType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Date and time the Customer was deleted",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "DeleteContactEndpointProductDeleteContactResponseModel": {
        "required": [
          "contactType",
          "createdAt",
          "customerId",
          "email",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc",
          "sequenceAccountId": "25b3c342-6fa6-4375-9ed3-616f05abb77a",
          "customerId": "e309e948-088e-4d77-b654-cd85498f1555",
          "email": "jane.smith@example.com",
          "firstName": "Jane",
          "lastName": "Smith",
          "contactType": "QUOTE_RECIPIENT",
          "createdAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "9a1e38a9-4dc9-776f-f974-4e7ee9f4d6cc"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "25b3c342-6fa6-4375-9ed3-616f05abb77a"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "e309e948-088e-4d77-b654-cd85498f1555"
          },
          "email": {
            "type": "string",
            "description": "Contact email address",
            "example": "jane.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "Contact first name",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name",
            "example": "Smith"
          },
          "contactType": {
            "description": "The type of contact",
            "$ref": "#/components/schemas/ContactType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Date and time the Customer was deleted",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListBillingProductsEndpointListProductResponsePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
              "name": "Fixed priced product",
              "label": "Fixed priced product - UK",
              "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z",
              "prices": []
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Billing products",
            "example": [
              {
                "id": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                "name": "Fixed priced product",
                "label": "Fixed priced product - UK",
                "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z",
                "prices": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillingProduct"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "BillingProduct": {
        "required": [
          "createdAt",
          "id",
          "label",
          "name",
          "prices",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
          "name": "Fixed priced product",
          "label": "Fixed priced product - UK",
          "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "prices": []
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Product ID",
            "example": "f409d651-c475-4142-aafd-a5d2bd74d4f9"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Product",
            "example": "Fixed priced product"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this item",
            "example": "Fixed priced product - UK"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "683fe518-60c8-429f-9320-8aa7efc20bcc"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "prices": {
            "type": "array",
            "description": "Prices",
            "example": [],
            "items": {}
          }
        }
      },
      "CreatePriceEndpointCreatePriceRequestModel": {
        "required": [
          "billingFrequency",
          "billingType",
          "currency",
          "externalIds",
          "name",
          "productId",
          "structure"
        ],
        "type": "object",
        "example": {
          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "d07037d5-3e31-4c3a-a360-e58555e2bf44"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "Currency": {
        "type": "string",
        "example": "GBP",
        "enum": [
          "ARS",
          "AUD",
          "BRL",
          "CAD",
          "CHF",
          "CNY",
          "COP",
          "CZK",
          "DKK",
          "EUR",
          "GBP",
          "HKD",
          "ILS",
          "JPY",
          "KRW",
          "MXN",
          "NOK",
          "NZD",
          "PLN",
          "SEK",
          "SGD",
          "THB",
          "USD",
          "UYU",
          "ZAR"
        ]
      },
      "LinearPricingStructure": {
        "required": [
          "isPricePercentage",
          "pricePerUnit",
          "pricingType",
          "usageMetricId"
        ],
        "type": "object",
        "example": {
          "pricingType": "LINEAR",
          "pricePerUnit": "0.25",
          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
          "isPricePercentage": false
        },
        "properties": {
          "pricingType": {
            "description": "The type of pricing",
            "$ref": "#/components/schemas/PricingType"
          },
          "pricePerUnit": {
            "type": "string",
            "description": "Price charged per unit of usage of a product",
            "example": "0.25"
          },
          "usageMetricId": {
            "type": "string",
            "description": "Usage metric associated to this pricing structure",
            "example": "04c62961-04ba-48e6-b985-758bb7d3e712"
          },
          "isPricePercentage": {
            "type": "boolean",
            "description": "Indicates whether the Price is represented as absolute value or a percentage",
            "example": false
          }
        }
      },
      "PricingType": {
        "example": "ONE_TIME",
        "enum": [
          "ONE_TIME",
          "FIXED",
          "LINEAR",
          "PACKAGE",
          "GRADUATED",
          "VOLUME",
          "SEAT_BASED"
        ],
        "type": "string"
      },
      "BillingFrequency": {
        "example": "YEARLY",
        "enum": [
          "ONE_TIME",
          "MONTHLY",
          "QUARTERLY",
          "YEARLY"
        ],
        "type": "string"
      },
      "BillingType": {
        "type": "string",
        "example": "IN_ARREARS",
        "enum": [
          "IN_ARREARS",
          "IN_ADVANCE"
        ]
      },
      "IntegrationExternalIdentifier1": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "Xero",
          "value": "123"
        },
        "properties": {
          "key": {
            "$ref": "#/components/schemas/IntegrationService"
          },
          "value": {
            "type": "string",
            "example": "123"
          }
        }
      },
      "PriceParameter": {
        "required": [
          "parameterId",
          "value"
        ],
        "type": "object",
        "example": {
          "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
          "value": "10"
        },
        "properties": {
          "parameterId": {
            "type": "string",
            "example": "94703530-1293-479b-bd37-ccad42fd9c8b"
          },
          "value": {
            "type": "string",
            "example": "10"
          }
        }
      },
      "CreatePriceEndpointProductCreatePriceResponseModel": {
        "required": [
          "billingFrequency",
          "billingType",
          "createdAt",
          "currency",
          "externalIds",
          "id",
          "name",
          "parameters",
          "productId",
          "sequenceAccountId",
          "structure"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Price ID",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Price belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "d07037d5-3e31-4c3a-a360-e58555e2bf44"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "GetPriceEndpointProductGetPriceResponseModel": {
        "required": [
          "billingFrequency",
          "billingType",
          "createdAt",
          "currency",
          "externalIds",
          "id",
          "name",
          "parameters",
          "productId",
          "sequenceAccountId",
          "structure"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Price ID",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Price belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "d07037d5-3e31-4c3a-a360-e58555e2bf44"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "UpdatePriceEndpointUpdatePriceRequestModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "example": {
          "name": "Demo Product"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          }
        }
      },
      "UpdatePriceEndpointProductUpdatePriceResponseModel": {
        "required": [
          "billingFrequency",
          "billingType",
          "createdAt",
          "currency",
          "externalIds",
          "id",
          "name",
          "parameters",
          "productId",
          "sequenceAccountId",
          "structure"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Price ID",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Price belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "d07037d5-3e31-4c3a-a360-e58555e2bf44"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "ListPriceEndpointProductListPricePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
              "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
              "name": "Demo Product",
              "currency": "GBP",
              "structure": {
                "pricingType": "LINEAR",
                "pricePerUnit": "0.25",
                "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                "isPricePercentage": false
              },
              "billingFrequency": "MONTHLY",
              "billingType": "IN_ARREARS",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ],
              "parameters": [
                {
                  "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                  "value": "10"
                }
              ]
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Prices",
            "example": [
              {
                "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
                "name": "Demo Product",
                "currency": "GBP",
                "structure": {
                  "pricingType": "LINEAR",
                  "pricePerUnit": "0.25",
                  "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
                  "isPricePercentage": false
                },
                "billingFrequency": "MONTHLY",
                "billingType": "IN_ARREARS",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ],
                "parameters": [
                  {
                    "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                    "value": "10"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "Price": {
        "required": [
          "billingFrequency",
          "billingType",
          "createdAt",
          "currency",
          "externalIds",
          "id",
          "name",
          "parameters",
          "productId",
          "sequenceAccountId",
          "structure"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
          "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "deletedAt": "2022-06-28T16:47:00Z",
          "externalIds": [],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Price ID",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Price belongs",
            "example": "c4602d51-0fb4-4b48-b689-6ba28f540d1e"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "f409d651-c475-4142-aafd-a5d2bd74d4f9"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "deletedAt": {
            "type": "string",
            "description": "Deleted at",
            "example": "2022-06-28T16:47:00Z"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [],
            "items": {}
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "DeletePriceEndpointProductDeletePriceResponseModel": {
        "required": [
          "billingFrequency",
          "billingType",
          "createdAt",
          "currency",
          "externalIds",
          "id",
          "name",
          "parameters",
          "productId",
          "sequenceAccountId",
          "structure"
        ],
        "type": "object",
        "example": {
          "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "productId": "d07037d5-3e31-4c3a-a360-e58555e2bf44",
          "name": "Demo Product",
          "currency": "GBP",
          "structure": {
            "pricingType": "LINEAR",
            "pricePerUnit": "0.25",
            "usageMetricId": "9aa108d7-6b12-4f5e-8288-5779b9d95b5e",
            "isPricePercentage": false
          },
          "billingFrequency": "MONTHLY",
          "billingType": "IN_ARREARS",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "parameters": [
            {
              "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
              "value": "10"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Price ID",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Price belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "productId": {
            "type": "string",
            "description": "The ID of the Product for which this Price provides pricing",
            "example": "d07037d5-3e31-4c3a-a360-e58555e2bf44"
          },
          "name": {
            "type": "string",
            "description": "The customer-facing name of this Price",
            "example": "Demo Product"
          },
          "currency": {
            "description": "The pricing currency",
            "$ref": "#/components/schemas/Currency"
          },
          "structure": {
            "description": "The item pricing structure",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ONE_TIME"
              },
              {
                "$ref": "#/components/schemas/FIXED"
              },
              {
                "$ref": "#/components/schemas/LINEAR"
              },
              {
                "$ref": "#/components/schemas/PACKAGE"
              },
              {
                "$ref": "#/components/schemas/VOLUME"
              },
              {
                "$ref": "#/components/schemas/GRADUATED"
              },
              {
                "$ref": "#/components/schemas/SEAT_BASED"
              }
            ],
            "discriminator": {
              "propertyName": "pricingType"
            },
            "required": [
              "pricingType"
            ]
          },
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          },
          "parameters": {
            "type": "array",
            "description": "Parameters required for usage calculation",
            "example": [
              {
                "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                "value": "10"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PriceParameter"
            }
          }
        }
      },
      "CreatePlanRequest": {
        "required": [
          "currency",
          "eligibleCustomerIds",
          "label",
          "name",
          "priceIds"
        ],
        "type": "object",
        "example": {
          "name": "Sample plan",
          "label": "Sample plan - EU",
          "type": "REUSABLE",
          "currency": "GBP",
          "minimum": "100.00",
          "priceIds": [
            "723a5433-7771-4ce6-bd0d-2324016bd9c2",
            "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
          ],
          "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
          "eligibleCustomerIds": []
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The end-client facing name of this plan",
            "example": "Sample plan"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this plan",
            "example": "Sample plan - EU"
          },
          "type": {
            "description": "Plan type",
            "$ref": "#/components/schemas/PlanType"
          },
          "currency": {
            "description": "The plan's currency",
            "$ref": "#/components/schemas/Currency"
          },
          "minimum": {
            "type": "string",
            "description": "Minimum amount to bill",
            "example": "100.00"
          },
          "priceIds": {
            "type": "array",
            "description": "The price ids this plan includes",
            "example": [
              "723a5433-7771-4ce6-bd0d-2324016bd9c2",
              "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
            ],
            "items": {
              "type": "string"
            }
          },
          "parentId": {
            "type": "string",
            "description": "The plan id this plan was cloned from",
            "example": "10f0390c-ba18-404d-ae4e-256257eaa0fd"
          },
          "eligibleCustomerIds": {
            "type": "array",
            "description": "The customers this plan is eligible for. If empty then it's eligible for all customers",
            "example": [],
            "items": {}
          }
        }
      },
      "PlanType": {
        "type": "string",
        "example": "REUSABLE",
        "enum": [
          "CUSTOM",
          "REUSABLE"
        ]
      },
      "Plan": {
        "required": [
          "createdAt",
          "currency",
          "eligibleCustomerIds",
          "id",
          "label",
          "name",
          "prices",
          "schedulesCount",
          "sequenceAccountId",
          "status",
          "type",
          "updatedAt",
          "version",
          "versionChangeBehaviour"
        ],
        "type": "object",
        "example": {
          "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
          "name": "Sample plan",
          "label": "Sample plan - EU",
          "type": "REUSABLE",
          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
          "version": 1,
          "currency": "GBP",
          "minimum": "100.00",
          "prices": [
            {
              "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
              "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
              "name": "Demo Product",
              "currency": "GBP",
              "structure": {
                "pricingType": "LINEAR",
                "pricePerUnit": "0.25",
                "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                "isPricePercentage": false
              },
              "billingFrequency": "MONTHLY",
              "billingType": "IN_ARREARS",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z",
              "deletedAt": "2022-06-28T16:47:00Z",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ],
              "parameters": [
                {
                  "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                  "value": "10"
                }
              ]
            }
          ],
          "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
          "eligibleCustomerIds": [],
          "status": "LIVE",
          "versionEffectiveFrom": "2022-09-01",
          "versionChangeBehaviour": "IMMEDIATE",
          "createdAt": "2022-09-01T16:47:00Z",
          "updatedAt": "2022-09-01T16:47:00Z",
          "schedulesCount": 0
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Plan ID",
            "example": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471"
          },
          "name": {
            "type": "string",
            "description": "The end-client facing name of this plan",
            "example": "Sample plan"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this plan",
            "example": "Sample plan - EU"
          },
          "type": {
            "description": "Plan type",
            "$ref": "#/components/schemas/PlanType"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "c4602d51-0fb4-4b48-b689-6ba28f540d1e"
          },
          "version": {
            "type": "integer",
            "description": "The Plan's version",
            "format": "int32",
            "example": 1
          },
          "currency": {
            "description": "The Plan's currency",
            "$ref": "#/components/schemas/Currency"
          },
          "minimum": {
            "type": "string",
            "description": "Minimum amount to bill",
            "example": "100.00"
          },
          "prices": {
            "type": "array",
            "description": "The Prices this Plan includes",
            "example": [
              {
                "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                "name": "Demo Product",
                "currency": "GBP",
                "structure": {
                  "pricingType": "LINEAR",
                  "pricePerUnit": "0.25",
                  "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                  "isPricePercentage": false
                },
                "billingFrequency": "MONTHLY",
                "billingType": "IN_ARREARS",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z",
                "deletedAt": "2022-06-28T16:47:00Z",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ],
                "parameters": [
                  {
                    "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                    "value": "10"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "parentId": {
            "type": "string",
            "description": "The ID of the Plan that this one was originally cloned from",
            "example": "10f0390c-ba18-404d-ae4e-256257eaa0fd"
          },
          "eligibleCustomerIds": {
            "type": "array",
            "description": "The Customers IDs this Plan is eligible for. If empty then it's eligible for all customers.",
            "example": [],
            "items": {}
          },
          "status": {
            "description": "The status of this Plan",
            "$ref": "#/components/schemas/PlanStatus"
          },
          "versionEffectiveFrom": {
            "type": "string",
            "description": "The date and time at which this Plan version is effective",
            "format": "date",
            "example": "2022-09-01"
          },
          "versionChangeBehaviour": {
            "description": "The method by which a Plan update should propagate to Billing Schedules",
            "$ref": "#/components/schemas/PropagationMode"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-09-01T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last updated at",
            "example": "2022-09-01T16:47:00Z"
          },
          "schedulesCount": {
            "type": "integer",
            "description": "Number of schedules for the plan",
            "example": 0
          }
        }
      },
      "PlanStatus": {
        "type": "string",
        "example": "LIVE",
        "enum": [
          "DRAFT",
          "LIVE",
          "RETIRED"
        ]
      },
      "PropagationMode": {
        "type": "string",
        "example": "IMMEDIATE",
        "enum": [
          "NEVER",
          "IMMEDIATE",
          "NEXT_BILLING_DATE"
        ]
      },
      "DatabaseErrors": {
        "required": [
          "errors"
        ],
        "type": "object",
        "example": {
          "errors": [
            {
              "key": "",
              "error": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
            }
          ]
        },
        "properties": {
          "errors": {
            "type": "array",
            "example": [
              {
                "key": "",
                "error": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/DatabaseError"
            }
          }
        }
      },
      "DatabaseError": {
        "required": [
          "error",
          "key"
        ],
        "type": "object",
        "example": {
          "key": "",
          "error": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
        },
        "properties": {
          "key": {
            "type": "string",
            "example": ""
          },
          "error": {
            "type": "string",
            "example": "Invalid provided product ids: [5b035fb4-2a0f-4bbf-b61e-af6101af2d5d]"
          }
        }
      },
      "UpdatePlanRequest": {
        "required": [
          "currency",
          "eligibleCustomerIds",
          "label",
          "name",
          "priceIds"
        ],
        "type": "object",
        "example": {
          "name": "Sample plan",
          "label": "Sample plan - EU",
          "currency": "GBP",
          "minimum": "100.00",
          "priceIds": [
            "723a5433-7771-4ce6-bd0d-2324016bd9c2",
            "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
          ],
          "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
          "eligibleCustomerIds": [],
          "versionEffectiveFrom": "2025-03-14",
          "versionChangeBehaviour": "NEXT_BILLING_DATE",
          "makeVersionEffectiveFromOutset": true
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The end-client facing name of this plan",
            "example": "Sample plan"
          },
          "label": {
            "type": "string",
            "description": "The internal descriptive name of this plan",
            "example": "Sample plan - EU"
          },
          "currency": {
            "description": "The plan's currency",
            "$ref": "#/components/schemas/Currency"
          },
          "minimum": {
            "type": "string",
            "description": "Minimum amount to bill",
            "example": "100.00"
          },
          "priceIds": {
            "type": "array",
            "description": "The price ids this plan includes",
            "example": [
              "723a5433-7771-4ce6-bd0d-2324016bd9c2",
              "429c04bc-29c8-4d13-8a2e-ae8fcc583dfa"
            ],
            "items": {
              "type": "string"
            }
          },
          "parentId": {
            "type": "string",
            "description": "The plan id this plan was cloned from",
            "example": "10f0390c-ba18-404d-ae4e-256257eaa0fd"
          },
          "eligibleCustomerIds": {
            "type": "array",
            "description": "The customers this plan is eligible for. If empty then it's eligible for all customers",
            "example": [],
            "items": {}
          },
          "versionEffectiveFrom": {
            "type": "string",
            "description": "The date and time at which this Plan version is effective",
            "format": "date",
            "example": "2025-03-14"
          },
          "versionChangeBehaviour": {
            "description": "The method by which a Plan update should propagate to Billing Schedules",
            "$ref": "#/components/schemas/PropagationMode"
          },
          "makeVersionEffectiveFromOutset": {
            "type": "boolean",
            "description": "Make version effective from outset",
            "example": true
          }
        }
      },
      "ListPlansEndpointListPlansResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
              "name": "Sample plan",
              "label": "Sample plan - EU",
              "type": "REUSABLE",
              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
              "version": 1,
              "currency": "GBP",
              "minimum": "100.00",
              "prices": [
                {
                  "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                  "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                  "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                  "name": "Demo Product",
                  "currency": "GBP",
                  "structure": {
                    "pricingType": "LINEAR",
                    "pricePerUnit": "0.25",
                    "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                    "isPricePercentage": false
                  },
                  "billingFrequency": "MONTHLY",
                  "billingType": "IN_ARREARS",
                  "createdAt": "2022-06-28T16:47:00Z",
                  "updatedAt": "2022-06-28T16:47:00Z",
                  "deletedAt": "2022-06-28T16:47:00Z",
                  "externalIds": [
                    {
                      "key": "Xero",
                      "value": "123"
                    }
                  ],
                  "parameters": [
                    {
                      "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                      "value": "10"
                    }
                  ]
                }
              ],
              "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
              "eligibleCustomerIds": [],
              "status": "LIVE",
              "versionEffectiveFrom": "2022-09-01",
              "versionChangeBehaviour": "IMMEDIATE",
              "createdAt": "2022-09-01T16:47:00Z",
              "updatedAt": "2022-09-01T16:47:00Z",
              "schedulesCount": 0
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Plans",
            "example": [
              {
                "id": "fe0916b3-6a3f-4e02-abf0-dfcc6b3bc471",
                "name": "Sample plan",
                "label": "Sample plan - EU",
                "type": "REUSABLE",
                "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                "version": 1,
                "currency": "GBP",
                "minimum": "100.00",
                "prices": [
                  {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [
                      {
                        "key": "Xero",
                        "value": "123"
                      }
                    ],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                ],
                "parentId": "10f0390c-ba18-404d-ae4e-256257eaa0fd",
                "eligibleCustomerIds": [],
                "status": "LIVE",
                "versionEffectiveFrom": "2022-09-01",
                "versionChangeBehaviour": "IMMEDIATE",
                "createdAt": "2022-09-01T16:47:00Z",
                "updatedAt": "2022-09-01T16:47:00Z",
                "schedulesCount": 0
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Plan"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "CreateTimeTravellerEndpointCreateTimeTravellerRequestModel": {
        "required": [
          "billingScheduleId",
          "frozenTime"
        ],
        "type": "object",
        "example": {
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "frozenTime": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "CreateTimeTravellerEndpointProductCreateTimeTravellerResponseModel": {
        "required": [
          "billingScheduleId",
          "frozenTime",
          "id",
          "sequenceAccountId",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "updatedAt": "2022-10-07T14:12:08.826121Z",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "frozenTime": "2022-10-07T14:12:08.826121Z",
          "status": "READY"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account identifier",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The updated at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the time traveller",
            "$ref": "#/components/schemas/TimeTravellerStatus"
          }
        }
      },
      "TimeTravellerStatus": {
        "type": "string",
        "example": "READY",
        "enum": [
          "READY",
          "IN_PROGRESS"
        ]
      },
      "UpdateTimeTravellerEndpointUpdateTimeTravellerRequestModel": {
        "required": [
          "frozenTime"
        ],
        "type": "object",
        "example": {
          "frozenTime": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "UpdateTimeTravellerEndpointProductUpdateTimeTravellerResponseModel": {
        "required": [
          "billingScheduleId",
          "frozenTime",
          "id",
          "sequenceAccountId",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "updatedAt": "2022-10-07T14:12:08.826121Z",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "frozenTime": "2022-10-07T14:12:08.826121Z",
          "status": "READY"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account identifier",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The updated at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the time traveller",
            "$ref": "#/components/schemas/TimeTravellerStatus"
          }
        }
      },
      "GetTimeTravellerEndpointProductGetTimeTravellerResponseModel": {
        "required": [
          "billingScheduleId",
          "frozenTime",
          "id",
          "sequenceAccountId",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "updatedAt": "2022-10-07T14:12:08.826121Z",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "frozenTime": "2022-10-07T14:12:08.826121Z",
          "status": "READY"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account identifier",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The updated at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the time traveller",
            "$ref": "#/components/schemas/TimeTravellerStatus"
          }
        }
      },
      "ListTimeTravellerEndpointProductListTimeTravellerPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
              "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
              "createdAt": "2022-10-07T14:12:08.826121Z",
              "updatedAt": "2022-10-07T14:12:08.826121Z",
              "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
              "frozenTime": "2022-10-07T14:12:08.826121Z",
              "status": "READY"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "TimeTravellers",
            "example": [
              {
                "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
                "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                "createdAt": "2022-10-07T14:12:08.826121Z",
                "updatedAt": "2022-10-07T14:12:08.826121Z",
                "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                "frozenTime": "2022-10-07T14:12:08.826121Z",
                "status": "READY"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListTimeTravellerEndpointProductListTimeTravellerResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListTimeTravellerEndpointProductListTimeTravellerResponseModel": {
        "required": [
          "billingScheduleId",
          "frozenTime",
          "id",
          "sequenceAccountId",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "updatedAt": "2022-10-07T14:12:08.826121Z",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "frozenTime": "2022-10-07T14:12:08.826121Z",
          "status": "READY"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "d1e093d6-e3cc-4ce6-80c2-6cf8837ace36"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account identifier",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The updated at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "frozenTime": {
            "type": "string",
            "description": "The last set frozen time for the time traveller",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the time traveller",
            "$ref": "#/components/schemas/TimeTravellerStatus"
          }
        }
      },
      "CreateDiscountEndpointCreateDiscountRequestModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "discountCalculationType",
          "message",
          "priceIds",
          "separateLineItem"
        ],
        "type": "object",
        "example": {
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31"
        },
        "properties": {
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          }
        }
      },
      "DiscountCalculationType": {
        "type": "string",
        "example": "PERCENTAGE",
        "enum": [
          "PERCENTAGE",
          "NOMINAL"
        ]
      },
      "CreateDiscountEndpointProductCreateDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListDiscountEndpointProductListDiscountPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
              "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
              "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
              "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
              "priceIds": [
                "e007e884-5100-4183-8355-4771865cb4d7"
              ],
              "separateLineItem": false,
              "amount": 25,
              "discountCalculationType": "PERCENTAGE",
              "message": "Loyalty Discount",
              "validFrom": "2023-01-01",
              "validTo": "2023-01-31",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Discounts",
            "example": [
              {
                "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
                "priceIds": [
                  "e007e884-5100-4183-8355-4771865cb4d7"
                ],
                "separateLineItem": false,
                "amount": 25,
                "discountCalculationType": "PERCENTAGE",
                "message": "Loyalty Discount",
                "validFrom": "2023-01-01",
                "validTo": "2023-01-31",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListDiscountEndpointProductListDiscountResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListDiscountEndpointProductListDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListByQueryIdDiscountEndpointProductListByQueryIdDiscountPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
              "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
              "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
              "priceIds": [
                "e007e884-5100-4183-8355-4771865cb4d7"
              ],
              "separateLineItem": false,
              "amount": 25,
              "discountCalculationType": "PERCENTAGE",
              "message": "Loyalty Discount",
              "validFrom": "2023-01-01",
              "validTo": "2023-01-31",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Discounts",
            "example": [
              {
                "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
                "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
                "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                "priceIds": [
                  "e007e884-5100-4183-8355-4771865cb4d7"
                ],
                "separateLineItem": false,
                "amount": 25,
                "discountCalculationType": "PERCENTAGE",
                "message": "Loyalty Discount",
                "validFrom": "2023-01-01",
                "validTo": "2023-01-31",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListByQueryIdDiscountEndpointProductListbyqueryidDiscountResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListByQueryIdDiscountEndpointProductListbyqueryidDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "GetDiscountEndpointProductGetDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "UpdateDiscountEndpointUpdateDiscountRequestModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "discountCalculationType",
          "message",
          "priceIds",
          "separateLineItem"
        ],
        "type": "object",
        "example": {
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31"
        },
        "properties": {
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          }
        }
      },
      "UpdateDiscountEndpointProductUpdateDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "DeleteDiscountEndpointProductDeleteDiscountResponseModel": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "discountCalculationType",
          "id",
          "message",
          "priceIds",
          "separateLineItem",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "d58bf2e3-7a5d-4900-8457-2521c6880f7d",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "phaseId": "220e1878-b70a-4dfd-9c55-7651424b12d6",
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Discount ID",
            "example": "d58bf2e3-7a5d-4900-8457-2521c6880f7d"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "The Sequence Account to which this Discount belongs",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "220e1878-b70a-4dfd-9c55-7651424b12d6"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated At",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "ListByQueryIdCreditGrantEndpointProductList_by_query_idCreditGrantPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
              "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
              "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
              "name": "On-boarding Credits",
              "creditUnitType": "CURRENCY",
              "currency": "GBP",
              "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "amount": 10,
              "costOfCredit": 10,
              "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
              "effectiveDate": "2023-01-01",
              "expiryDate": "2023-01-31",
              "createdAt": "2022-10-07T14:12:08.826121Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditGrants",
            "example": [
              {
                "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                "name": "On-boarding Credits",
                "creditUnitType": "CURRENCY",
                "currency": "GBP",
                "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "amount": 10,
                "costOfCredit": 10,
                "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                "effectiveDate": "2023-01-01",
                "expiryDate": "2023-01-31",
                "createdAt": "2022-10-07T14:12:08.826121Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListByQueryIdCreditGrantEndpointProductListbyqueryidCreditGrantResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListByQueryIdCreditGrantEndpointProductListbyqueryidCreditGrantResponseModel": {
        "required": [
          "amount",
          "costOfCredit",
          "createdAt",
          "creditUnitType",
          "currency",
          "customerId",
          "id",
          "name",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "name": "On-boarding Credits",
          "creditUnitType": "CURRENCY",
          "currency": "GBP",
          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "amount": 10,
          "costOfCredit": 10,
          "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
          "effectiveDate": "2023-01-01",
          "expiryDate": "2023-01-31",
          "createdAt": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "746fc7f2-8098-4fe7-953c-7d51c580a126"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer Credit is granted to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit Grant",
            "example": "On-boarding Credits"
          },
          "creditUnitType": {
            "description": "Type of the Unit of Credit",
            "$ref": "#/components/schemas/CreditUnitType"
          },
          "currency": {
            "description": "Currency of Cash Credit (if CreditUnitType is CURRENCY)",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID (if CreditUnitType is METRIC)",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "amount": {
            "type": "number",
            "description": "Amount of Units Granted",
            "example": 10
          },
          "costOfCredit": {
            "type": "number",
            "description": "Cost of Credit Grant, to be Invoiced to the Customer",
            "example": 10
          },
          "taxRateId": {
            "type": "string",
            "description": "Tax Rate ID for Credit Purchase",
            "example": "179d1ab3-cc96-48e2-9310-067b0b42d47c"
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "CreditUnitType": {
        "type": "string",
        "example": "CURRENCY",
        "enum": [
          "CURRENCY",
          "METRIC"
        ]
      },
      "ListCreditGrantsForCustomerEndpointCreditGrantsResponse": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "22efb229-c474-407c-bbf7-f5e113ee8b20",
              "name": "API Calls",
              "grantAmount": 1000,
              "balance": 324,
              "issueDate": "2022-02-22",
              "expiryDate": "2030-03-03"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Credit Grants",
            "example": [
              {
                "id": "22efb229-c474-407c-bbf7-f5e113ee8b20",
                "name": "API Calls",
                "grantAmount": 1000,
                "balance": 324,
                "issueDate": "2022-02-22",
                "expiryDate": "2030-03-03"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListCreditGrantsForCustomerEndpointCreditGrantResponse"
            }
          }
        }
      },
      "ListCreditGrantsForCustomerEndpointCreditGrantResponse": {
        "required": [
          "balance",
          "grantAmount",
          "id",
          "issueDate",
          "name"
        ],
        "type": "object",
        "example": {
          "id": "22efb229-c474-407c-bbf7-f5e113ee8b20",
          "name": "API Calls",
          "grantAmount": 1000,
          "balance": 324,
          "issueDate": "2022-02-22",
          "expiryDate": "2030-03-03"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "22efb229-c474-407c-bbf7-f5e113ee8b20"
          },
          "name": {
            "type": "string",
            "description": "Credit Grant Name",
            "example": "API Calls"
          },
          "grantAmount": {
            "type": "number",
            "description": "Amount of Credits Granted",
            "example": 1000
          },
          "balance": {
            "type": "number",
            "description": "Amount remaining of Credits Granted",
            "example": 324
          },
          "issueDate": {
            "type": "string",
            "description": "Grant Issue Date",
            "format": "date",
            "example": "2022-02-22"
          },
          "expiryDate": {
            "type": "string",
            "description": "Grant Expiry Date",
            "format": "date",
            "example": "2030-03-03"
          }
        }
      },
      "CreditBalancesReply": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "6587e308-ab0d-4a58-8cc1-1d168490de7b",
              "type": "CASH",
              "name": "Credits",
              "balance": "50",
              "grants": [
                {
                  "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                  "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
                  "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
                  "type": "CASH",
                  "currency": "GBP",
                  "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
                  "name": "GBP",
                  "originalAmount": "10",
                  "currentBalance": "1",
                  "expiryDate": "2024-01-02",
                  "costOfCredit": "10",
                  "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
                  "effectiveDate": "2024-01-01",
                  "createdAt": "2024-01-01T12:00:00Z"
                }
              ],
              "transactions": [
                {
                  "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
                  "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                  "reason": "because",
                  "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
                  "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
                  "type": "CREDIT",
                  "amount": "10",
                  "date": "2024-01-01"
                }
              ]
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "example": [
              {
                "id": "6587e308-ab0d-4a58-8cc1-1d168490de7b",
                "type": "CASH",
                "name": "Credits",
                "balance": "50",
                "grants": [
                  {
                    "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                    "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
                    "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
                    "type": "CASH",
                    "currency": "GBP",
                    "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
                    "name": "GBP",
                    "originalAmount": "10",
                    "currentBalance": "1",
                    "expiryDate": "2024-01-02",
                    "costOfCredit": "10",
                    "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
                    "effectiveDate": "2024-01-01",
                    "createdAt": "2024-01-01T12:00:00Z"
                  }
                ],
                "transactions": [
                  {
                    "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
                    "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                    "reason": "because",
                    "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
                    "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
                    "type": "CREDIT",
                    "amount": "10",
                    "date": "2024-01-01"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditBalance"
            }
          }
        }
      },
      "CreditBalance": {
        "required": [
          "balance",
          "grants",
          "id",
          "name",
          "transactions",
          "type"
        ],
        "type": "object",
        "example": {
          "id": "6587e308-ab0d-4a58-8cc1-1d168490de7b",
          "type": "CASH",
          "name": "Credits",
          "balance": "50",
          "grants": [
            {
              "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
              "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
              "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
              "type": "CASH",
              "currency": "GBP",
              "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
              "name": "GBP",
              "originalAmount": "10",
              "currentBalance": "1",
              "expiryDate": "2024-01-02",
              "costOfCredit": "10",
              "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
              "effectiveDate": "2024-01-01",
              "createdAt": "2024-01-01T12:00:00Z"
            }
          ],
          "transactions": [
            {
              "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
              "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
              "reason": "because",
              "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
              "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
              "type": "CREDIT",
              "amount": "10",
              "date": "2024-01-01"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Indicates the ID of Credit target, either a currency code or a metric id",
            "example": "6587e308-ab0d-4a58-8cc1-1d168490de7b"
          },
          "type": {
            "description": "Type of the Credit - will either be CASH or USAGE",
            "$ref": "#/components/schemas/CreditType"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit - will either be the currency or name of the metric",
            "example": "Credits"
          },
          "balance": {
            "type": "string",
            "description": "Amount remaining of Credits Granted",
            "example": "50"
          },
          "grants": {
            "type": "array",
            "description": "Related credit grants",
            "example": [
              {
                "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
                "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
                "type": "CASH",
                "currency": "GBP",
                "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
                "name": "GBP",
                "originalAmount": "10",
                "currentBalance": "1",
                "expiryDate": "2024-01-02",
                "costOfCredit": "10",
                "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
                "effectiveDate": "2024-01-01",
                "createdAt": "2024-01-01T12:00:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditGrant"
            }
          },
          "transactions": {
            "type": "array",
            "description": "Related credit transactions",
            "example": [
              {
                "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
                "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
                "reason": "because",
                "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
                "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
                "type": "CREDIT",
                "amount": "10",
                "date": "2024-01-01"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditTransaction"
            }
          }
        }
      },
      "CreditType": {
        "type": "string",
        "example": "CASH",
        "enum": [
          "CASH",
          "USAGE"
        ]
      },
      "CreditGrant": {
        "required": [
          "costOfCredit",
          "createdAt",
          "currency",
          "currentBalance",
          "customerId",
          "id",
          "name",
          "originalAmount",
          "sequenceAccountId",
          "type"
        ],
        "type": "object",
        "example": {
          "id": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
          "sequenceAccountId": "a507e782-d26b-4d34-92b9-aacd1667e1f0",
          "customerId": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb",
          "type": "CASH",
          "currency": "GBP",
          "metricId": "b84f5290-fe95-4c6f-bedc-477700125265",
          "name": "GBP",
          "originalAmount": "10",
          "currentBalance": "1",
          "expiryDate": "2024-01-02",
          "costOfCredit": "10",
          "taxRateId": "b3c37ea3-96bb-44fb-baed-01eb38d3328e",
          "effectiveDate": "2024-01-01",
          "createdAt": "2024-01-01T12:00:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "a507e782-d26b-4d34-92b9-aacd1667e1f0"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "eabb3196-9c73-4c0d-b508-d3c4fc7b2cbb"
          },
          "type": {
            "description": "Type of the Credit - will either be CASH or USAGE",
            "$ref": "#/components/schemas/CreditType"
          },
          "currency": {
            "description": "Currency",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Usage metric ID (if type is USAGE)",
            "example": "b84f5290-fe95-4c6f-bedc-477700125265"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit - will either be the currency or name of the metric",
            "example": "GBP"
          },
          "originalAmount": {
            "type": "string",
            "description": "Amount of credits originally granted",
            "example": "10"
          },
          "currentBalance": {
            "type": "string",
            "description": "Amount remaining of Credits Granted",
            "example": "1"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2024-01-02"
          },
          "costOfCredit": {
            "type": "string",
            "description": "Cost of credit grant",
            "example": "10"
          },
          "taxRateId": {
            "type": "string",
            "description": "Tax Rate ID for Credit Purchase",
            "example": "b3c37ea3-96bb-44fb-baed-01eb38d3328e"
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2024-01-01"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2024-01-01T12:00:00Z"
          }
        }
      },
      "CreditTransaction": {
        "required": [
          "amount",
          "date",
          "grantId",
          "type"
        ],
        "type": "object",
        "example": {
          "id": "c770d296-ef09-459b-b8dd-42c334e00dab",
          "grantId": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6",
          "reason": "because",
          "invoiceId": "c6864c69-42a3-4966-8c22-1c56d7375a05",
          "billingRunId": "e95256be-08e7-4585-b3c7-fa9928aacd90",
          "type": "CREDIT",
          "amount": "10",
          "date": "2024-01-01"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Transaction ID",
            "example": "c770d296-ef09-459b-b8dd-42c334e00dab"
          },
          "grantId": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "5a0faea3-7ad5-4a83-a420-09bb6576f7e6"
          },
          "reason": {
            "type": "string",
            "description": "Transaction Reason",
            "example": "because"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID where Credit was consumed",
            "example": "c6864c69-42a3-4966-8c22-1c56d7375a05"
          },
          "billingRunId": {
            "type": "string",
            "description": "Billing Run ID where Credit was consumed",
            "example": "e95256be-08e7-4585-b3c7-fa9928aacd90"
          },
          "type": {
            "type": "string",
            "description": "Credit Transaction Type",
            "example": "CREDIT"
          },
          "amount": {
            "type": "string",
            "description": "Number of units added or consumed",
            "example": "10"
          },
          "date": {
            "type": "string",
            "description": "Date of transaction",
            "format": "date",
            "example": "2024-01-01"
          }
        }
      },
      "ListCreditGrantEndpointProductListCreditGrantPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
              "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
              "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
              "name": "On-boarding Credits",
              "creditUnitType": "CURRENCY",
              "currency": "GBP",
              "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
              "amount": 10,
              "costOfCredit": 10,
              "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
              "effectiveDate": "2023-01-01",
              "expiryDate": "2023-01-31",
              "createdAt": "2022-10-07T14:12:08.826121Z"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditGrants",
            "example": [
              {
                "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
                "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
                "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                "name": "On-boarding Credits",
                "creditUnitType": "CURRENCY",
                "currency": "GBP",
                "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
                "amount": 10,
                "costOfCredit": 10,
                "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
                "effectiveDate": "2023-01-01",
                "expiryDate": "2023-01-31",
                "createdAt": "2022-10-07T14:12:08.826121Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListCreditGrantEndpointProductListCreditGrantResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListCreditGrantEndpointProductListCreditGrantResponseModel": {
        "required": [
          "amount",
          "costOfCredit",
          "createdAt",
          "creditUnitType",
          "currency",
          "customerId",
          "id",
          "name",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "name": "On-boarding Credits",
          "creditUnitType": "CURRENCY",
          "currency": "GBP",
          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "amount": 10,
          "costOfCredit": 10,
          "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
          "effectiveDate": "2023-01-01",
          "expiryDate": "2023-01-31",
          "createdAt": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "746fc7f2-8098-4fe7-953c-7d51c580a126"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer Credit is granted to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit Grant",
            "example": "On-boarding Credits"
          },
          "creditUnitType": {
            "description": "Type of the Unit of Credit",
            "$ref": "#/components/schemas/CreditUnitType"
          },
          "currency": {
            "description": "Currency of Cash Credit (if CreditUnitType is CURRENCY)",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID (if CreditUnitType is METRIC)",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "amount": {
            "type": "number",
            "description": "Amount of Units Granted",
            "example": 10
          },
          "costOfCredit": {
            "type": "number",
            "description": "Cost of Credit Grant, to be Invoiced to the Customer",
            "example": 10
          },
          "taxRateId": {
            "type": "string",
            "description": "Tax Rate ID for Credit Purchase",
            "example": "179d1ab3-cc96-48e2-9310-067b0b42d47c"
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "CreateCreditGrantEndpointCreateCreditGrantRequestModel": {
        "required": [
          "amount",
          "creditUnitType",
          "currency",
          "customerId",
          "name",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "name": "On-boarding Credits",
          "creditUnitType": "CURRENCY",
          "currency": "GBP",
          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "amount": 10,
          "costOfCredit": 10,
          "effectiveDate": "2023-01-01",
          "expiryDate": "2023-01-31"
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer Credit is granted to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit Grant",
            "example": "On-boarding Credits"
          },
          "creditUnitType": {
            "description": "Type of the Unit of Credit",
            "$ref": "#/components/schemas/CreditUnitType"
          },
          "currency": {
            "description": "Currency of Cash Credit (if CreditUnitType is CURRENCY)",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID (if CreditUnitType is METRIC)",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "amount": {
            "type": "number",
            "description": "Amount of Units Granted",
            "example": 10
          },
          "costOfCredit": {
            "type": "number",
            "description": "Cost of Credit Grant, to be Invoiced to the Customer",
            "example": 10
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-31"
          }
        }
      },
      "CreateCreditGrantEndpointProductCreateCreditGrantResponseModel": {
        "required": [
          "amount",
          "createdAt",
          "creditUnitType",
          "customerId",
          "id",
          "name",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "name": "On-boarding Credits",
          "creditUnitType": "CURRENCY",
          "currency": "GBP",
          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "amount": 10,
          "costOfCredit": 10,
          "effectiveDate": "2023-01-01",
          "expiryDate": "2023-01-31",
          "createdAt": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "746fc7f2-8098-4fe7-953c-7d51c580a126"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer Credit is granted to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit Grant",
            "example": "On-boarding Credits"
          },
          "creditUnitType": {
            "description": "Type of the Unit of Credit",
            "$ref": "#/components/schemas/CreditUnitType"
          },
          "currency": {
            "description": "Currency of Cash Credit (if CreditUnitType is CURRENCY)",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID (if CreditUnitType is METRIC)",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "amount": {
            "type": "number",
            "description": "Amount of Units Granted",
            "example": 10
          },
          "costOfCredit": {
            "type": "number",
            "description": "Cost of Credit Grant, to be Invoiced to the Customer",
            "example": 10
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "GetCreditGrantEndpointProductGetCreditGrantResponseModel": {
        "required": [
          "amount",
          "costOfCredit",
          "createdAt",
          "creditUnitType",
          "currency",
          "customerId",
          "id",
          "name",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "746fc7f2-8098-4fe7-953c-7d51c580a126",
          "sequenceAccountId": "dce9ae85-d8d0-42b4-bcad-f221a64363c6",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "name": "On-boarding Credits",
          "creditUnitType": "CURRENCY",
          "currency": "GBP",
          "metricId": "f092246c-6b90-4106-bcca-304ccf06bf45",
          "amount": 10,
          "costOfCredit": 10,
          "taxRateId": "179d1ab3-cc96-48e2-9310-067b0b42d47c",
          "effectiveDate": "2023-01-01",
          "expiryDate": "2023-01-31",
          "createdAt": "2022-10-07T14:12:08.826121Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "746fc7f2-8098-4fe7-953c-7d51c580a126"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "dce9ae85-d8d0-42b4-bcad-f221a64363c6"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer Credit is granted to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "name": {
            "type": "string",
            "description": "Name of the Credit Grant",
            "example": "On-boarding Credits"
          },
          "creditUnitType": {
            "description": "Type of the Unit of Credit",
            "$ref": "#/components/schemas/CreditUnitType"
          },
          "currency": {
            "description": "Currency of Cash Credit (if CreditUnitType is CURRENCY)",
            "$ref": "#/components/schemas/Currency"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID (if CreditUnitType is METRIC)",
            "example": "f092246c-6b90-4106-bcca-304ccf06bf45"
          },
          "amount": {
            "type": "number",
            "description": "Amount of Units Granted",
            "example": 10
          },
          "costOfCredit": {
            "type": "number",
            "description": "Cost of Credit Grant, to be Invoiced to the Customer",
            "example": 10
          },
          "taxRateId": {
            "type": "string",
            "description": "Tax Rate ID for Credit Purchase",
            "example": "179d1ab3-cc96-48e2-9310-067b0b42d47c"
          },
          "effectiveDate": {
            "type": "string",
            "description": "First Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Last Day Credit Grant can be consumed",
            "format": "date",
            "example": "2023-01-31"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          }
        }
      },
      "CreateBillingScheduleRequestWithPrices": {
        "required": [
          "autoIssueInvoices",
          "createAsDraft",
          "customerId",
          "endDate",
          "priceIds",
          "startDate",
          "type"
        ],
        "type": "object",
        "example": {
          "type": "CUSTOM",
          "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "recurrenceDayOfMonth": 1,
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "autoIssueInvoices": false,
          "purchaseOrderNumber": "PO123",
          "discounts": [
            {
              "priceIds": [
                "e007e884-5100-4183-8355-4771865cb4d7"
              ],
              "separateLineItem": false,
              "amount": 25,
              "discountCalculationType": "PERCENTAGE",
              "message": "Loyalty Discount",
              "validFrom": "2023-01-01",
              "validTo": "2023-01-31"
            }
          ],
          "collectionPaymentProvider": "STRIPE",
          "priceIds": [
            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          ],
          "createAsDraft": false,
          "rollUpBilling": false
        },
        "properties": {
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          },
          "customerId": {
            "type": "string",
            "example": "cca32597-b6b0-4499-9669-128aef8702e4"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-01"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "taxRates": {
            "type": "array",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "example": false
          },
          "purchaseOrderNumber": {
            "type": "string",
            "example": "PO123"
          },
          "discounts": {
            "type": "array",
            "example": [
              {
                "priceIds": [
                  "e007e884-5100-4183-8355-4771865cb4d7"
                ],
                "separateLineItem": false,
                "amount": 25,
                "discountCalculationType": "PERCENTAGE",
                "message": "Loyalty Discount",
                "validFrom": "2023-01-01",
                "validTo": "2023-01-31"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreateDiscountInlineRequestModel"
            }
          },
          "collectionPaymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "priceIds": {
            "type": "array",
            "example": [
              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
            ],
            "items": {
              "type": "string"
            }
          },
          "createAsDraft": {
            "type": "boolean",
            "example": false
          },
          "rollUpBilling": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "BillingScheduleType": {
        "type": "string",
        "example": "CUSTOM",
        "enum": [
          "CUSTOM",
          "PLAN",
          "PHASES"
        ]
      },
      "ProductTaxRateRepresentation": {
        "required": [
          "priceId",
          "taxRateId"
        ],
        "type": "object",
        "example": {
          "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
        },
        "properties": {
          "priceId": {
            "type": "string",
            "description": "ID of the Price",
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          },
          "taxRateId": {
            "type": "string",
            "description": "ID of the Tax Rate",
            "example": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
          }
        }
      },
      "CreateDiscountInlineRequestModel": {
        "required": [
          "amount",
          "discountCalculationType",
          "message",
          "priceIds",
          "separateLineItem"
        ],
        "type": "object",
        "example": {
          "priceIds": [
            "e007e884-5100-4183-8355-4771865cb4d7"
          ],
          "separateLineItem": false,
          "amount": 25,
          "discountCalculationType": "PERCENTAGE",
          "message": "Loyalty Discount",
          "validFrom": "2023-01-01",
          "validTo": "2023-01-31"
        },
        "properties": {
          "priceIds": {
            "type": "array",
            "description": "Price IDs this discount applies to. If not populated, the discount applies to all prices on the billing schedule",
            "example": [
              "e007e884-5100-4183-8355-4771865cb4d7"
            ],
            "items": {
              "type": "string"
            }
          },
          "separateLineItem": {
            "type": "boolean",
            "description": "Indicates whether the discount should appear as a separate line item in the invoice",
            "example": false
          },
          "amount": {
            "type": "number",
            "description": "Amount to be reduced",
            "example": 25
          },
          "discountCalculationType": {
            "description": "Indicates whether the discount amount is percentage or nominal",
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "message": {
            "type": "string",
            "description": "Message to appear on the Invoice",
            "example": "Loyalty Discount"
          },
          "validFrom": {
            "type": "string",
            "description": "First Day Discount is Valid",
            "format": "date",
            "example": "2023-01-01"
          },
          "validTo": {
            "type": "string",
            "description": "Last Day Discount is Valid",
            "format": "date",
            "example": "2023-01-31"
          }
        }
      },
      "PaymentProvider": {
        "type": "string",
        "example": "STRIPE",
        "enum": [
          "STRIPE",
          "NONE",
          "UNRECOGNIZED"
        ]
      },
      "CreateBillingScheduleRequestWithPhases": {
        "required": [
          "autoIssueInvoices",
          "createAsDraft",
          "customerId",
          "endDate",
          "phases",
          "startDate",
          "type"
        ],
        "type": "object",
        "example": {
          "type": "PHASES",
          "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "recurrenceDayOfMonth": 1,
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "autoIssueInvoices": false,
          "purchaseOrderNumber": "PO123",
          "discounts": [
            {
              "priceIds": [
                "e007e884-5100-4183-8355-4771865cb4d7"
              ],
              "separateLineItem": false,
              "amount": 25,
              "discountCalculationType": "PERCENTAGE",
              "message": "Loyalty Discount",
              "validFrom": "2023-01-01",
              "validTo": "2023-01-31"
            }
          ],
          "collectionPaymentProvider": "STRIPE",
          "createAsDraft": false,
          "rollUpBilling": false,
          "phases": [
            {
              "priceIds": [
                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
              ],
              "startDate": "2022-01-01",
              "endDate": "2022-06-30",
              "discounts": [
                {
                  "restrictToPrices": [
                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                  ],
                  "type": "PERCENTAGE",
                  "amount": 0.08,
                  "message": "8% Discount",
                  "separateLineItem": true
                }
              ],
              "minimums": [
                {
                  "restrictToPrices": [
                    "9fe9986b-e205-42b7-a58f-42845c91f03f"
                  ],
                  "amount": 100
                }
              ]
            },
            {
              "priceIds": [
                "9fe9986b-e205-42b7-a58f-42845c91f03f"
              ],
              "startDate": "2022-07-01",
              "endDate": "2022-12-31",
              "discounts": [],
              "minimums": [
                {
                  "restrictToPrices": [
                    "9fe9986b-e205-42b7-a58f-42845c91f03f"
                  ],
                  "amount": 100
                }
              ]
            }
          ]
        },
        "properties": {
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          },
          "customerId": {
            "type": "string",
            "example": "cca32597-b6b0-4499-9669-128aef8702e4"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-01"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "taxRates": {
            "type": "array",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "example": false
          },
          "purchaseOrderNumber": {
            "type": "string",
            "example": "PO123"
          },
          "discounts": {
            "type": "array",
            "example": [
              {
                "priceIds": [
                  "e007e884-5100-4183-8355-4771865cb4d7"
                ],
                "separateLineItem": false,
                "amount": 25,
                "discountCalculationType": "PERCENTAGE",
                "message": "Loyalty Discount",
                "validFrom": "2023-01-01",
                "validTo": "2023-01-31"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreateDiscountInlineRequestModel"
            }
          },
          "collectionPaymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "createAsDraft": {
            "type": "boolean",
            "example": false
          },
          "rollUpBilling": {
            "type": "boolean",
            "example": false
          },
          "phases": {
            "type": "array",
            "example": [
              {
                "priceIds": [
                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                ],
                "startDate": "2022-01-01",
                "endDate": "2022-06-30",
                "discounts": [
                  {
                    "restrictToPrices": [
                      "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                    ],
                    "type": "PERCENTAGE",
                    "amount": 0.08,
                    "message": "8% Discount",
                    "separateLineItem": true
                  }
                ],
                "minimums": [
                  {
                    "restrictToPrices": [
                      "9fe9986b-e205-42b7-a58f-42845c91f03f"
                    ],
                    "amount": 100
                  }
                ]
              },
              {
                "priceIds": [
                  "9fe9986b-e205-42b7-a58f-42845c91f03f"
                ],
                "startDate": "2022-07-01",
                "endDate": "2022-12-31",
                "discounts": [],
                "minimums": [
                  {
                    "restrictToPrices": [
                      "9fe9986b-e205-42b7-a58f-42845c91f03f"
                    ],
                    "amount": 100
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PhaseRequest"
            }
          }
        }
      },
      "PhaseRequest": {
        "required": [
          "endDate",
          "priceIds",
          "startDate"
        ],
        "type": "object",
        "example": {
          "priceIds": [
            "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          ],
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "discounts": [],
          "minimums": []
        },
        "properties": {
          "priceIds": {
            "type": "array",
            "example": [
              "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
            ],
            "items": {
              "type": "string"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-01"
          },
          "discounts": {
            "type": "array",
            "example": [],
            "items": {}
          },
          "minimums": {
            "type": "array",
            "example": [],
            "items": {}
          }
        }
      },
      "EmbeddableDiscount": {
        "required": [
          "amount",
          "message",
          "separateLineItem",
          "type"
        ],
        "type": "object",
        "example": {
          "restrictToPrices": [
            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          ],
          "type": "PERCENTAGE",
          "amount": 0.15,
          "message": "15% Discount",
          "separateLineItem": true
        },
        "properties": {
          "restrictToPrices": {
            "type": "array",
            "example": [
              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
            ],
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/DiscountCalculationType"
          },
          "amount": {
            "type": "number",
            "example": 0.15
          },
          "message": {
            "type": "string",
            "example": "15% Discount"
          },
          "separateLineItem": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "MinimumRequest": {
        "required": [
          "amount"
        ],
        "type": "object",
        "example": {
          "restrictToPrices": [
            "9fe9986b-e205-42b7-a58f-42845c91f03f"
          ],
          "amount": 100
        },
        "properties": {
          "restrictToPrices": {
            "type": "array",
            "example": [
              "9fe9986b-e205-42b7-a58f-42845c91f03f"
            ],
            "items": {
              "type": "string"
            }
          },
          "amount": {
            "type": "number",
            "example": 100
          }
        }
      },
      "BillingScheduleResponse": {
        "required": [
          "autoIssueInvoices",
          "createdAt",
          "customerId",
          "endDate",
          "id",
          "phases",
          "priceIds",
          "prices",
          "rollUpBilling",
          "sequenceAccountId",
          "startDate",
          "status",
          "type",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
          "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
          "status": "ACTIVE",
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "firstBillingDate": "2022-02-02",
          "autoIssueInvoices": false,
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "label": "label",
          "recurrenceDayOfMonth": 1,
          "priceIds": [],
          "prices": [],
          "type": "CUSTOM",
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z",
          "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
          "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
          "phases": [
            {
              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
              "createdAt": "2022-06-28T16:47:00Z",
              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
              "priceIds": [
                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
              ],
              "startDate": "2022-01-01",
              "endDate": "2022-06-30",
              "discounts": [
                {
                  "restrictToPrices": [
                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                  ],
                  "type": "PERCENTAGE",
                  "amount": 0.15,
                  "message": "15% Discount",
                  "separateLineItem": true
                }
              ],
              "minimums": [
                {
                  "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                  "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                  "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                  "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                  "amount": 100,
                  "restrictToPrices": [
                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                  ],
                  "createdAt": "2022-06-28T16:47:00Z",
                  "updatedAt": "2022-06-28T16:47:00Z"
                }
              ]
            }
          ],
          "archivedAt": "2022-06-28T16:47:00Z",
          "rollUpBilling": true
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "c4602d51-0fb4-4b48-b689-6ba28f540d1e"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "cca32597-b6b0-4499-9669-128aef8702e4"
          },
          "status": {
            "description": "Status",
            "$ref": "#/components/schemas/GetBillingScheduleEndpointApiBillingScheduleStatus"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2022-12-01"
          },
          "taxRates": {
            "type": "array",
            "description": "Tax Rate for each Product",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "firstBillingDate": {
            "type": "string",
            "description": "First billing date",
            "format": "date",
            "example": "2022-02-02"
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "description": "Auto-issue invoices for this billing schedule",
            "example": false
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Optional purchase order number to be added to invoices",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Optional reference to be added to invoices",
            "example": "ref"
          },
          "label": {
            "type": "string",
            "description": "Optional label",
            "example": "label"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "description": "Recurrence day of month",
            "format": "int32",
            "example": 1
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs",
            "example": [],
            "items": {}
          },
          "prices": {
            "type": "array",
            "description": "Prices",
            "example": [],
            "items": {}
          },
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last updated at",
            "example": "2022-06-28T16:47:00Z"
          },
          "lastInvoiceId": {
            "type": "string",
            "description": "ID of the last invoice (if there has been one)",
            "example": "bdbf78a5-b007-4d46-aa7d-d0417a649d64"
          },
          "timeTravellerId": {
            "type": "string",
            "description": "Time traveller ID",
            "example": "43f3dad8-23b0-4141-8813-4260b86a7ebb"
          },
          "phases": {
            "type": "array",
            "description": "Phases",
            "example": [
              {
                "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                "createdAt": "2022-06-28T16:47:00Z",
                "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                "priceIds": [
                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                ],
                "startDate": "2022-01-01",
                "endDate": "2022-06-30",
                "discounts": [
                  {
                    "restrictToPrices": [
                      "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                    ],
                    "type": "PERCENTAGE",
                    "amount": 0.15,
                    "message": "15% Discount",
                    "separateLineItem": true
                  }
                ],
                "minimums": [
                  {
                    "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                    "amount": 100,
                    "restrictToPrices": [
                      "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                    ],
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Phase"
            }
          },
          "archivedAt": {
            "type": "string",
            "description": "Archived at",
            "example": "2022-06-28T16:47:00Z"
          },
          "rollUpBilling": {
            "type": "boolean",
            "description": "Roll up billing",
            "example": true
          }
        }
      },
      "GetBillingScheduleEndpointApiBillingScheduleStatus": {
        "type": "string",
        "example": "ACTIVE",
        "enum": [
          "DRAFT",
          "PENDING",
          "ACTIVE",
          "SUSPENDED",
          "CANCELLED",
          "COMPLETED"
        ]
      },
      "Phase": {
        "required": [
          "billingScheduleId",
          "createdAt",
          "discounts",
          "endDate",
          "id",
          "minimums",
          "priceIds",
          "startDate"
        ],
        "type": "object",
        "example": {
          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
          "createdAt": "2022-06-28T16:47:00Z",
          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
          "priceIds": [
            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          ],
          "startDate": "2022-01-01",
          "endDate": "2022-06-30",
          "discounts": [
            {
              "restrictToPrices": [
                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
              ],
              "type": "PERCENTAGE",
              "amount": 0.15,
              "message": "15% Discount",
              "separateLineItem": true
            }
          ],
          "minimums": [
            {
              "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
              "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
              "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
              "amount": 100,
              "restrictToPrices": [
                "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
              ],
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Phase ID",
            "example": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b"
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs",
            "example": [
              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
            ],
            "items": {
              "type": "string"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Start Date",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2022-06-30"
          },
          "discounts": {
            "type": "array",
            "description": "Discounts in Phase",
            "example": [
              {
                "restrictToPrices": [
                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                ],
                "type": "PERCENTAGE",
                "amount": 0.15,
                "message": "15% Discount",
                "separateLineItem": true
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EmbeddableDiscount"
            }
          },
          "minimums": {
            "type": "array",
            "example": [
              {
                "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                "amount": 100,
                "restrictToPrices": [
                  "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                ],
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Minimum"
            }
          }
        }
      },
      "Minimum": {
        "required": [
          "amount",
          "billingScheduleId",
          "createdAt",
          "id",
          "phaseId",
          "restrictToPrices",
          "sequenceAccountId",
          "updatedAt"
        ],
        "type": "object",
        "example": {
          "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
          "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
          "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
          "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
          "amount": 100,
          "restrictToPrices": [
            "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          ],
          "createdAt": "2022-06-28T16:47:00Z",
          "updatedAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Minimum ID",
            "example": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "c4602d51-0fb4-4b48-b689-6ba28f540d1e"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b"
          },
          "phaseId": {
            "type": "string",
            "description": "Phase ID",
            "example": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          },
          "amount": {
            "type": "number",
            "description": "Minimum amount",
            "example": 100
          },
          "restrictToPrices": {
            "type": "array",
            "description": "Price IDs the minimum is restricted to",
            "example": [
              "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
            ],
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewRequestModel": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "example": {
          "startDate": "2022-01-01T12:00:00Z",
          "endDate": "2022-03-31T12:00:00Z",
          "recurrenceDayOfMonth": 1,
          "prices": [
            {
              "billingFrequency": "QUARTERLY",
              "billingType": "IN_ADVANCE"
            },
            {
              "billingFrequency": "MONTHLY",
              "billingType": "IN_ARREARS"
            }
          ]
        },
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date",
            "example": "2022-01-01T12:00:00Z"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "example": "2022-03-31T12:00:00Z"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "description": "Recurrence day of month",
            "format": "int32",
            "example": 1
          },
          "prices": {
            "type": "array",
            "description": "The prices available in this plan",
            "example": [
              {
                "billingFrequency": "QUARTERLY",
                "billingType": "IN_ADVANCE"
              },
              {
                "billingFrequency": "MONTHLY",
                "billingType": "IN_ARREARS"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreateBillingSchedulePreviewEndpointPriceProperties"
            }
          }
        }
      },
      "CreateBillingSchedulePreviewEndpointPriceProperties": {
        "required": [
          "billingFrequency",
          "billingType"
        ],
        "type": "object",
        "example": {
          "billingFrequency": "QUARTERLY",
          "billingType": "IN_ADVANCE"
        },
        "properties": {
          "billingFrequency": {
            "description": "The recurrence of charging this price.",
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "billingType": {
            "description": "How to bill this price: in-arrears or in-advance.",
            "$ref": "#/components/schemas/BillingType"
          }
        }
      },
      "CreateBillingSchedulePreviewEndpointCreateBillingSchedulePreviewResponseModel": {
        "required": [
          "occurrences"
        ],
        "type": "object",
        "example": {
          "occurrences": [
            {
              "start": "2022-01-01",
              "end": "2022-01-31"
            },
            {
              "start": "2022-02-01",
              "end": "2022-02-28"
            },
            {
              "start": "2022-03-01",
              "end": "2022-03-31"
            }
          ]
        },
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Occurrences",
            "example": [
              {
                "start": "2022-01-01",
                "end": "2022-01-31"
              },
              {
                "start": "2022-02-01",
                "end": "2022-02-28"
              },
              {
                "start": "2022-03-01",
                "end": "2022-03-31"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreateBillingSchedulePreviewEndpointOccurrenceResponse"
            }
          }
        }
      },
      "CreateBillingSchedulePreviewEndpointOccurrenceResponse": {
        "required": [
          "end",
          "start"
        ],
        "type": "object",
        "example": {
          "start": "2022-01-01",
          "end": "2022-01-31"
        },
        "properties": {
          "start": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "end": {
            "type": "string",
            "format": "date",
            "example": "2022-01-31"
          }
        }
      },
      "BillingScheduleResponseVersion": {
        "required": [
          "autoIssueInvoices",
          "id",
          "startDate",
          "type",
          "validityPeriod",
          "version"
        ],
        "type": "object",
        "example": {
          "id": "499f5dde-9735-4f6f-9ca8-337071e562ee",
          "version": 1,
          "validityPeriod": {
            "startDate": "2022-01-01",
            "endDate": "2022-12-01"
          },
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "firstBillingDate": "2022-02-02",
          "autoIssueInvoices": false,
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "label": "label",
          "recurrenceDayOfMonth": 1,
          "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
          "type": "PLAN"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Version ID",
            "example": "499f5dde-9735-4f6f-9ca8-337071e562ee"
          },
          "version": {
            "type": "integer",
            "description": "Version number",
            "format": "int64",
            "example": 1
          },
          "validityPeriod": {
            "description": "Validity period",
            "$ref": "#/components/schemas/DateRange"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2022-12-01"
          },
          "taxRates": {
            "type": "array",
            "description": "Tax Rate for each Product",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "firstBillingDate": {
            "type": "string",
            "description": "First billing date",
            "format": "date",
            "example": "2022-02-02"
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "description": "Auto-issue invoices for this billing schedule",
            "example": false
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Optional purchase order number to be added to invoices",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Optional reference to be added to invoices",
            "example": "ref"
          },
          "label": {
            "type": "string",
            "description": "Optional label",
            "example": "label"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "description": "Recurrence day of month",
            "format": "int32",
            "example": 1
          },
          "planId": {
            "type": "string",
            "description": "Plan ID",
            "example": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
          },
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          }
        }
      },
      "DateRange": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "example": {
          "startDate": "2023-01-01",
          "endDate": "2023-01-31"
        },
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2023-01-31"
          }
        }
      },
      "ListBillingSchedulesEndpointListBillingSchedulesResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
              "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
              "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
              "status": "ACTIVE",
              "startDate": "2022-01-01",
              "endDate": "2022-12-01",
              "taxRates": [
                {
                  "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                  "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                }
              ],
              "firstBillingDate": "2022-02-02",
              "autoIssueInvoices": false,
              "purchaseOrderNumber": "PO123",
              "reference": "ref",
              "label": "label",
              "recurrenceDayOfMonth": 1,
              "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
              "priceIds": [
                "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
              ],
              "prices": [
                {
                  "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                  "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                  "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                  "name": "Demo Product",
                  "currency": "GBP",
                  "structure": {
                    "pricingType": "LINEAR",
                    "pricePerUnit": "0.25",
                    "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                    "isPricePercentage": false
                  },
                  "billingFrequency": "MONTHLY",
                  "billingType": "IN_ARREARS",
                  "createdAt": "2022-06-28T16:47:00Z",
                  "updatedAt": "2022-06-28T16:47:00Z",
                  "deletedAt": "2022-06-28T16:47:00Z",
                  "externalIds": [],
                  "parameters": [
                    {
                      "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                      "value": "10"
                    }
                  ]
                }
              ],
              "type": "PLAN",
              "createdAt": "2022-06-28T16:47:00Z",
              "updatedAt": "2022-06-28T16:47:00Z",
              "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
              "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
              "phases": [
                {
                  "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                  "createdAt": "2022-06-28T16:47:00Z",
                  "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                  "priceIds": [
                    "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                  ],
                  "startDate": "2022-01-01",
                  "endDate": "2022-06-30",
                  "discounts": [
                    {
                      "restrictToPrices": [
                        "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                      ],
                      "type": "PERCENTAGE",
                      "amount": 0.15,
                      "message": "15% Discount",
                      "separateLineItem": true
                    }
                  ],
                  "minimums": [
                    {
                      "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                      "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                      "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                      "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                      "amount": 100,
                      "restrictToPrices": [
                        "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                      ],
                      "createdAt": "2022-06-28T16:47:00Z",
                      "updatedAt": "2022-06-28T16:47:00Z"
                    }
                  ]
                }
              ],
              "archivedAt": "2022-06-28T16:47:00Z",
              "rollUpBilling": false
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Billing Schedules",
            "example": [
              {
                "id": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                "customerId": "cca32597-b6b0-4499-9669-128aef8702e4",
                "status": "ACTIVE",
                "startDate": "2022-01-01",
                "endDate": "2022-12-01",
                "taxRates": [
                  {
                    "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
                  }
                ],
                "firstBillingDate": "2022-02-02",
                "autoIssueInvoices": false,
                "purchaseOrderNumber": "PO123",
                "reference": "ref",
                "label": "label",
                "recurrenceDayOfMonth": 1,
                "planId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                "priceIds": [
                  "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                ],
                "prices": [
                  {
                    "id": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                    "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                    "productId": "f409d651-c475-4142-aafd-a5d2bd74d4f9",
                    "name": "Demo Product",
                    "currency": "GBP",
                    "structure": {
                      "pricingType": "LINEAR",
                      "pricePerUnit": "0.25",
                      "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
                      "isPricePercentage": false
                    },
                    "billingFrequency": "MONTHLY",
                    "billingType": "IN_ARREARS",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "updatedAt": "2022-06-28T16:47:00Z",
                    "deletedAt": "2022-06-28T16:47:00Z",
                    "externalIds": [],
                    "parameters": [
                      {
                        "parameterId": "94703530-1293-479b-bd37-ccad42fd9c8b",
                        "value": "10"
                      }
                    ]
                  }
                ],
                "type": "PLAN",
                "createdAt": "2022-06-28T16:47:00Z",
                "updatedAt": "2022-06-28T16:47:00Z",
                "lastInvoiceId": "bdbf78a5-b007-4d46-aa7d-d0417a649d64",
                "timeTravellerId": "43f3dad8-23b0-4141-8813-4260b86a7ebb",
                "phases": [
                  {
                    "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                    "createdAt": "2022-06-28T16:47:00Z",
                    "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                    "priceIds": [
                      "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                    ],
                    "startDate": "2022-01-01",
                    "endDate": "2022-06-30",
                    "discounts": [
                      {
                        "restrictToPrices": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "type": "PERCENTAGE",
                        "amount": 0.15,
                        "message": "15% Discount",
                        "separateLineItem": true
                      }
                    ],
                    "minimums": [
                      {
                        "id": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "sequenceAccountId": "c4602d51-0fb4-4b48-b689-6ba28f540d1e",
                        "billingScheduleId": "b102e007-f5d7-4b1a-8a1d-9a51135ae73b",
                        "phaseId": "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8",
                        "amount": 100,
                        "restrictToPrices": [
                          "6dc54805-0ac8-4f17-9341-4d3f2db9dcd8"
                        ],
                        "createdAt": "2022-06-28T16:47:00Z",
                        "updatedAt": "2022-06-28T16:47:00Z"
                      }
                    ]
                  }
                ],
                "archivedAt": "2022-06-28T16:47:00Z",
                "rollUpBilling": false
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillingScheduleResponse"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "UpdateBillingScheduleRequestWithPrices": {
        "required": [
          "autoIssueInvoices",
          "endDate",
          "startDate",
          "type"
        ],
        "type": "object",
        "example": {
          "type": "CUSTOM",
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "recurrenceDayOfMonth": 1,
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "autoIssueInvoices": true,
          "purchaseOrderNumber": "PO123",
          "effectiveFrom": "2023-01-01",
          "rollUpBilling": false,
          "priceIds": [
            "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
          ]
        },
        "properties": {
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-01"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "taxRates": {
            "type": "array",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "example": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "example": "PO123"
          },
          "effectiveFrom": {
            "type": "string",
            "format": "date",
            "example": "2023-01-01"
          },
          "rollUpBilling": {
            "type": "boolean",
            "example": false
          },
          "priceIds": {
            "type": "array",
            "description": "Price IDs",
            "example": [
              "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateBillingScheduleRequestWithPhases": {
        "required": [
          "autoIssueInvoices",
          "endDate",
          "phases",
          "startDate",
          "type"
        ],
        "type": "object",
        "example": {
          "type": "CUSTOM",
          "startDate": "2022-01-01",
          "endDate": "2022-12-01",
          "recurrenceDayOfMonth": 1,
          "taxRates": [
            {
              "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
              "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
            }
          ],
          "autoIssueInvoices": true,
          "purchaseOrderNumber": "PO123",
          "rollUpBilling": false,
          "phases": [
            {
              "priceIds": [
                "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
              ],
              "startDate": "2022-01-01",
              "endDate": "2022-12-01",
              "discounts": [],
              "minimums": []
            }
          ]
        },
        "properties": {
          "type": {
            "description": "Billing schedule type",
            "$ref": "#/components/schemas/BillingScheduleType"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-01"
          },
          "recurrenceDayOfMonth": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "taxRates": {
            "type": "array",
            "example": [
              {
                "priceId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
                "taxRateId": "50c0d53b-8460-41e6-b4e9-a4e157fc1a64"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProductTaxRateRepresentation"
            }
          },
          "autoIssueInvoices": {
            "type": "boolean",
            "example": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "example": "PO123"
          },
          "rollUpBilling": {
            "type": "boolean",
            "example": false
          },
          "phases": {
            "type": "array",
            "example": [
              {
                "priceIds": [
                  "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730"
                ],
                "startDate": "2022-01-01",
                "endDate": "2022-12-01",
                "discounts": [],
                "minimums": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PhaseRequest"
            }
          }
        }
      },
      "ListUsageMetricsForBillingScheduleEndpointResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "27ba4761-7573-41c5-b780-2993b2c254f7",
              "name": "Coffee",
              "eventType": "coffee",
              "aggregationProperty": "Cost",
              "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
              "aggregationType": "COUNT"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Usage metrics",
            "example": [
              {
                "id": "27ba4761-7573-41c5-b780-2993b2c254f7",
                "name": "Coffee",
                "eventType": "coffee",
                "aggregationProperty": "Cost",
                "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
                "aggregationType": "COUNT"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListUsageMetricsForBillingScheduleEndpointUsageMetric"
            }
          }
        }
      },
      "ListUsageMetricsForBillingScheduleEndpointUsageMetric": {
        "required": [
          "aggregationType",
          "eventType",
          "id",
          "name",
          "priceId"
        ],
        "type": "object",
        "example": {
          "id": "27ba4761-7573-41c5-b780-2993b2c254f7",
          "name": "Coffee",
          "eventType": "coffee",
          "aggregationProperty": "Cost",
          "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
          "aggregationType": "COUNT"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "example": "27ba4761-7573-41c5-b780-2993b2c254f7"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "example": "Coffee"
          },
          "eventType": {
            "type": "string",
            "description": "Event type",
            "example": "coffee"
          },
          "aggregationProperty": {
            "type": "string",
            "description": "Aggregation property",
            "example": "Cost"
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "030a64dd-1d89-46a3-8043-580befdb011d"
          },
          "aggregationType": {
            "description": "Aggregation type",
            "$ref": "#/components/schemas/AggregationType1"
          }
        }
      },
      "AggregationType1": {
        "type": "string",
        "example": "COUNT",
        "enum": [
          "COUNT",
          "UNIQUE",
          "SUM",
          "CUSTOM"
        ]
      },
      "GetUsageDataForBillingScheduleEndpointRequestModel": {
        "required": [
          "customerAliases",
          "customerId",
          "eventType",
          "metricId",
          "priceId",
          "usagePeriodType"
        ],
        "type": "object",
        "example": {
          "usagePeriodType": "CURRENT",
          "eventType": "event",
          "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
          "priceId": "030a64dd-1d89-46a3-8043-580befdb011d",
          "customerAliases": [
            "alias"
          ],
          "customerId": "cf747d34-9497-42a8-8b28-d65523fbbadf"
        },
        "properties": {
          "usagePeriodType": {
            "$ref": "#/components/schemas/UsagePeriodType"
          },
          "eventType": {
            "type": "string",
            "example": "event"
          },
          "metricId": {
            "type": "string",
            "example": "27ba4761-7573-41c5-b780-2993b2c254f7"
          },
          "priceId": {
            "type": "string",
            "example": "030a64dd-1d89-46a3-8043-580befdb011d"
          },
          "customerAliases": {
            "type": "array",
            "example": [
              "alias"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerId": {
            "type": "string",
            "example": "cf747d34-9497-42a8-8b28-d65523fbbadf"
          }
        }
      },
      "UsagePeriodType": {
        "type": "string",
        "example": "CURRENT",
        "enum": [
          "CURRENT",
          "LAST",
          "LAST_THREE",
          "ALL"
        ]
      },
      "OptionalUsageDataResponse1": {
        "type": "object",
        "example": {
          "data": {
            "usageStart": "2023-02-01",
            "usageEnd": "2023-04-30",
            "metricName": "API Calls",
            "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
            "total": "35",
            "usageData": [
              {
                "periodStart": "2023-02-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2023-03-01",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2023-04-01",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ]
          }
        },
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UsageDataResponse1"
          }
        }
      },
      "UsageDataResponse1": {
        "required": [
          "metricId",
          "metricName",
          "total",
          "usageData",
          "usageEnd",
          "usageStart"
        ],
        "type": "object",
        "example": {
          "usageStart": "2023-02-01",
          "usageEnd": "2023-04-30",
          "metricName": "API Calls",
          "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
          "total": "35",
          "usageData": [
            {
              "periodStart": "2023-02-01",
              "amount": "10",
              "cumulativeAmount": "10"
            },
            {
              "periodStart": "2023-03-01",
              "amount": "15",
              "cumulativeAmount": "25"
            },
            {
              "periodStart": "2023-04-01",
              "amount": "10",
              "cumulativeAmount": "35"
            }
          ]
        },
        "properties": {
          "usageStart": {
            "type": "string",
            "description": "Usage start",
            "format": "date",
            "example": "2023-02-01"
          },
          "usageEnd": {
            "type": "string",
            "description": "Usage end",
            "format": "date",
            "example": "2023-04-30"
          },
          "metricName": {
            "type": "string",
            "description": "Metric name",
            "example": "API Calls"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID",
            "example": "27ba4761-7573-41c5-b780-2993b2c254f7"
          },
          "total": {
            "type": "string",
            "description": "Total for provided usage periods",
            "example": "35"
          },
          "usageData": {
            "type": "array",
            "description": "Usage data",
            "example": [
              {
                "periodStart": "2023-02-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2023-03-01",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2023-04-01",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageData1"
            }
          }
        }
      },
      "UsageData1": {
        "required": [
          "amount",
          "cumulativeAmount",
          "periodStart"
        ],
        "type": "object",
        "example": {
          "periodStart": "2023-02-01",
          "amount": "10",
          "cumulativeAmount": "10"
        },
        "properties": {
          "periodStart": {
            "type": "string",
            "description": "Usage period start",
            "format": "date",
            "example": "2023-02-01"
          },
          "amount": {
            "type": "string",
            "description": "Usage amount",
            "example": "10"
          },
          "cumulativeAmount": {
            "type": "string",
            "description": "Cumulative usage amount (summing all previous data points)",
            "example": "10"
          }
        }
      },
      "GetBillingRunEndpointProductGetBillingRunResponseModel": {
        "required": [
          "billingEndDate",
          "billingScheduleId",
          "billingStartDate",
          "createdAt",
          "id",
          "scheduledRunTime",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "status": "SCHEDULED",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
          "intendedDraftingDate": "2023-01-01",
          "billingStartDate": "2023-01-01",
          "billingEndDate": "2023-01-31",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique billing run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the billing run",
            "$ref": "#/components/schemas/BillingRunStatus"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "scheduledRunTime": {
            "type": "string",
            "description": "Scheduled run time",
            "example": "2023-02-01T12:00:00.000001Z"
          },
          "intendedDraftingDate": {
            "type": "string",
            "description": "Intended drafting date",
            "format": "date",
            "example": "2023-01-01"
          },
          "billingStartDate": {
            "type": "string",
            "description": "Billing start date",
            "format": "date",
            "example": "2023-01-01"
          },
          "billingEndDate": {
            "type": "string",
            "description": "Billing end date",
            "format": "date",
            "example": "2023-01-31"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID created by the run",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          }
        }
      },
      "BillingRunStatus": {
        "type": "string",
        "example": "SCHEDULED",
        "enum": [
          "SCHEDULED",
          "COMPLETED",
          "FAILED",
          "DEPRECATED",
          "IN_PROGRESS"
        ]
      },
      "ListBillingRunEndpointProductListBillingRunPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "53ff21c8-4872-46c4-83bf-517d54876945",
              "createdAt": "2022-10-07T14:12:08.826121Z",
              "status": "SCHEDULED",
              "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
              "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
              "intendedDraftingDate": "2023-01-01",
              "billingStartDate": "2023-01-01",
              "billingEndDate": "2023-01-31",
              "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "BillingRuns",
            "example": [
              {
                "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                "createdAt": "2022-10-07T14:12:08.826121Z",
                "status": "SCHEDULED",
                "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                "intendedDraftingDate": "2023-01-01",
                "billingStartDate": "2023-01-01",
                "billingEndDate": "2023-01-31",
                "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListBillingRunEndpointProductListBillingRunResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListBillingRunEndpointProductListBillingRunResponseModel": {
        "required": [
          "billingEndDate",
          "billingScheduleId",
          "billingStartDate",
          "createdAt",
          "id",
          "scheduledRunTime",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "status": "SCHEDULED",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
          "intendedDraftingDate": "2023-01-01",
          "billingStartDate": "2023-01-01",
          "billingEndDate": "2023-01-31",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique billing run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the billing run",
            "$ref": "#/components/schemas/BillingRunStatus"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "scheduledRunTime": {
            "type": "string",
            "description": "Scheduled run time",
            "example": "2023-02-01T12:00:00.000001Z"
          },
          "intendedDraftingDate": {
            "type": "string",
            "description": "Intended drafting date",
            "format": "date",
            "example": "2023-01-01"
          },
          "billingStartDate": {
            "type": "string",
            "description": "Billing start date",
            "format": "date",
            "example": "2023-01-01"
          },
          "billingEndDate": {
            "type": "string",
            "description": "Billing end date",
            "format": "date",
            "example": "2023-01-31"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID created by the run",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          }
        }
      },
      "BillingRunPageResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "53ff21c8-4872-46c4-83bf-517d54876945",
              "createdAt": "2022-10-07T14:12:08.826121Z",
              "status": "SCHEDULED",
              "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
              "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
              "billingStartDate": "2023-01-01",
              "billingEndDate": "2023-01-31",
              "intendedDraftingDate": "2023-02-01",
              "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "BillingRuns",
            "example": [
              {
                "id": "53ff21c8-4872-46c4-83bf-517d54876945",
                "createdAt": "2022-10-07T14:12:08.826121Z",
                "status": "SCHEDULED",
                "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
                "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
                "billingStartDate": "2023-01-01",
                "billingEndDate": "2023-01-31",
                "intendedDraftingDate": "2023-02-01",
                "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillingRunResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "BillingRunResponseModel": {
        "required": [
          "billingEndDate",
          "billingScheduleId",
          "billingStartDate",
          "createdAt",
          "id",
          "scheduledRunTime",
          "status"
        ],
        "type": "object",
        "example": {
          "id": "53ff21c8-4872-46c4-83bf-517d54876945",
          "createdAt": "2022-10-07T14:12:08.826121Z",
          "status": "SCHEDULED",
          "billingScheduleId": "08a76ddb-230e-4700-a5e2-70f6edaf7d50",
          "scheduledRunTime": "2023-02-01T12:00:00.000001Z",
          "billingStartDate": "2023-01-01",
          "billingEndDate": "2023-01-31",
          "intendedDraftingDate": "2023-02-01",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique billing run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "createdAt": {
            "type": "string",
            "description": "The created at",
            "example": "2022-10-07T14:12:08.826121Z"
          },
          "status": {
            "description": "The status of the billing run",
            "$ref": "#/components/schemas/BillingRunStatus"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule identifier",
            "example": "08a76ddb-230e-4700-a5e2-70f6edaf7d50"
          },
          "scheduledRunTime": {
            "type": "string",
            "description": "Scheduled run time",
            "example": "2023-02-01T12:00:00.000001Z"
          },
          "billingStartDate": {
            "type": "string",
            "description": "Billing start date",
            "format": "date",
            "example": "2023-01-01"
          },
          "billingEndDate": {
            "type": "string",
            "description": "Billing end date",
            "format": "date",
            "example": "2023-01-31"
          },
          "intendedDraftingDate": {
            "type": "string",
            "description": "Intended end date",
            "format": "date",
            "example": "2023-02-01"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID created by the run",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          }
        }
      },
      "CurrentPeriodInvoicePreviewEndpointResponseModel": {
        "required": [
          "accountingDate",
          "billingPeriod",
          "currency",
          "customer",
          "lineItemGroups",
          "lineItems",
          "paymentOptions"
        ],
        "type": "object",
        "example": {
          "currency": "GBP",
          "purchaseOrderNumber": "PO123",
          "customer": {
            "id": "cca32597-b6b0-4499-9669-128aef8702e4",
            "taxId": "123"
          },
          "billingPeriod": {
            "startDate": "2023-01-01",
            "endDate": "2023-01-31"
          },
          "lineItems": [
            {
              "title": "Some random value",
              "description": "",
              "quantity": 10,
              "rate": "100",
              "taxRate": "0",
              "servicePeriodStart": "2023-01-01",
              "servicePeriodEnd": "2023-01-31",
              "priceId": "e007e884-5100-4183-8355-4771865cb4d7",
              "rateDisplay": "ABSOLUTE",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ]
            }
          ],
          "lineItemGroups": [],
          "memo": "memo",
          "accountingDate": "2023-01-31",
          "paymentOptions": [
            "BANK_TRANSFER"
          ]
        },
        "properties": {
          "currency": {
            "description": "Currency",
            "$ref": "#/components/schemas/Currency"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase Order Number",
            "example": "PO123"
          },
          "customer": {
            "description": "Customer",
            "$ref": "#/components/schemas/CurrentPeriodInvoicePreviewEndpointCustomer"
          },
          "billingPeriod": {
            "description": "Billing Period",
            "$ref": "#/components/schemas/DateRange"
          },
          "lineItems": {
            "type": "array",
            "description": "The line items",
            "example": [
              {
                "title": "Some random value",
                "description": "",
                "quantity": 10,
                "rate": "100",
                "taxRate": "0",
                "servicePeriodStart": "2023-01-01",
                "servicePeriodEnd": "2023-01-31",
                "priceId": "e007e884-5100-4183-8355-4771865cb4d7",
                "rateDisplay": "ABSOLUTE",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CurrentPeriodInvoicePreviewEndpointLineItem"
            }
          },
          "lineItemGroups": {
            "type": "array",
            "description": "The line item groups",
            "example": [],
            "items": {}
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "example": "memo"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting Date",
            "format": "date",
            "example": "2023-01-31"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Payment Options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          }
        }
      },
      "CurrentPeriodInvoicePreviewEndpointCustomer": {
        "required": [
          "id"
        ],
        "type": "object",
        "example": {
          "id": "cca32597-b6b0-4499-9669-128aef8702e4",
          "taxId": "123"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Customer ID",
            "example": "cca32597-b6b0-4499-9669-128aef8702e4"
          },
          "taxId": {
            "type": "string",
            "description": "Customer Tax ID",
            "example": "123"
          }
        }
      },
      "CurrentPeriodInvoicePreviewEndpointLineItem": {
        "required": [
          "externalIds",
          "quantity",
          "rate",
          "taxRate",
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Some random value",
          "description": "",
          "quantity": 10,
          "rate": "100",
          "taxRate": "0",
          "servicePeriodStart": "2023-01-01",
          "servicePeriodEnd": "2023-01-31",
          "priceId": "e007e884-5100-4183-8355-4771865cb4d7",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Some random value"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": ""
          },
          "quantity": {
            "type": "number",
            "description": "Quantity",
            "example": 10
          },
          "rate": {
            "type": "string",
            "description": "Price per Item",
            "example": "100"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0"
          },
          "servicePeriodStart": {
            "type": "string",
            "description": "Start of the service period (the time period in which the service was provided)",
            "format": "date",
            "example": "2023-01-01"
          },
          "servicePeriodEnd": {
            "type": "string",
            "description": "End of the service period (the time period in which the service was provided)",
            "format": "date",
            "example": "2023-01-31"
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "e007e884-5100-4183-8355-4771865cb4d7"
          },
          "rateDisplay": {
            "description": "Rate Display",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier1"
            }
          }
        }
      },
      "RateDisplay": {
        "type": "string",
        "example": "ABSOLUTE",
        "enum": [
          "ABSOLUTE",
          "PERCENTAGE"
        ]
      },
      "InvoicePaymentOption": {
        "type": "string",
        "example": "BANK_TRANSFER",
        "enum": [
          "BANK_TRANSFER",
          "LINK"
        ]
      },
      "GetTotalCustomersResponseModel": {
        "required": [
          "numCustomersNeverBilled",
          "numCustomersNoLongerBilled",
          "numCustomersWithActiveSchedule",
          "total"
        ],
        "type": "object",
        "example": {
          "total": 4,
          "numCustomersWithActiveSchedule": 2,
          "numCustomersNoLongerBilled": 1,
          "numCustomersNeverBilled": 1
        },
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of customers",
            "example": 4
          },
          "numCustomersWithActiveSchedule": {
            "type": "integer",
            "description": "Number of customers with an active billing schedule",
            "example": 2
          },
          "numCustomersNoLongerBilled": {
            "type": "integer",
            "description": "Number of customers who are no longer billed",
            "example": 1
          },
          "numCustomersNeverBilled": {
            "type": "integer",
            "description": "Number of customers who have never been billed",
            "example": 1
          }
        }
      },
      "ONE_TIME": {
        "properties": {
          "price": {
            "example": "150.00",
            "description": "Fixed price charged only on the first billing cycle",
            "type": "string"
          },
          "pricingType": {
            "enum": [
              "ONE_TIME"
            ],
            "example": "ONE_TIME",
            "type": "string"
          }
        },
        "example": {
          "price": "150.00",
          "pricingType": "ONE_TIME"
        },
        "type": "object",
        "required": [
          "price",
          "pricingType"
        ]
      },
      "FIXED": {
        "properties": {
          "price": {
            "example": "20.00",
            "description": "Fixed price charged on each billing cycle",
            "type": "string"
          },
          "pricingType": {
            "enum": [
              "FIXED"
            ],
            "example": "FIXED",
            "type": "string"
          }
        },
        "example": {
          "price": "20.00",
          "pricingType": "FIXED"
        },
        "type": "object",
        "required": [
          "price",
          "pricingType"
        ]
      },
      "LINEAR": {
        "properties": {
          "pricePerUnit": {
            "example": "0.25",
            "description": "Price charged per unit of usage of a product",
            "type": "string"
          },
          "usageMetricId": {
            "example": "04c62961-04ba-48e6-b985-758bb7d3e712",
            "description": "Usage metric associated to this pricing structure",
            "type": "string"
          },
          "isPricePercentage": {
            "example": false,
            "description": "Indicates whether the Price is represented as absolute value or a percentage",
            "type": "boolean"
          },
          "pricingType": {
            "enum": [
              "LINEAR"
            ],
            "example": "LINEAR",
            "type": "string"
          }
        },
        "example": {
          "pricePerUnit": "0.25",
          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
          "isPricePercentage": false,
          "pricingType": "LINEAR"
        },
        "type": "object",
        "required": [
          "isPricePercentage",
          "pricePerUnit",
          "pricingType",
          "usageMetricId"
        ]
      },
      "PACKAGE": {
        "properties": {
          "packageSize": {
            "example": "50",
            "description": "The amount of usage allowed for the price in this structure",
            "type": "string"
          },
          "pricePerPackage": {
            "example": "2.00",
            "description": "The price charged for each package",
            "type": "string"
          },
          "usageMetricId": {
            "example": "04c62961-04ba-48e6-b985-758bb7d3e712",
            "description": "The usage metric associated to this tier",
            "type": "string"
          },
          "pricingType": {
            "enum": [
              "PACKAGE"
            ],
            "example": "PACKAGE",
            "type": "string"
          }
        },
        "example": {
          "packageSize": "50",
          "pricePerPackage": "2.00",
          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
          "pricingType": "PACKAGE"
        },
        "type": "object",
        "required": [
          "packageSize",
          "pricePerPackage",
          "pricingType",
          "usageMetricId"
        ]
      },
      "VOLUME": {
        "properties": {
          "tiers": {
            "items": {
              "$ref": "#/components/schemas/UsageTier"
            },
            "example": [
              {
                "upperBound": "100",
                "price": "1.00",
                "fee": "50.00",
                "isPricePercentage": false
              },
              {
                "price": "0.75",
                "fee": "25.00",
                "isPricePercentage": false
              }
            ],
            "description": "A list of contiguous pricing tiers",
            "type": "array"
          },
          "usageMetricId": {
            "example": "04c62961-04ba-48e6-b985-758bb7d3e712",
            "description": "The usage metric associated to this tier",
            "type": "string"
          },
          "pricingType": {
            "enum": [
              "VOLUME"
            ],
            "example": "VOLUME",
            "type": "string"
          }
        },
        "example": {
          "tiers": [
            {
              "upperBound": "100",
              "price": "1.00",
              "fee": "50.00",
              "isPricePercentage": false
            },
            {
              "price": "0.75",
              "fee": "25.00",
              "isPricePercentage": false
            }
          ],
          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
          "pricingType": "VOLUME"
        },
        "type": "object",
        "required": [
          "pricingType",
          "tiers",
          "usageMetricId"
        ]
      },
      "UsageTier": {
        "properties": {
          "upperBound": {
            "example": "100",
            "description": "The upper bound of usage for this tier. Set to null to if this is a final tier and is unbounded. The lower bound is set by the previous tier or 0 if it's the first one.",
            "type": "string"
          },
          "price": {
            "example": "1.00",
            "description": "The price charged either just for volume at this tier",
            "type": "string"
          },
          "fee": {
            "example": "50.00",
            "description": "The nominal fee associated with usage at this tier",
            "type": "string"
          },
          "isPricePercentage": {
            "example": false,
            "description": "Indicates whether the Price is represented as absolute value or a percentage",
            "type": "boolean"
          }
        },
        "example": {
          "upperBound": "100",
          "price": "1.00",
          "fee": "50.00",
          "isPricePercentage": false
        },
        "type": "object",
        "required": [
          "isPricePercentage",
          "price"
        ]
      },
      "GRADUATED": {
        "properties": {
          "tiers": {
            "items": {
              "$ref": "#/components/schemas/UsageTier"
            },
            "example": [
              {
                "upperBound": "200",
                "price": "1.00",
                "fee": "50.00",
                "isPricePercentage": false
              },
              {
                "upperBound": "400",
                "price": "0.75",
                "fee": "25.00",
                "isPricePercentage": false
              },
              {
                "price": "0.50",
                "fee": "0.00",
                "isPricePercentage": false
              }
            ],
            "description": "A list of contiguous pricing tiers",
            "type": "array"
          },
          "usageMetricId": {
            "example": "04c62961-04ba-48e6-b985-758bb7d3e712",
            "description": "The usage metric associated to this pricing structure",
            "type": "string"
          },
          "usageCalculationMode": {
            "$ref": "#/components/schemas/UsageCalculationMode",
            "description": "Indicates the scope of usage calculation"
          },
          "pricingType": {
            "enum": [
              "GRADUATED"
            ],
            "example": "GRADUATED",
            "type": "string"
          }
        },
        "example": {
          "tiers": [
            {
              "upperBound": "200",
              "price": "1.00",
              "fee": "50.00",
              "isPricePercentage": false
            },
            {
              "upperBound": "400",
              "price": "0.75",
              "fee": "25.00",
              "isPricePercentage": false
            },
            {
              "price": "0.50",
              "fee": "0.00",
              "isPricePercentage": false
            }
          ],
          "usageMetricId": "04c62961-04ba-48e6-b985-758bb7d3e712",
          "usageCalculationMode": "BILLING_PERIOD",
          "pricingType": "GRADUATED"
        },
        "type": "object",
        "required": [
          "pricingType",
          "tiers",
          "usageCalculationMode",
          "usageMetricId"
        ]
      },
      "UsageCalculationMode": {
        "example": "BILLING_PERIOD",
        "enum": [
          "BILLING_PERIOD",
          "CUMULATIVE"
        ],
        "type": "string"
      },
      "SEAT_BASED": {
        "properties": {
          "seatTypeId": {
            "example": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
            "description": "The identity of the seat",
            "type": "string"
          },
          "pricePerSeat": {
            "example": "0.25",
            "description": "Price charged per seat per full billing period",
            "type": "string"
          },
          "prorationStrategy": {
            "$ref": "#/components/schemas/SeatProrationStrategy",
            "description": "The proration strategy to use when calculating the price for a seat"
          },
          "includedSeats": {
            "example": 10,
            "description": "The number of seats included in the price",
            "type": "integer"
          },
          "chargeMethod": {
            "$ref": "#/components/schemas/SeatChargeMethod",
            "description": "The charge method to apply to calculated seat usage"
          },
          "overagesBillingFrequency": {
            "$ref": "#/components/schemas/BillingFrequency",
            "description": "The frequency with which to charge overages"
          },
          "tiers": {
            "items": {},
            "example": [],
            "description": "A list of contiguous pricing tiers",
            "type": "array"
          },
          "pricingType": {
            "enum": [
              "SEAT_BASED"
            ],
            "example": "SEAT_BASED",
            "type": "string"
          }
        },
        "example": {
          "seatTypeId": "bc61d4b8-e9d6-4f4a-9bcf-f5dae874c730",
          "pricePerSeat": "0.25",
          "prorationStrategy": "USE_FIRST",
          "includedSeats": 10,
          "chargeMethod": "CHARGE_CONSUMED",
          "overagesBillingFrequency": "YEARLY",
          "tiers": [],
          "pricingType": "SEAT_BASED"
        },
        "type": "object",
        "required": [
          "chargeMethod",
          "includedSeats",
          "pricePerSeat",
          "pricingType",
          "prorationStrategy",
          "seatTypeId",
          "tiers"
        ]
      },
      "SeatProrationStrategy": {
        "example": "USE_FIRST",
        "enum": [
          "USE_FIRST",
          "USE_MAXIMUM",
          "PRORATE_INCREMENTS",
          "PRORATE_ALL_CHANGES"
        ],
        "type": "string"
      },
      "SeatChargeMethod": {
        "example": "CHARGE_CONSUMED",
        "enum": [
          "CHARGE_FIXED",
          "CHARGE_OVERAGES",
          "CHARGE_CONSUMED",
          "CHARGE_MINIMUM"
        ],
        "type": "string"
      },
      "InvoiceMerchantDetails": {
        "required": [
          "address",
          "customFields",
          "email",
          "includeBeneficiaryAddressInPaymentDetails",
          "legalCompanyName"
        ],
        "type": "object",
        "example": {
          "address": {
            "line1": "The White House",
            "line2": "1600 Pennsylvania Avenue",
            "town": "Washington, D.C.",
            "state": "CA",
            "postcode": "20500",
            "country": "US"
          },
          "phoneNumber": "0800001066",
          "email": "donald@example.com",
          "taxId": "TAX60",
          "iban": "GB33BUKB20201555555555",
          "ukAccountDetails": {
            "sortCode": "000000",
            "accountNumber": "12345678"
          },
          "usAchDetails": {
            "accountNumber": "12345678",
            "accountName": "John Doe",
            "bankName": "Chase",
            "bankRoutingNumber": "123456789"
          },
          "usWireDetails": {
            "accountNumber": "12345678",
            "accountName": "John Doe",
            "bankName": "Chase",
            "bankRoutingNumber": "123456789",
            "swiftCode": "CHASUS33",
            "bankAddress": {
              "line1": "JP Morgan Chase",
              "town": "New York City",
              "state": "NY",
              "postcode": "10017",
              "country": "US"
            }
          },
          "caBankAccountDetails": {
            "transitNumber": "123",
            "institutionNumber": "12345",
            "accountNumber": "1234567"
          },
          "canadianInternationalDestination": {
            "legalName": "John Doe",
            "accountNumber": "12345678",
            "transitNumber": "12345",
            "bankName": "Chase",
            "bankAddress": {
              "line1": "JP Morgan Chase",
              "town": "New York City",
              "state": "NY",
              "postcode": "10017",
              "country": "US"
            },
            "institutionNumber": "123",
            "swiftCode": "CHASUS33",
            "intermediaryBank": {
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "swiftCode": "CHASUS33",
              "routingNumber": "123456789"
            }
          },
          "logoUrl": "logo",
          "legalCompanyName": "The Merchant",
          "primaryColour": "#000000",
          "customFields": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "includeBeneficiaryAddressInPaymentDetails": true
        },
        "properties": {
          "address": {
            "description": "Merchant's address",
            "$ref": "#/components/schemas/Address1"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Merchant's phone number",
            "example": "0800001066"
          },
          "email": {
            "type": "string",
            "description": "Merchant's email",
            "example": "donald@example.com"
          },
          "taxId": {
            "type": "string",
            "description": "Merchant's tax ID",
            "example": "TAX60"
          },
          "iban": {
            "type": "string",
            "description": "Merchant's IBAN, for receiving payment by bank transfer",
            "example": "GB33BUKB20201555555555"
          },
          "ukAccountDetails": {
            "description": "Merchant's UK bank account details, for receiving payment by UK bank transfer",
            "$ref": "#/components/schemas/SortCodeAccountNumber"
          },
          "usAchDetails": {
            "description": "Merchant's US account details, for receiving payment by ACH",
            "$ref": "#/components/schemas/UsAchDestination"
          },
          "usWireDetails": {
            "description": "Merchant's US account details, for receiving payment by wire transfer",
            "$ref": "#/components/schemas/UsWireDestination"
          },
          "caBankAccountDetails": {
            "description": "Merchant's Canadian account details, for receiving payment by Canadian bank transfer",
            "$ref": "#/components/schemas/CanadianBankAccountDestination"
          },
          "canadianInternationalDestination": {
            "description": "Merchant's account details, for receiving payment to a Canadian bank via Wire transfer",
            "$ref": "#/components/schemas/CanadianInternationalDestination"
          },
          "logoUrl": {
            "type": "string",
            "description": "Merchant's logo image URL",
            "example": "logo"
          },
          "legalCompanyName": {
            "type": "string",
            "description": "Merchant's legal company name",
            "example": "The Merchant"
          },
          "primaryColour": {
            "type": "string",
            "description": "Merchant's primary colour (for invoice rendering)",
            "example": "#000000"
          },
          "customFields": {
            "type": "array",
            "description": "merchantCustomFields",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "includeBeneficiaryAddressInPaymentDetails": {
            "type": "boolean",
            "description": "Include beneficiary address in payment details on invoice",
            "example": true
          }
        }
      },
      "Address1": {
        "required": [
          "country",
          "line1",
          "postcode",
          "town"
        ],
        "type": "object",
        "example": {
          "line1": "Flat 1",
          "line2": "15 Yemen Road",
          "town": "Yemen",
          "state": "CA",
          "postcode": "YE1 2YE",
          "country": "YE"
        },
        "properties": {
          "line1": {
            "type": "string",
            "description": "Address line 1",
            "example": "Flat 1"
          },
          "line2": {
            "type": "string",
            "description": "Address line 2",
            "example": "15 Yemen Road"
          },
          "town": {
            "type": "string",
            "description": "Town or city",
            "example": "Yemen"
          },
          "state": {
            "description": "State (required for USA only)",
            "$ref": "#/components/schemas/State"
          },
          "postcode": {
            "type": "string",
            "description": "Postal code",
            "example": "YE1 2YE"
          },
          "country": {
            "description": "Country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes))",
            "$ref": "#/components/schemas/CountryCode2"
          }
        }
      },
      "CountryCode2": {
        "type": "string",
        "example": "YE",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "SortCodeAccountNumber": {
        "required": [
          "accountNumber",
          "sortCode"
        ],
        "type": "object",
        "example": {
          "sortCode": "000000",
          "accountNumber": "12345678"
        },
        "properties": {
          "sortCode": {
            "type": "string",
            "description": "UK sort code. 6 digits.",
            "example": "000000"
          },
          "accountNumber": {
            "type": "string",
            "description": "UK account number. 8 digits.",
            "example": "12345678"
          }
        }
      },
      "UsAchDestination": {
        "required": [
          "accountName",
          "accountNumber",
          "bankName",
          "bankRoutingNumber"
        ],
        "type": "object",
        "example": {
          "accountNumber": "12345678",
          "accountName": "John Doe",
          "bankName": "Chase",
          "bankRoutingNumber": "123456789"
        },
        "properties": {
          "accountNumber": {
            "type": "string",
            "example": "12345678"
          },
          "accountName": {
            "type": "string",
            "example": "John Doe"
          },
          "bankName": {
            "type": "string",
            "example": "Chase"
          },
          "bankRoutingNumber": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "UsWireDestination": {
        "required": [
          "accountName",
          "accountNumber",
          "bankAddress",
          "bankName",
          "bankRoutingNumber",
          "swiftCode"
        ],
        "type": "object",
        "example": {
          "accountNumber": "12345678",
          "accountName": "John Doe",
          "bankName": "Chase",
          "bankRoutingNumber": "123456789",
          "swiftCode": "CHASUS33",
          "bankAddress": {
            "line1": "JP Morgan Chase",
            "town": "New York City",
            "state": "NY",
            "postcode": "10017",
            "country": "US"
          }
        },
        "properties": {
          "accountNumber": {
            "type": "string",
            "example": "12345678"
          },
          "accountName": {
            "type": "string",
            "example": "John Doe"
          },
          "bankName": {
            "type": "string",
            "example": "Chase"
          },
          "bankRoutingNumber": {
            "type": "string",
            "example": "123456789"
          },
          "swiftCode": {
            "type": "string",
            "example": "CHASUS33"
          },
          "bankAddress": {
            "$ref": "#/components/schemas/Address1"
          }
        }
      },
      "Merchant": {
        "required": [
          "address",
          "bankAccountDetails",
          "creditNoteNumberPrefix",
          "customerPortalEnabled",
          "defaultDueDateDays",
          "email",
          "id",
          "includeBeneficiaryAddressInPaymentDetails",
          "invoiceNumberPrefix",
          "lastCreditNoteNumber",
          "lastInvoiceNumber",
          "legalCompanyName",
          "manualNumbering",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "8252c275-80ce-4845-abe7-027f5b2daa8c",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "invoiceNumberPrefix": "SEQ",
          "creditNoteNumberPrefix": "SCN",
          "legalCompanyName": "The Merchant",
          "address": {
            "line1": "Flat 1",
            "line2": "123 Fake Street",
            "town": "New York",
            "state": "NY",
            "postcode": "AB1 2EF",
            "country": "US"
          },
          "phoneNumber": "0800001066",
          "email": "donald@example.com",
          "defaultDueDateDays": 30,
          "lastInvoiceNumber": 1,
          "lastCreditNoteNumber": 0,
          "bankAccountDetails": [
            {
              "key": "GBP",
              "value": {
                "type": "UK_BANK_ACCOUNT",
                "iban": "GB33BUKB20201555555555",
                "ukBankAccount": {
                  "sortCode": "123456",
                  "accountNumber": "12345678"
                },
                "usAchDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789"
                },
                "usWireDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  }
                },
                "canadianBankAccount": {
                  "transitNumber": "12345",
                  "institutionNumber": "123",
                  "accountNumber": "1234567"
                },
                "canadianInternationalDestination": {
                  "legalName": "John Doe",
                  "accountNumber": "12345678",
                  "transitNumber": "12345",
                  "bankName": "Chase",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  },
                  "institutionNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "intermediaryBank": {
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "swiftCode": "CHASUS33",
                    "routingNumber": "123456789"
                  }
                }
              }
            },
            {
              "key": "EUR",
              "value": {
                "type": "IBAN",
                "iban": "GB33BUKB20201555555555"
              }
            }
          ],
          "manualNumbering": false,
          "customerPortalEnabled": true,
          "includeBeneficiaryAddressInPaymentDetails": false
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier",
            "example": "8252c275-80ce-4845-abe7-027f5b2daa8c"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "invoiceNumberPrefix": {
            "type": "string",
            "description": "Invoice number format",
            "example": "SEQ"
          },
          "creditNoteNumberPrefix": {
            "type": "string",
            "description": "Credit Note number format",
            "example": "SCN"
          },
          "legalCompanyName": {
            "type": "string",
            "description": "Legal company name",
            "example": "The Merchant"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address1"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "example": "0800001066"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "donald@example.com"
          },
          "defaultDueDateDays": {
            "type": "integer",
            "description": "Default number of days between invoice issue date and due date",
            "example": 30
          },
          "lastInvoiceNumber": {
            "type": "integer",
            "description": "Number of last invoice created",
            "example": 1
          },
          "lastCreditNoteNumber": {
            "type": "integer",
            "description": "Number of last credit note created",
            "example": 0
          },
          "bankAccountDetails": {
            "type": "array",
            "description": "Bank account details",
            "example": [
              {
                "key": "GBP",
                "value": {
                  "type": "UK_BANK_ACCOUNT",
                  "iban": "GB33BUKB20201555555555",
                  "ukBankAccount": {
                    "sortCode": "123456",
                    "accountNumber": "12345678"
                  },
                  "usAchDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789"
                  },
                  "usWireDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    }
                  },
                  "canadianBankAccount": {
                    "transitNumber": "12345",
                    "institutionNumber": "123",
                    "accountNumber": "1234567"
                  },
                  "canadianInternationalDestination": {
                    "legalName": "John Doe",
                    "accountNumber": "12345678",
                    "transitNumber": "12345",
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "institutionNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "intermediaryBank": {
                      "bankName": "Chase",
                      "bankAddress": {
                        "line1": "JP Morgan Chase",
                        "town": "New York City",
                        "state": "NY",
                        "postcode": "10017",
                        "country": "US"
                      },
                      "swiftCode": "CHASUS33",
                      "routingNumber": "123456789"
                    }
                  }
                }
              },
              {
                "key": "EUR",
                "value": {
                  "type": "IBAN",
                  "iban": "GB33BUKB20201555555555"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MerchantKeyValuePair"
            }
          },
          "manualNumbering": {
            "type": "boolean",
            "description": "True if invoices and credit notes should be manually numbered",
            "example": false
          },
          "customerPortalEnabled": {
            "type": "boolean",
            "description": "End-customer portal enabled",
            "example": true
          },
          "includeBeneficiaryAddressInPaymentDetails": {
            "type": "boolean",
            "description": "Include beneficiary address in payment details",
            "example": false
          }
        }
      },
      "MerchantKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "GBP",
          "value": {
            "type": "IBAN",
            "iban": "GB33BUKB20201555555555",
            "ukBankAccount": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDestination": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDestination": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "canadianBankAccount": {
              "transitNumber": "12345",
              "institutionNumber": "123",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            }
          }
        },
        "properties": {
          "key": {
            "$ref": "#/components/schemas/Currency"
          },
          "value": {
            "$ref": "#/components/schemas/BankPaymentDestinations"
          }
        }
      },
      "BankPaymentDestinations": {
        "required": [
          "type"
        ],
        "type": "object",
        "example": {
          "type": "IBAN",
          "iban": "GB33BUKB20201555555555",
          "ukBankAccount": {
            "sortCode": "000000",
            "accountNumber": "12345678"
          },
          "usAchDestination": {
            "accountNumber": "12345678",
            "accountName": "John Doe",
            "bankName": "Chase",
            "bankRoutingNumber": "123456789"
          },
          "usWireDestination": {
            "accountNumber": "12345678",
            "accountName": "John Doe",
            "bankName": "Chase",
            "bankRoutingNumber": "123456789",
            "swiftCode": "CHASUS33",
            "bankAddress": {
              "line1": "JP Morgan Chase",
              "town": "New York City",
              "state": "NY",
              "postcode": "10017",
              "country": "US"
            }
          },
          "canadianBankAccount": {
            "transitNumber": "12345",
            "institutionNumber": "123",
            "accountNumber": "1234567"
          },
          "canadianInternationalDestination": {
            "legalName": "John Doe",
            "accountNumber": "12345678",
            "transitNumber": "12345",
            "bankName": "Chase",
            "bankAddress": {
              "line1": "JP Morgan Chase",
              "town": "New York City",
              "state": "NY",
              "postcode": "10017",
              "country": "US"
            },
            "institutionNumber": "123",
            "swiftCode": "CHASUS33",
            "intermediaryBank": {
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "swiftCode": "CHASUS33",
              "routingNumber": "123456789"
            }
          }
        },
        "properties": {
          "type": {
            "description": "The type of the account details",
            "$ref": "#/components/schemas/BankPaymentDestinationType"
          },
          "iban": {
            "type": "string",
            "description": "IBAN (International Bank Account Number).",
            "example": "GB33BUKB20201555555555"
          },
          "ukBankAccount": {
            "description": "UK bank account details.",
            "$ref": "#/components/schemas/SortCodeAccountNumber"
          },
          "usAchDestination": {
            "description": "US Automated Clearing House (ACH) Payment Details",
            "$ref": "#/components/schemas/UsAchDestination"
          },
          "usWireDestination": {
            "description": "US Wire Payment Details",
            "$ref": "#/components/schemas/UsWireDestination"
          },
          "canadianBankAccount": {
            "description": "Canadian bank account details.",
            "$ref": "#/components/schemas/CanadianBankAccountDestination"
          },
          "canadianInternationalDestination": {
            "description": "Canadian USD Wire account details.",
            "$ref": "#/components/schemas/CanadianInternationalDestination"
          }
        }
      },
      "BankPaymentDestinationType": {
        "type": "string",
        "example": "IBAN",
        "enum": [
          "IBAN",
          "UK_BANK_ACCOUNT",
          "US_ACH",
          "US_WIRE",
          "CA_BANK_ACCOUNT",
          "CA_INTERNATIONAL"
        ]
      },
      "CanadianBankAccountDestination": {
        "required": [
          "accountNumber",
          "institutionNumber",
          "transitNumber"
        ],
        "type": "object",
        "example": {
          "transitNumber": "123",
          "institutionNumber": "12345",
          "accountNumber": "1234567"
        },
        "properties": {
          "transitNumber": {
            "type": "string",
            "example": "123"
          },
          "institutionNumber": {
            "type": "string",
            "example": "12345"
          },
          "accountNumber": {
            "type": "string",
            "example": "1234567"
          }
        }
      },
      "CanadianInternationalDestination": {
        "required": [
          "accountNumber",
          "bankAddress",
          "bankName",
          "institutionNumber",
          "legalName",
          "swiftCode",
          "transitNumber"
        ],
        "type": "object",
        "example": {
          "legalName": "John Doe",
          "accountNumber": "12345678",
          "transitNumber": "12345",
          "bankName": "Chase",
          "bankAddress": {
            "line1": "JP Morgan Chase",
            "town": "New York City",
            "state": "NY",
            "postcode": "10017",
            "country": "US"
          },
          "institutionNumber": "123",
          "swiftCode": "CHASUS33",
          "intermediaryBank": {
            "bankName": "Chase",
            "bankAddress": {
              "line1": "JP Morgan Chase",
              "town": "New York City",
              "state": "NY",
              "postcode": "10017",
              "country": "US"
            },
            "swiftCode": "CHASUS33",
            "routingNumber": "123456789"
          }
        },
        "properties": {
          "legalName": {
            "type": "string",
            "example": "John Doe"
          },
          "accountNumber": {
            "type": "string",
            "example": "12345678"
          },
          "transitNumber": {
            "type": "string",
            "example": "12345"
          },
          "bankName": {
            "type": "string",
            "example": "Chase"
          },
          "bankAddress": {
            "$ref": "#/components/schemas/Address1"
          },
          "institutionNumber": {
            "type": "string",
            "example": "123"
          },
          "swiftCode": {
            "type": "string",
            "example": "CHASUS33"
          },
          "intermediaryBank": {
            "$ref": "#/components/schemas/IntermediaryBank"
          }
        }
      },
      "IntermediaryBank": {
        "required": [
          "bankAddress",
          "bankName",
          "routingNumber",
          "swiftCode"
        ],
        "type": "object",
        "example": {
          "bankName": "Chase",
          "bankAddress": {
            "line1": "JP Morgan Chase",
            "town": "New York City",
            "state": "NY",
            "postcode": "10017",
            "country": "US"
          },
          "swiftCode": "CHASUS33",
          "routingNumber": "123456789"
        },
        "properties": {
          "bankName": {
            "type": "string",
            "example": "Chase"
          },
          "bankAddress": {
            "$ref": "#/components/schemas/Address1"
          },
          "swiftCode": {
            "type": "string",
            "example": "CHASUS33"
          },
          "routingNumber": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "UpdateMerchantEndpointUpdateMerchantRequestModel": {
        "required": [
          "address",
          "bankAccountDetails",
          "email",
          "legalCompanyName"
        ],
        "type": "object",
        "example": {
          "invoiceNumberPrefix": "SEQ",
          "creditNoteNumberPrefix": "SCN",
          "legalCompanyName": "The company",
          "address": {
            "line1": "15 The Shire",
            "line2": "Shire Lane",
            "town": "Hobbiton",
            "state": "CA",
            "postcode": "HO123",
            "country": "US"
          },
          "phoneNumber": "01234567890",
          "email": "merchant@example.com",
          "defaultDueDateDays": 30,
          "bankAccountDetails": [
            {
              "key": "GBP",
              "value": {
                "type": "IBAN",
                "iban": "GB33BUKB20201555555555",
                "ukBankAccount": {
                  "sortCode": "000000",
                  "accountNumber": "12345678"
                },
                "usAchDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789"
                },
                "usWireDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  }
                },
                "canadianBankAccount": {
                  "transitNumber": "12345",
                  "institutionNumber": "123",
                  "accountNumber": "1234567"
                },
                "canadianInternationalDestination": {
                  "legalName": "John Doe",
                  "accountNumber": "12345678",
                  "transitNumber": "12345",
                  "bankName": "Chase",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  },
                  "institutionNumber": "123",
                  "swiftCode": "CHASUS33",
                  "intermediaryBank": {
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "swiftCode": "CHASUS33",
                    "routingNumber": "123456789"
                  }
                }
              }
            }
          ],
          "appUrl": "www.sequencehq.com",
          "customerPortalEnabled": true,
          "includeBeneficiaryAddressInPaymentDetails": true
        },
        "properties": {
          "invoiceNumberPrefix": {
            "type": "string",
            "description": "Invoice number format",
            "example": "SEQ"
          },
          "creditNoteNumberPrefix": {
            "type": "string",
            "description": "Credit Note number format",
            "example": "SCN"
          },
          "legalCompanyName": {
            "type": "string",
            "description": "Legal company name",
            "example": "The company"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address1"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "example": "01234567890"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "merchant@example.com"
          },
          "defaultDueDateDays": {
            "type": "integer",
            "description": "Default number of days between invoice issue date and due date",
            "example": 30
          },
          "bankAccountDetails": {
            "type": "array",
            "description": "Bank account details",
            "example": [
              {
                "key": "GBP",
                "value": {
                  "type": "IBAN",
                  "iban": "GB33BUKB20201555555555",
                  "ukBankAccount": {
                    "sortCode": "000000",
                    "accountNumber": "12345678"
                  },
                  "usAchDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789"
                  },
                  "usWireDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    }
                  },
                  "canadianBankAccount": {
                    "transitNumber": "12345",
                    "institutionNumber": "123",
                    "accountNumber": "1234567"
                  },
                  "canadianInternationalDestination": {
                    "legalName": "John Doe",
                    "accountNumber": "12345678",
                    "transitNumber": "12345",
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "institutionNumber": "123",
                    "swiftCode": "CHASUS33",
                    "intermediaryBank": {
                      "bankName": "Chase",
                      "bankAddress": {
                        "line1": "JP Morgan Chase",
                        "town": "New York City",
                        "state": "NY",
                        "postcode": "10017",
                        "country": "US"
                      },
                      "swiftCode": "CHASUS33",
                      "routingNumber": "123456789"
                    }
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MerchantKeyValuePair"
            }
          },
          "appUrl": {
            "type": "string",
            "description": "App url",
            "example": "www.sequencehq.com"
          },
          "customerPortalEnabled": {
            "type": "boolean",
            "description": "End-customer portal enabled",
            "example": true
          },
          "includeBeneficiaryAddressInPaymentDetails": {
            "type": "boolean",
            "description": "Include beneficiary address in payment details",
            "example": true
          }
        }
      },
      "UpdateMerchantEndpointProductUpdateMerchantResponseModel": {
        "required": [
          "address",
          "bankAccountDetails",
          "creditNoteNumberPrefix",
          "customerPortalEnabled",
          "defaultDueDateDays",
          "email",
          "id",
          "includeBeneficiaryAddressInPaymentDetails",
          "invoiceNumberPrefix",
          "lastCreditNoteNumber",
          "lastInvoiceNumber",
          "legalCompanyName",
          "manualNumbering",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "466e6610-dc7f-4d0c-a304-089ea473e1e3",
          "sequenceAccountId": "683fe518-60c8-429f-9320-8aa7efc20bcc",
          "invoiceNumberPrefix": "SEQ",
          "creditNoteNumberPrefix": "SCN",
          "legalCompanyName": "The company",
          "address": {
            "line1": "15 The Shire",
            "line2": "Shire Lane",
            "town": "Hobbiton",
            "state": "CA",
            "postcode": "HO123",
            "country": "US"
          },
          "phoneNumber": "01234567890",
          "email": "merchant@example.com",
          "defaultDueDateDays": 30,
          "lastInvoiceNumber": 0,
          "lastCreditNoteNumber": 0,
          "bankAccountDetails": [
            {
              "key": "GBP",
              "value": {
                "type": "IBAN",
                "iban": "GB33BUKB20201555555555",
                "ukBankAccount": {
                  "sortCode": "000000",
                  "accountNumber": "12345678"
                },
                "usAchDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789"
                },
                "usWireDestination": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  }
                },
                "canadianBankAccount": {
                  "transitNumber": "12345",
                  "institutionNumber": "123",
                  "accountNumber": "1234567"
                },
                "canadianInternationalDestination": {
                  "legalName": "John Doe",
                  "accountNumber": "12345678",
                  "transitNumber": "12345",
                  "bankName": "Chase",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  },
                  "institutionNumber": "123",
                  "swiftCode": "CHASUS33",
                  "intermediaryBank": {
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "swiftCode": "CHASUS33",
                    "routingNumber": "123456789"
                  }
                }
              }
            }
          ],
          "manualNumbering": true,
          "appUrl": "www.sequencehq.com",
          "customerPortalEnabled": true,
          "includeBeneficiaryAddressInPaymentDetails": true
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier",
            "example": "466e6610-dc7f-4d0c-a304-089ea473e1e3"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "683fe518-60c8-429f-9320-8aa7efc20bcc"
          },
          "invoiceNumberPrefix": {
            "type": "string",
            "description": "Invoice number format",
            "example": "SEQ"
          },
          "creditNoteNumberPrefix": {
            "type": "string",
            "description": "Credit Note number format",
            "example": "SCN"
          },
          "legalCompanyName": {
            "type": "string",
            "description": "Legal company name",
            "example": "The company"
          },
          "address": {
            "description": "Address",
            "$ref": "#/components/schemas/Address1"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "example": "01234567890"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "merchant@example.com"
          },
          "defaultDueDateDays": {
            "type": "integer",
            "description": "Default number of days between invoice issue date and due date",
            "example": 30
          },
          "lastInvoiceNumber": {
            "type": "integer",
            "description": "Number of last invoice created",
            "example": 0
          },
          "lastCreditNoteNumber": {
            "type": "integer",
            "description": "Number of last credit note created",
            "example": 0
          },
          "bankAccountDetails": {
            "type": "array",
            "description": "Bank account details",
            "example": [
              {
                "key": "GBP",
                "value": {
                  "type": "IBAN",
                  "iban": "GB33BUKB20201555555555",
                  "ukBankAccount": {
                    "sortCode": "000000",
                    "accountNumber": "12345678"
                  },
                  "usAchDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789"
                  },
                  "usWireDestination": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    }
                  },
                  "canadianBankAccount": {
                    "transitNumber": "12345",
                    "institutionNumber": "123",
                    "accountNumber": "1234567"
                  },
                  "canadianInternationalDestination": {
                    "legalName": "John Doe",
                    "accountNumber": "12345678",
                    "transitNumber": "12345",
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "institutionNumber": "123",
                    "swiftCode": "CHASUS33",
                    "intermediaryBank": {
                      "bankName": "Chase",
                      "bankAddress": {
                        "line1": "JP Morgan Chase",
                        "town": "New York City",
                        "state": "NY",
                        "postcode": "10017",
                        "country": "US"
                      },
                      "swiftCode": "CHASUS33",
                      "routingNumber": "123456789"
                    }
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MerchantKeyValuePair"
            }
          },
          "manualNumbering": {
            "type": "boolean",
            "description": "True if invoices and credit notes should be manually numbered",
            "example": true
          },
          "appUrl": {
            "type": "string",
            "description": "App url",
            "example": "www.sequencehq.com"
          },
          "customerPortalEnabled": {
            "type": "boolean",
            "description": "End-customer portal enabled",
            "example": true
          },
          "includeBeneficiaryAddressInPaymentDetails": {
            "type": "boolean",
            "description": "Include beneficiary address in payment details",
            "example": true
          }
        }
      },
      "CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsRequest": {
        "required": [
          "lineItems"
        ],
        "type": "object",
        "example": {
          "lineItems": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "2",
              "rate": "20000.10",
              "taxRate": "0.2",
              "servicePeriodStart": "2022-10-20T00:00:00Z",
              "servicePeriodEnd": "2022-10-24T00:00:00Z",
              "servicePeriod": {
                "startDate": "2022-10-20",
                "endDate": "2022-10-24"
              },
              "index": 2,
              "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
              "netTotal": "40000.20",
              "totalTax": "8000.04",
              "grossTotal": "48000.24",
              "rateDisplay": "ABSOLUTE",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ],
              "revenueClassification": "EARNED"
            }
          ]
        },
        "properties": {
          "lineItems": {
            "type": "array",
            "description": "Line Items",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "2",
                "rate": "20000.10",
                "taxRate": "0.2",
                "servicePeriodStart": "2022-10-20T00:00:00Z",
                "servicePeriodEnd": "2022-10-24T00:00:00Z",
                "servicePeriod": {
                  "startDate": "2022-10-20",
                  "endDate": "2022-10-24"
                },
                "index": 2,
                "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                "netTotal": "40000.20",
                "totalTax": "8000.04",
                "grossTotal": "48000.24",
                "rateDisplay": "ABSOLUTE",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ],
                "revenueClassification": "EARNED"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LineItemResponseModel"
            }
          }
        }
      },
      "LineItemResponseModel": {
        "required": [
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "servicePeriodStart": "2022-10-20T00:00:00Z",
          "servicePeriodEnd": "2022-10-24T00:00:00Z",
          "servicePeriod": {
            "startDate": "2022-10-20",
            "endDate": "2022-10-24"
          },
          "index": 2,
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23",
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ],
          "revenueClassification": "EARNED",
          "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Price per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "servicePeriodStart": {
            "type": "string",
            "description": "Start of the service period (the time period in which the service was provided)",
            "example": "2022-10-20T00:00:00Z"
          },
          "servicePeriodEnd": {
            "type": "string",
            "description": "End of the service period (the time period in which the service was provided)",
            "example": "2022-10-24T00:00:00Z"
          },
          "servicePeriod": {
            "description": "Service Period",
            "$ref": "#/components/schemas/DateRange1"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "groupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          },
          "revenueClassification": {
            "description": "Revenue classification",
            "$ref": "#/components/schemas/RevenueClassification"
          },
          "creditGrantId": {
            "type": "string",
            "description": "Credit Grant ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          }
        }
      },
      "DateRange1": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "example": {
          "startDate": "2022-10-20",
          "endDate": "2022-10-24"
        },
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-10-20"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-10-24"
          }
        }
      },
      "IntegrationExternalIdentifier2": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "Xero",
          "value": "123"
        },
        "properties": {
          "key": {
            "$ref": "#/components/schemas/IntegrationService"
          },
          "value": {
            "type": "string",
            "example": "123"
          }
        }
      },
      "RevenueClassification": {
        "type": "string",
        "example": "EARNED",
        "enum": [
          "PREPAYMENT",
          "EARNED",
          "BURNDOWN"
        ]
      },
      "CalculateInvoiceTotalsEndpointCalculateInvoiceTotalsResponse": {
        "required": [
          "lineItemGroupTotals",
          "lineItemTotals",
          "total"
        ],
        "type": "object",
        "example": {
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          },
          "lineItemTotals": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "total": {
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            }
          ],
          "lineItemGroupTotals": [
            {
              "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "total": {
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            }
          ]
        },
        "properties": {
          "total": {
            "description": "Invoice total",
            "$ref": "#/components/schemas/Total"
          },
          "lineItemTotals": {
            "type": "array",
            "description": "Line Item totals",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "total": {
                  "netTotal": "200000",
                  "totalTax": "10",
                  "grossTotal": "22000"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CalculateInvoiceTotalsEndpointLineItemTotal"
            }
          },
          "lineItemGroupTotals": {
            "type": "array",
            "description": "Line Item Group totals",
            "example": [
              {
                "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "total": {
                  "netTotal": "200000",
                  "totalTax": "10",
                  "grossTotal": "22000"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CalculateInvoiceTotalsEndpointLineItemGroupTotal"
            }
          }
        }
      },
      "Total": {
        "required": [
          "grossTotal",
          "netTotal",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "netTotal": "200000",
          "totalTax": "10",
          "grossTotal": "22000"
        },
        "properties": {
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "200000"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "10"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "22000"
          }
        }
      },
      "CalculateInvoiceTotalsEndpointLineItemTotal": {
        "required": [
          "id",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item id",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "total": {
            "description": "Total",
            "$ref": "#/components/schemas/Total"
          }
        }
      },
      "CalculateInvoiceTotalsEndpointLineItemGroupTotal": {
        "required": [
          "id",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item id",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "total": {
            "description": "Total",
            "$ref": "#/components/schemas/Total"
          }
        }
      },
      "CreateInvoiceEndpointCreateInvoiceRequestModel": {
        "required": [
          "currency",
          "customerId"
        ],
        "type": "object",
        "example": {
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
          "accountingDate": "2022-09-30"
        },
        "properties": {
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "billingRunId": {
            "type": "string",
            "description": "Billing Run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          }
        }
      },
      "InclusiveDateRange": {
        "required": [
          "endInclusive",
          "start"
        ],
        "type": "object",
        "example": {
          "start": "2022-10-01",
          "endInclusive": "2022-10-30"
        },
        "properties": {
          "start": {
            "type": "string",
            "description": "Start date, included in the whole range",
            "format": "date",
            "example": "2022-10-01"
          },
          "endInclusive": {
            "type": "string",
            "description": "End date, included in the whole range",
            "format": "date",
            "example": "2022-10-30"
          }
        }
      },
      "KeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "example": {
          "key": "example-label",
          "value": "label-value"
        },
        "properties": {
          "key": {
            "type": "string",
            "example": "example-label"
          },
          "value": {
            "type": "string",
            "example": "label-value"
          }
        }
      },
      "CreateInvoiceEndpointProductCreateInvoiceResponseModel": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV00001",
          "issueDate": "2022-09-15",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "af60cab3-812d-4250-a051-0fb7133a00c7"
          ],
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "finance@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "dunningStatus": "SCHEDULED",
          "accountingDate": "2022-09-30",
          "calculatedAt": "2022-09-30T00:00:00Z",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV00001"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "af60cab3-812d-4250-a051-0fb7133a00c7"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "dunningStatus": {
            "description": "Dunning status",
            "$ref": "#/components/schemas/InvoiceDunningStatus"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          },
          "calculatedAt": {
            "type": "string",
            "description": "Time this invoice was last calculated (applicable for invoices generated by billing engine only)",
            "example": "2022-09-30T00:00:00Z"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "InvoiceStatus": {
        "type": "string",
        "example": "DRAFT",
        "enum": [
          "IN_PROGRESS",
          "DRAFT",
          "FINAL",
          "SENT",
          "VOIDED"
        ]
      },
      "InvoicePaymentStatus": {
        "type": "string",
        "example": "UNPAID",
        "enum": [
          "UNPAID",
          "PARTIALLY_PAID",
          "PAID",
          "UNCOLLECTIBLE"
        ]
      },
      "LinkInfo": {
        "required": [
          "externalId",
          "externalService",
          "syncTime"
        ],
        "type": "object",
        "example": {
          "externalId": "123",
          "externalService": "Xero",
          "syncTime": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The ID of the related entity in external system",
            "example": "123"
          },
          "externalService": {
            "description": "The connected service",
            "$ref": "#/components/schemas/IntegrationService"
          },
          "syncTime": {
            "type": "string",
            "description": "The time that this was synced from the connected integration",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "InvoiceDunningStatus": {
        "type": "string",
        "example": "SCHEDULED",
        "enum": [
          "SCHEDULED",
          "COMPLETED",
          "FAILED",
          "NOT_REQUIRED"
        ]
      },
      "CreateOrUpdateLineItemRequestModel": {
        "required": [
          "externalIds",
          "quantity",
          "rate",
          "taxRate",
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "servicePeriodStart": "2022-10-20T00:00:00Z",
          "servicePeriodEnd": "2022-10-24T00:00:00Z",
          "servicePeriod": {
            "startDate": "2022-10-20",
            "endDate": "2022-10-24"
          },
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Price per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "servicePeriodStart": {
            "type": "string",
            "description": "Start of the service period (the time period in which the service was provided)",
            "example": "2022-10-20T00:00:00Z"
          },
          "servicePeriodEnd": {
            "type": "string",
            "description": "End of the service period (the time period in which the service was provided)",
            "example": "2022-10-24T00:00:00Z"
          },
          "servicePeriod": {
            "description": "Service Period",
            "$ref": "#/components/schemas/DateRange1"
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "CreateLineItemGroupEndpointCreateLineItemGroupRequestModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Users",
          "description": "Charges for users"
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          }
        }
      },
      "CreateLineItemGroupEndpointProductCreateLineItemGroupResponseModel": {
        "required": [
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Users",
          "description": "Charges for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          }
        }
      },
      "DeleteInvoiceEndpointProductDeleteInvoiceResponseModel": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV00001",
          "issueDate": "2022-09-15",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "af60cab3-812d-4250-a051-0fb7133a00c7"
          ],
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "finance@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "dunningStatus": "SCHEDULED",
          "accountingDate": "2022-09-30",
          "calculatedAt": "2022-09-30T00:00:00Z",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV00001"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "af60cab3-812d-4250-a051-0fb7133a00c7"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "dunningStatus": {
            "description": "Dunning status",
            "$ref": "#/components/schemas/InvoiceDunningStatus"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          },
          "calculatedAt": {
            "type": "string",
            "description": "Time this invoice was last calculated (applicable for invoices generated by billing engine only)",
            "example": "2022-09-30T00:00:00Z"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "DeleteLineItemGroupEndpointProductDeleteLineItemGroupResponseModel": {
        "required": [
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Users",
          "description": "Charges for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          }
        }
      },
      "DownloadMultipleInvoicePdfsEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "b9524205-b973-48bb-911f-db92f22c8c49"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs",
            "example": [
              "b9524205-b973-48bb-911f-db92f22c8c49"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Invoice": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV2",
          "dueDate": "2022-11-05",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "line2": "",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
          "totalTax": "2",
          "netTotal": "12",
          "grossTotal": "10",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "941272d1-f840-4e16-b698-0cd455c81e0e"
          ],
          "linkedServices": [
            {
              "externalId": "ID",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "Flat 1",
              "line2": "123 Fake Street",
              "town": "New York",
              "state": "NY",
              "postcode": "AB1 2EF",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "123456",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "legalCompanyName": "The Merchant",
            "customFields": [],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "accountingDate": "2022-10-05",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "ba37a392-7054-4dae-ab37-6fee9e23fe06"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV2"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-11-05"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "12"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "10"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "941272d1-f840-4e16-b698-0cd455c81e0e"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "ID",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-10-05"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "FinaliseAndSendMultipleInvoicesEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FinaliseMultipleInvoicesEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InvoicesGrid": {
        "required": [
          "accountNetTotal",
          "accountTotal",
          "customerDetails",
          "monthDetails",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "sequenceAccountId": "ac4c5184-b282-40b6-862c-ac9de3859e27",
          "customerDetails": [
            {
              "customerId": "4ecc7384-e25e-459d-b811-fb5f3ae73923",
              "legalName": "Saas Corp",
              "total": "600",
              "netTotal": "400",
              "monthDetails": [
                {
                  "month": "2023-09-01",
                  "total": "300",
                  "netTotal": "200",
                  "invoiceIds": [
                    "b78f0591-afcc-43bc-851f-2288aa25b07b"
                  ]
                },
                {
                  "month": "2023-10-01",
                  "total": "300",
                  "netTotal": "200",
                  "invoiceIds": [
                    "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
                  ]
                }
              ]
            },
            {
              "customerId": "a0bc49b1-8e9a-4995-af73-5db2f9bd494b",
              "legalName": "Hermanos Cafeteros Inc.",
              "total": "600",
              "netTotal": "400",
              "monthDetails": [
                {
                  "month": "2023-09-01",
                  "total": "300",
                  "netTotal": "200",
                  "invoiceIds": [
                    "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                  ]
                },
                {
                  "month": "2023-10-01",
                  "total": "300",
                  "netTotal": "200",
                  "invoiceIds": [
                    "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                    "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                  ]
                }
              ]
            }
          ],
          "accountTotal": "1200",
          "accountNetTotal": "800",
          "monthDetails": [
            {
              "month": "2023-09-01",
              "total": "600",
              "netTotal": "400",
              "invoiceIds": [
                "b78f0591-afcc-43bc-851f-2288aa25b07b",
                "12e4c680-a33d-4440-b01b-6e259e0a51d4"
              ]
            },
            {
              "month": "2023-10-01",
              "total": "600",
              "netTotal": "400",
              "invoiceIds": [
                "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8",
                "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
              ]
            }
          ]
        },
        "properties": {
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "ac4c5184-b282-40b6-862c-ac9de3859e27"
          },
          "customerDetails": {
            "type": "array",
            "description": "Breakdown of totals by customer",
            "example": [
              {
                "customerId": "4ecc7384-e25e-459d-b811-fb5f3ae73923",
                "legalName": "Saas Corp",
                "total": "600",
                "netTotal": "400",
                "monthDetails": [
                  {
                    "month": "2023-09-01",
                    "total": "300",
                    "netTotal": "200",
                    "invoiceIds": [
                      "b78f0591-afcc-43bc-851f-2288aa25b07b"
                    ]
                  },
                  {
                    "month": "2023-10-01",
                    "total": "300",
                    "netTotal": "200",
                    "invoiceIds": [
                      "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
                    ]
                  }
                ]
              },
              {
                "customerId": "a0bc49b1-8e9a-4995-af73-5db2f9bd494b",
                "legalName": "Hermanos Cafeteros Inc.",
                "total": "600",
                "netTotal": "400",
                "monthDetails": [
                  {
                    "month": "2023-09-01",
                    "total": "300",
                    "netTotal": "200",
                    "invoiceIds": [
                      "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                    ]
                  },
                  {
                    "month": "2023-10-01",
                    "total": "300",
                    "netTotal": "200",
                    "invoiceIds": [
                      "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                      "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                    ]
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomerDetails"
            }
          },
          "accountTotal": {
            "type": "string",
            "description": "The gross total across all invoices for this sequence account and currency",
            "example": "1200"
          },
          "accountNetTotal": {
            "type": "string",
            "description": "The net total across all invoices for this sequence account and currency",
            "example": "800"
          },
          "monthDetails": {
            "type": "array",
            "description": "Breakdown of totals by month",
            "example": [
              {
                "month": "2023-09-01",
                "total": "600",
                "netTotal": "400",
                "invoiceIds": [
                  "b78f0591-afcc-43bc-851f-2288aa25b07b",
                  "12e4c680-a33d-4440-b01b-6e259e0a51d4"
                ]
              },
              {
                "month": "2023-10-01",
                "total": "600",
                "netTotal": "400",
                "invoiceIds": [
                  "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8",
                  "c82c7f82-2d76-49b4-832b-c9bb1969a5c6",
                  "1b4d180d-ae8d-413c-9a97-08a7a85a2980"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MonthDetails"
            }
          }
        }
      },
      "CustomerDetails": {
        "required": [
          "customerId",
          "legalName",
          "monthDetails",
          "netTotal",
          "total"
        ],
        "type": "object",
        "example": {
          "customerId": "4ecc7384-e25e-459d-b811-fb5f3ae73923",
          "legalName": "Saas Corp",
          "total": "600",
          "netTotal": "400",
          "monthDetails": [
            {
              "month": "2023-09-01",
              "total": "300",
              "netTotal": "200",
              "invoiceIds": [
                "b78f0591-afcc-43bc-851f-2288aa25b07b"
              ]
            },
            {
              "month": "2023-10-01",
              "total": "300",
              "netTotal": "200",
              "invoiceIds": [
                "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
              ]
            }
          ]
        },
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "4ecc7384-e25e-459d-b811-fb5f3ae73923"
          },
          "legalName": {
            "type": "string",
            "description": "Legal name",
            "example": "Saas Corp"
          },
          "total": {
            "type": "string",
            "description": "Gross total of all invoices for customer",
            "example": "600"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total of all invoices for customer",
            "example": "400"
          },
          "monthDetails": {
            "type": "array",
            "description": "Breakdown of invoice totals for customer per month",
            "example": [
              {
                "month": "2023-09-01",
                "total": "300",
                "netTotal": "200",
                "invoiceIds": [
                  "b78f0591-afcc-43bc-851f-2288aa25b07b"
                ]
              },
              {
                "month": "2023-10-01",
                "total": "300",
                "netTotal": "200",
                "invoiceIds": [
                  "227b8ff9-42ad-47f8-bfa5-9e5760d4d5d8"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MonthDetails"
            }
          }
        }
      },
      "MonthDetails": {
        "required": [
          "invoiceIds",
          "month",
          "netTotal",
          "total"
        ],
        "type": "object",
        "example": {
          "month": "2023-09-01",
          "total": "300",
          "netTotal": "200",
          "invoiceIds": [
            "b78f0591-afcc-43bc-851f-2288aa25b07b"
          ]
        },
        "properties": {
          "month": {
            "type": "string",
            "description": "Month",
            "format": "date",
            "example": "2023-09-01"
          },
          "total": {
            "type": "string",
            "description": "Gross total of all invoices for month",
            "example": "300"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total of all invoices for month",
            "example": "200"
          },
          "invoiceIds": {
            "type": "array",
            "description": "IDs of all invoices in month",
            "example": [
              "b78f0591-afcc-43bc-851f-2288aa25b07b"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OptionalUsageDataResponse2": {
        "type": "object",
        "example": {
          "data": {
            "usageStart": "2023-02-01",
            "usageEnd": "2023-04-30",
            "metricName": "API Calls",
            "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
            "total": "35",
            "usageData": [
              {
                "periodStart": "2023-02-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2023-03-01",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2023-04-01",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ]
          }
        },
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UsageDataResponse2"
          }
        }
      },
      "UsageDataResponse2": {
        "required": [
          "metricId",
          "metricName",
          "total",
          "usageData",
          "usageEnd",
          "usageStart"
        ],
        "type": "object",
        "example": {
          "usageStart": "2023-02-01",
          "usageEnd": "2023-04-30",
          "metricName": "API Calls",
          "metricId": "27ba4761-7573-41c5-b780-2993b2c254f7",
          "total": "35",
          "usageData": [
            {
              "periodStart": "2023-02-01",
              "amount": "10",
              "cumulativeAmount": "10"
            },
            {
              "periodStart": "2023-03-01",
              "amount": "15",
              "cumulativeAmount": "25"
            },
            {
              "periodStart": "2023-04-01",
              "amount": "10",
              "cumulativeAmount": "35"
            }
          ]
        },
        "properties": {
          "usageStart": {
            "type": "string",
            "description": "Usage start",
            "format": "date",
            "example": "2023-02-01"
          },
          "usageEnd": {
            "type": "string",
            "description": "Usage end",
            "format": "date",
            "example": "2023-04-30"
          },
          "metricName": {
            "type": "string",
            "description": "Metric name",
            "example": "API Calls"
          },
          "metricId": {
            "type": "string",
            "description": "Metric ID",
            "example": "27ba4761-7573-41c5-b780-2993b2c254f7"
          },
          "total": {
            "type": "string",
            "description": "Total for provided usage periods",
            "example": "35"
          },
          "usageData": {
            "type": "array",
            "description": "Usage data",
            "example": [
              {
                "periodStart": "2023-02-01",
                "amount": "10",
                "cumulativeAmount": "10"
              },
              {
                "periodStart": "2023-03-01",
                "amount": "15",
                "cumulativeAmount": "25"
              },
              {
                "periodStart": "2023-04-01",
                "amount": "10",
                "cumulativeAmount": "35"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageData2"
            }
          }
        }
      },
      "UsageData2": {
        "required": [
          "amount",
          "cumulativeAmount",
          "periodStart"
        ],
        "type": "object",
        "example": {
          "periodStart": "2023-02-01",
          "amount": "10",
          "cumulativeAmount": "10"
        },
        "properties": {
          "periodStart": {
            "type": "string",
            "description": "Usage period start",
            "format": "date",
            "example": "2023-02-01"
          },
          "amount": {
            "type": "string",
            "description": "Usage amount",
            "example": "10"
          },
          "cumulativeAmount": {
            "type": "string",
            "description": "Cumulative usage amount (summing all previous data points)",
            "example": "10"
          }
        }
      },
      "GetInvoiceEndpointProductGetInvoiceResponseModel": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV00001",
          "issueDate": "2022-09-15",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "af60cab3-812d-4250-a051-0fb7133a00c7"
          ],
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "finance@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "dunningStatus": "SCHEDULED",
          "accountingDate": "2022-09-30",
          "calculatedAt": "2022-09-30T00:00:00Z",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV00001"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "af60cab3-812d-4250-a051-0fb7133a00c7"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "dunningStatus": {
            "description": "Dunning status",
            "$ref": "#/components/schemas/InvoiceDunningStatus"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          },
          "calculatedAt": {
            "type": "string",
            "description": "Time this invoice was last calculated (applicable for invoices generated by billing engine only)",
            "example": "2022-09-30T00:00:00Z"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "ListAllLineItemGroupsUnpaginatedEndpointListAllLineItemGroupsResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Cars",
              "description": "Charges for cars",
              "index": 1,
              "netTotal": "200000",
              "totalTax": "10",
              "grossTotal": "22000"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItem Groups",
            "example": [
              {
                "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Cars",
                "description": "Charges for cars",
                "index": 1,
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LineItemGroup"
            }
          }
        }
      },
      "LineItemGroup": {
        "required": [
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Cars",
          "description": "Charges for cars",
          "index": 1,
          "netTotal": "200000",
          "totalTax": "10",
          "grossTotal": "22000"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Cars"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for cars"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 1
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "200000"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "10"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "22000"
          }
        }
      },
      "ListAllLineItemsUnpaginatedEndpointListAllLineItemsResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "2",
              "rate": "20000.10",
              "taxRate": "0.2",
              "servicePeriodStart": "2022-10-20T00:00:00Z",
              "servicePeriodEnd": "2022-10-24T00:00:00Z",
              "servicePeriod": {
                "startDate": "2022-10-20",
                "endDate": "2022-10-24"
              },
              "index": 2,
              "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
              "netTotal": "40000.20",
              "totalTax": "8000.04",
              "grossTotal": "48000.24",
              "rateDisplay": "ABSOLUTE",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ],
              "revenueClassification": "EARNED"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItems",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "2",
                "rate": "20000.10",
                "taxRate": "0.2",
                "servicePeriodStart": "2022-10-20T00:00:00Z",
                "servicePeriodEnd": "2022-10-24T00:00:00Z",
                "servicePeriod": {
                  "startDate": "2022-10-20",
                  "endDate": "2022-10-24"
                },
                "index": 2,
                "groupId": "befc8235-a295-4548-87bd-e9bcbbdf18b9",
                "netTotal": "40000.20",
                "totalTax": "8000.04",
                "grossTotal": "48000.24",
                "rateDisplay": "ABSOLUTE",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ],
                "revenueClassification": "EARNED"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LineItemResponseModel"
            }
          }
        }
      },
      "GetUsageItemGroupEndpointGetUsageItemGroupResponseModel": {
        "required": [
          "id",
          "invoiceId",
          "items",
          "title"
        ],
        "type": "object",
        "example": {
          "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
          "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "title": "Successful API Calls",
          "items": [
            {
              "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
              "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
              "title": "Eldest Child",
              "value": "150",
              "groupedValues": [],
              "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
              "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
            },
            {
              "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
              "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
              "title": "Youngest Child",
              "value": "300",
              "groupedValues": [],
              "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
              "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Usage Group Item ID",
            "example": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "title": {
            "type": "string",
            "description": "Usage Group Item Title",
            "example": "Successful API Calls"
          },
          "items": {
            "type": "array",
            "description": "Usage Items",
            "example": [
              {
                "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                "title": "Eldest Child",
                "value": "150",
                "groupedValues": [],
                "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
              },
              {
                "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                "title": "Youngest Child",
                "value": "300",
                "groupedValues": [],
                "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageItem"
            }
          }
        }
      },
      "UsageItem": {
        "required": [
          "groupedValues",
          "id",
          "invoiceId",
          "title",
          "value"
        ],
        "type": "object",
        "example": {
          "id": "0186a182-5f3f-7ff0-8227-02d4e3999149",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Number of messages sent",
          "value": "100",
          "groupedValues": [
            {
              "grouping": "sms",
              "value": 25
            },
            {
              "grouping": "email",
              "value": 75
            }
          ],
          "lineItemGroupId": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "usageItemGroupId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Usage Item ID",
            "example": "0186a182-5f3f-7ff0-8227-02d4e3999149"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "",
            "example": "Number of messages sent"
          },
          "value": {
            "type": "string",
            "description": "Value",
            "example": "100"
          },
          "groupedValues": {
            "type": "array",
            "description": "Grouped Values",
            "example": [
              {
                "grouping": "sms",
                "value": 25
              },
              {
                "grouping": "email",
                "value": 75
              }
            ],
            "items": {
              "$ref": "#/components/schemas/GroupedValue"
            }
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "usageItemGroupId": {
            "type": "string",
            "description": "Usage Item Group ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          }
        }
      },
      "ListUsageItemGroupEndpointListUsageItemGroupResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
              "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
              "title": "Successful API Calls",
              "items": [
                {
                  "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                  "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                  "title": "Eldest Child",
                  "value": "150",
                  "groupedValues": [],
                  "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                  "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                },
                {
                  "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                  "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                  "title": "Youngest Child",
                  "value": "300",
                  "groupedValues": [],
                  "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                  "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                }
              ]
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Usage Item Groups",
            "example": [
              {
                "id": "1aaeac35-cdc3-4adb-a741-5fa4816619ad",
                "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                "title": "Successful API Calls",
                "items": [
                  {
                    "id": "cf8ad70f-f79a-4803-a41f-9a0b436c865a",
                    "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "title": "Eldest Child",
                    "value": "150",
                    "groupedValues": [],
                    "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                    "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                  },
                  {
                    "id": "f00fcb1a-76ff-44d9-b8c3-b444e554cc9c",
                    "invoiceId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
                    "title": "Youngest Child",
                    "value": "300",
                    "groupedValues": [],
                    "lineItemGroupId": "f4457a3c-a0f2-44ea-9c8d-548fa1298626",
                    "usageItemGroupId": "1aaeac35-cdc3-4adb-a741-5fa4816619ad"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/GetUsageItemGroupEndpointGetUsageItemGroupResponseModel"
            }
          }
        }
      },
      "ListAllUsageItemsUnpaginatedEndpointListAllUsageItemsResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "0186a182-5f3f-7ff0-8227-02d4e3999149",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Number of messages sent",
              "value": "100",
              "groupedValues": [
                {
                  "grouping": "sms",
                  "value": 25
                },
                {
                  "grouping": "email",
                  "value": 75
                }
              ],
              "lineItemGroupId": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "usageItemGroupId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItem Groups",
            "example": [
              {
                "id": "0186a182-5f3f-7ff0-8227-02d4e3999149",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Number of messages sent",
                "value": "100",
                "groupedValues": [
                  {
                    "grouping": "sms",
                    "value": 25
                  },
                  {
                    "grouping": "email",
                    "value": 75
                  }
                ],
                "lineItemGroupId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "usageItemGroupId": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UsageItem"
            }
          }
        }
      },
      "GroupedValue": {
        "required": [
          "value"
        ],
        "type": "object",
        "example": {
          "grouping": "sms",
          "value": 25
        },
        "properties": {
          "grouping": {
            "type": "string",
            "example": "sms"
          },
          "value": {
            "type": "number",
            "example": 25
          }
        }
      },
      "ListInvoiceEndpointListInvoicePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
              "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
              "status": "DRAFT",
              "currency": "GBP",
              "invoiceNumber": "INV2",
              "dueDate": "2022-11-05",
              "purchaseOrderNumber": "PO123",
              "reference": "ref",
              "customerEmails": [
                "customer@example.com"
              ],
              "customerLegalCompanyName": "Facebook",
              "customerBillingAddress": {
                "line1": "Flat 1",
                "line2": "15 Yemen Road",
                "town": "Yemen",
                "state": "CA",
                "postcode": "YE1 2YE",
                "country": "YE"
              },
              "customerShippingAddress": {
                "line1": "742 Evergreen Terrace",
                "line2": "",
                "town": "Springfield",
                "state": "CA",
                "postcode": "12345",
                "country": "US"
              },
              "memo": "Thanks",
              "paymentOptions": [
                "BANK_TRANSFER"
              ],
              "billingPeriod": {
                "start": "2022-10-01",
                "endInclusive": "2022-10-30"
              },
              "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
              "totalTax": "2",
              "netTotal": "12",
              "grossTotal": "10",
              "metadata": [
                {
                  "key": "example-label",
                  "value": "label-value"
                }
              ],
              "paymentStatus": "UNPAID",
              "createdAt": "2022-10-30T00:00:00Z",
              "creditNoteIds": [
                "941272d1-f840-4e16-b698-0cd455c81e0e"
              ],
              "linkedServices": [
                {
                  "externalId": "ID",
                  "externalService": "Xero",
                  "syncTime": "2022-06-28T16:47:00Z"
                }
              ],
              "merchantDetails": {
                "address": {
                  "line1": "Flat 1",
                  "line2": "123 Fake Street",
                  "town": "New York",
                  "state": "NY",
                  "postcode": "AB1 2EF",
                  "country": "US"
                },
                "phoneNumber": "0800001066",
                "email": "donald@example.com",
                "taxId": "TAX",
                "iban": "GB33BUKB20201555555555",
                "ukAccountDetails": {
                  "sortCode": "123456",
                  "accountNumber": "12345678"
                },
                "usAchDetails": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789"
                },
                "usWireDetails": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  }
                },
                "legalCompanyName": "The Merchant",
                "customFields": [],
                "includeBeneficiaryAddressInPaymentDetails": false
              },
              "accountingDate": "2022-10-05",
              "customerTaxStatus": "TAXED"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Invoices",
            "example": [
              {
                "id": "ba37a392-7054-4dae-ab37-6fee9e23fe06",
                "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
                "status": "DRAFT",
                "currency": "GBP",
                "invoiceNumber": "INV2",
                "dueDate": "2022-11-05",
                "purchaseOrderNumber": "PO123",
                "reference": "ref",
                "customerEmails": [
                  "customer@example.com"
                ],
                "customerLegalCompanyName": "Facebook",
                "customerBillingAddress": {
                  "line1": "Flat 1",
                  "line2": "15 Yemen Road",
                  "town": "Yemen",
                  "state": "CA",
                  "postcode": "YE1 2YE",
                  "country": "YE"
                },
                "customerShippingAddress": {
                  "line1": "742 Evergreen Terrace",
                  "line2": "",
                  "town": "Springfield",
                  "state": "CA",
                  "postcode": "12345",
                  "country": "US"
                },
                "memo": "Thanks",
                "paymentOptions": [
                  "BANK_TRANSFER"
                ],
                "billingPeriod": {
                  "start": "2022-10-01",
                  "endInclusive": "2022-10-30"
                },
                "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
                "totalTax": "2",
                "netTotal": "12",
                "grossTotal": "10",
                "metadata": [
                  {
                    "key": "example-label",
                    "value": "label-value"
                  }
                ],
                "paymentStatus": "UNPAID",
                "createdAt": "2022-10-30T00:00:00Z",
                "creditNoteIds": [
                  "941272d1-f840-4e16-b698-0cd455c81e0e"
                ],
                "linkedServices": [
                  {
                    "externalId": "ID",
                    "externalService": "Xero",
                    "syncTime": "2022-06-28T16:47:00Z"
                  }
                ],
                "merchantDetails": {
                  "address": {
                    "line1": "Flat 1",
                    "line2": "123 Fake Street",
                    "town": "New York",
                    "state": "NY",
                    "postcode": "AB1 2EF",
                    "country": "US"
                  },
                  "phoneNumber": "0800001066",
                  "email": "donald@example.com",
                  "taxId": "TAX",
                  "iban": "GB33BUKB20201555555555",
                  "ukAccountDetails": {
                    "sortCode": "123456",
                    "accountNumber": "12345678"
                  },
                  "usAchDetails": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789"
                  },
                  "usWireDetails": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    }
                  },
                  "legalCompanyName": "The Merchant",
                  "customFields": [],
                  "includeBeneficiaryAddressInPaymentDetails": false
                },
                "accountingDate": "2022-10-05",
                "customerTaxStatus": "TAXED"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListLineItemGroupEndpointProductListLineItemGroupPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Users",
              "description": "Charges for users",
              "index": 2,
              "netTotal": "51.20",
              "totalTax": "2.50",
              "grossTotal": "101.23"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItemGroups",
            "example": [
              {
                "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Users",
                "description": "Charges for users",
                "index": 2,
                "netTotal": "51.20",
                "totalTax": "2.50",
                "grossTotal": "101.23"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListLineItemGroupEndpointProductListLineItemGroupResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListLineItemGroupEndpointProductListLineItemGroupResponseModel": {
        "required": [
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Users",
          "description": "Charges for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          }
        }
      },
      "ListLineItemEndpointPaginatedLineItemResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "2",
              "rate": "20000.10",
              "taxRate": "0.2",
              "servicePeriodStart": "2022-10-20T00:00:00Z",
              "servicePeriodEnd": "2022-10-24T00:00:00Z",
              "servicePeriod": {
                "startDate": "2022-10-20",
                "endDate": "2022-10-24"
              },
              "index": 2,
              "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "netTotal": "51.20",
              "totalTax": "2.50",
              "grossTotal": "101.23",
              "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
              "rateDisplay": "ABSOLUTE",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ],
              "revenueClassification": "EARNED",
              "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItems",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "2",
                "rate": "20000.10",
                "taxRate": "0.2",
                "servicePeriodStart": "2022-10-20T00:00:00Z",
                "servicePeriodEnd": "2022-10-24T00:00:00Z",
                "servicePeriod": {
                  "startDate": "2022-10-20",
                  "endDate": "2022-10-24"
                },
                "index": 2,
                "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "netTotal": "51.20",
                "totalTax": "2.50",
                "grossTotal": "101.23",
                "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                "rateDisplay": "ABSOLUTE",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ],
                "revenueClassification": "EARNED",
                "creditGrantId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LineItemResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "PatchInvoiceEndpointPatchInvoiceRequestModel": {
        "type": "object",
        "example": {
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
          "accountingDate": "2022-09-30"
        },
        "properties": {
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "billingRunId": {
            "type": "string",
            "description": "Billing Run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          }
        }
      },
      "PatchInvoiceEndpointProductPatchInvoiceResponseModel": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV00001",
          "issueDate": "2022-09-15",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "af60cab3-812d-4250-a051-0fb7133a00c7"
          ],
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "finance@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "dunningStatus": "SCHEDULED",
          "accountingDate": "2022-09-30",
          "calculatedAt": "2022-09-30T00:00:00Z",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV00001"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "af60cab3-812d-4250-a051-0fb7133a00c7"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "dunningStatus": {
            "description": "Dunning status",
            "$ref": "#/components/schemas/InvoiceDunningStatus"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          },
          "calculatedAt": {
            "type": "string",
            "description": "Time this invoice was last calculated (applicable for invoices generated by billing engine only)",
            "example": "2022-09-30T00:00:00Z"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "RecalculateMultipleInvoicesEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoices IDs to recalculate",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SendMultipleInvoicesEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateInvoicePaymentStatusEndpointRequestModel": {
        "required": [
          "paymentStatus"
        ],
        "type": "object",
        "example": {
          "paymentStatus": "PAID"
        },
        "properties": {
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          }
        }
      },
      "UpdateLineItemGroupEndpointUpdateLineItemGroupRequestModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Users",
          "description": "Charges for users"
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          }
        }
      },
      "UpdateLineItemGroupEndpointProductUpdateLineItemGroupResponseModel": {
        "required": [
          "grossTotal",
          "id",
          "index",
          "invoiceId",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f",
          "invoiceId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "title": "Users",
          "description": "Charges for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "4639a112-f821-4bc1-bc2d-6f9ece5b7c0f"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "title": {
            "type": "string",
            "description": "Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Line Item Group Description",
            "example": "Charges for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          }
        }
      },
      "UpdateMultipleInvoicesPaymentStatusEndpointRequestModel": {
        "required": [
          "invoiceIds",
          "paymentStatus"
        ],
        "type": "object",
        "example": {
          "paymentStatus": "PAID",
          "invoiceIds": [
            "e47552ce-8944-4404-8d62-101b0bd55bbd"
          ]
        },
        "properties": {
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs",
            "example": [
              "e47552ce-8944-4404-8d62-101b0bd55bbd"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateInvoiceEndpointUpdateInvoiceRequestModel": {
        "type": "object",
        "example": {
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "billingRunId": "53ff21c8-4872-46c4-83bf-517d54876945",
          "accountingDate": "2022-09-30"
        },
        "properties": {
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "billingRunId": {
            "type": "string",
            "description": "Billing Run ID",
            "example": "53ff21c8-4872-46c4-83bf-517d54876945"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          }
        }
      },
      "UpdateInvoiceEndpointProductUpdateInvoiceResponseModel": {
        "required": [
          "accountingDate",
          "createdAt",
          "creditNoteIds",
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "paymentStatus",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "status": "DRAFT",
          "currency": "GBP",
          "invoiceNumber": "INV00001",
          "issueDate": "2022-09-15",
          "dueDate": "2022-09-30",
          "purchaseOrderNumber": "PO123",
          "reference": "ref",
          "customerEmails": [
            "customer.user.a@example.com",
            "customer.user.b@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "paymentOptions": [
            "BANK_TRANSFER"
          ],
          "billingPeriod": {
            "start": "2022-10-01",
            "endInclusive": "2022-10-30"
          },
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "paymentStatus": "UNPAID",
          "createdAt": "2022-10-30T00:00:00Z",
          "creditNoteIds": [
            "af60cab3-812d-4250-a051-0fb7133a00c7"
          ],
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "finance@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": false
          },
          "creditBalances": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)",
          "dunningStatus": "SCHEDULED",
          "accountingDate": "2022-09-30",
          "calculatedAt": "2022-09-30T00:00:00Z",
          "customerTaxStatus": "TAXED"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice ID",
            "example": "6cedbb5e-4f77-4217-b8d4-020e7e4d33c9"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Billing Schedule ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "status": {
            "description": "Invoice status",
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "currency": {
            "description": "Invoice currency",
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number",
            "example": "INV00001"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date",
            "format": "date",
            "example": "2022-09-30"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "example": "ref"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer email addresses, used for sending the Invoice if provided",
            "example": [
              "customer.user.a@example.com",
              "customer.user.b@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Invoice memo",
            "example": "Thanks"
          },
          "paymentOptions": {
            "type": "array",
            "description": "Invoice payment options",
            "example": [
              "BANK_TRANSFER"
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentOption"
            }
          },
          "billingPeriod": {
            "description": "Billing period",
            "$ref": "#/components/schemas/InclusiveDateRange"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this invoice is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Invoice's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Invoice's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Invoice. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "paymentStatus": {
            "description": "Invoice payment status",
            "$ref": "#/components/schemas/InvoicePaymentStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteIds": {
            "type": "array",
            "description": "IDs of linked credit notes (if any)",
            "example": [
              "af60cab3-812d-4250-a051-0fb7133a00c7"
            ],
            "items": {
              "type": "string"
            }
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this invoice",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          },
          "creditBalances": {
            "type": "string",
            "description": "Credit balances",
            "example": "Verification 2 credit balance: 7/7 (expiring on 4 May 2023)"
          },
          "dunningStatus": {
            "description": "Dunning status",
            "$ref": "#/components/schemas/InvoiceDunningStatus"
          },
          "accountingDate": {
            "type": "string",
            "description": "Accounting date",
            "format": "date",
            "example": "2022-09-30"
          },
          "calculatedAt": {
            "type": "string",
            "description": "Time this invoice was last calculated (applicable for invoices generated by billing engine only)",
            "example": "2022-09-30T00:00:00Z"
          },
          "customerTaxStatus": {
            "description": "Customer tax status",
            "$ref": "#/components/schemas/TaxStatus"
          }
        }
      },
      "VoidMultipleInvoicesEndpointRequestModel": {
        "required": [
          "invoiceIds"
        ],
        "type": "object",
        "example": {
          "invoiceIds": [
            "eaa8f192-6517-4548-a4e5-50b33858cda6"
          ]
        },
        "properties": {
          "invoiceIds": {
            "type": "array",
            "description": "Invoice IDs",
            "example": [
              "eaa8f192-6517-4548-a4e5-50b33858cda6"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkAction": {
        "required": [
          "completedIds",
          "createdAt",
          "failedIds",
          "id",
          "requestedIds",
          "sequenceAccountId",
          "status",
          "type"
        ],
        "type": "object",
        "example": {
          "id": "e007e884-5100-4183-8355-4771865cb4dd",
          "sequenceAccountId": "1986c663-9ee9-4811-bfbf-57d2ad666096",
          "type": "VOID_INVOICES",
          "status": "PROCESSING",
          "createdAt": "2022-06-28T16:47:00Z",
          "requestedIds": [],
          "completedIds": [],
          "failedIds": []
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Bulk Action ID",
            "example": "e007e884-5100-4183-8355-4771865cb4dd"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "1986c663-9ee9-4811-bfbf-57d2ad666096"
          },
          "type": {
            "description": "Bulk Action Type",
            "$ref": "#/components/schemas/BulkActionType"
          },
          "status": {
            "description": "Bulk Action Status",
            "$ref": "#/components/schemas/BulkActionStatus"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "requestedIds": {
            "type": "array",
            "description": "Requested IDs",
            "example": [],
            "items": {}
          },
          "completedIds": {
            "type": "array",
            "description": "Completed IDs",
            "example": [],
            "items": {}
          },
          "failedIds": {
            "type": "array",
            "description": "Failed IDs",
            "example": [],
            "items": {}
          }
        }
      },
      "BulkActionType": {
        "type": "string",
        "example": "VOID_INVOICES",
        "enum": [
          "VOID_INVOICES",
          "RECALCULATE_INVOICES",
          "DOWNLOAD_INVOICES",
          "FINALISE_INVOICES",
          "SEND_INVOICES",
          "UPDATE_INVOICES_STATUS"
        ]
      },
      "BulkActionStatus": {
        "type": "string",
        "example": "PROCESSING",
        "enum": [
          "PROCESSING",
          "PARTIALLY_FAILED",
          "COMPLETED"
        ]
      },
      "AddCreditNoteLineItemsFromInvoiceEndpointRequestModel": {
        "required": [
          "lineItemIds"
        ],
        "type": "object",
        "example": {
          "lineItemIds": [
            "64414246-3704-4582-9e14-82784547fef7"
          ]
        },
        "properties": {
          "lineItemIds": {
            "type": "array",
            "description": "Invoice line item IDs to add",
            "example": [
              "64414246-3704-4582-9e14-82784547fef7"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsRequest": {
        "required": [
          "lineItems"
        ],
        "type": "object",
        "example": {
          "lineItems": [
            {
              "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
              "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "10",
              "rate": "200000",
              "taxRate": "0.1",
              "index": 1,
              "netTotal": "200000",
              "totalTax": "10",
              "grossTotal": "22000",
              "rateDisplay": "ABSOLUTE",
              "externalIds": []
            }
          ]
        },
        "properties": {
          "lineItems": {
            "type": "array",
            "description": "Line Items",
            "example": [
              {
                "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "10",
                "rate": "200000",
                "taxRate": "0.1",
                "index": 1,
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000",
                "rateDisplay": "ABSOLUTE",
                "externalIds": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditNoteLineItem"
            }
          }
        }
      },
      "CreditNoteLineItem": {
        "required": [
          "creditNoteId",
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
          "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "10",
          "rate": "200000",
          "taxRate": "0.1",
          "index": 1,
          "netTotal": "200000",
          "totalTax": "10",
          "grossTotal": "22000",
          "rateDisplay": "ABSOLUTE",
          "externalIds": []
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "06c44e52-b8f4-4588-a2a6-001169ebf80e"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "3ec02846-bcf7-484c-a96e-ded9a9b96333"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "10"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "200000"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.1"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 1
          },
          "netTotal": {
            "type": "string",
            "description": "Net Total",
            "example": "200000"
          },
          "totalTax": {
            "type": "string",
            "description": "Total Tax",
            "example": "10"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross Total",
            "example": "22000"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [],
            "items": {}
          }
        }
      },
      "CalculateCreditNoteTotalsEndpointCalculateCreditNoteTotalsResponse": {
        "required": [
          "lineItemGroupTotals",
          "lineItemTotals",
          "total"
        ],
        "type": "object",
        "example": {
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          },
          "lineItemTotals": [
            {
              "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "total": {
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            }
          ],
          "lineItemGroupTotals": [
            {
              "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
              "total": {
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            }
          ]
        },
        "properties": {
          "total": {
            "description": "Credit Note total",
            "$ref": "#/components/schemas/Total"
          },
          "lineItemTotals": {
            "type": "array",
            "description": "Line Item totals",
            "example": [
              {
                "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "total": {
                  "netTotal": "200000",
                  "totalTax": "10",
                  "grossTotal": "22000"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CalculateCreditNoteTotalsEndpointLineItemTotal"
            }
          },
          "lineItemGroupTotals": {
            "type": "array",
            "description": "Line Item Group totals",
            "example": [
              {
                "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                "total": {
                  "netTotal": "200000",
                  "totalTax": "10",
                  "grossTotal": "22000"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CalculateCreditNoteTotalsEndpointLineItemGroupTotal"
            }
          }
        }
      },
      "CalculateCreditNoteTotalsEndpointLineItemTotal": {
        "required": [
          "id",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item id",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "total": {
            "description": "Total",
            "$ref": "#/components/schemas/Total"
          }
        }
      },
      "CalculateCreditNoteTotalsEndpointLineItemGroupTotal": {
        "required": [
          "id",
          "total"
        ],
        "type": "object",
        "example": {
          "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
          "total": {
            "netTotal": "200000",
            "totalTax": "10",
            "grossTotal": "22000"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Line Item id",
            "example": "06c44e52-b8f4-4588-a2a6-001169ebf80e"
          },
          "total": {
            "description": "Total",
            "$ref": "#/components/schemas/Total"
          }
        }
      },
      "CreateCreditNoteEndpointCreateCreditNoteRequestModel": {
        "required": [
          "currency",
          "customerId"
        ],
        "type": "object",
        "example": {
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "currency": "GBP",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123"
        },
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          }
        }
      },
      "CreateCreditNoteEndpointProductCreateCreditNoteResponseModel": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "status": "DRAFT",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceNumber": "INV00001",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "issueDate": "2022-09-15",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "CreditNoteStatus": {
        "type": "string",
        "example": "DRAFT",
        "enum": [
          "DRAFT",
          "FINAL",
          "SENT",
          "VOIDED"
        ]
      },
      "CreateCreditNoteLineItemEndpointCreateCreditNoteLineItemRequestModel": {
        "required": [
          "creditNoteId",
          "externalIds",
          "quantity",
          "rate",
          "taxRate",
          "title"
        ],
        "type": "object",
        "example": {
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "CreateCreditNoteLineItemEndpointProductCreateCreditNoteLineItemResponseModel": {
        "required": [
          "creditNoteId",
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "index": 2,
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "netTotal": "20000.00",
          "totalTax": "2000.00",
          "grossTotal": "22000.00",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "netTotal": {
            "type": "string",
            "description": "Net Total",
            "example": "20000.00"
          },
          "totalTax": {
            "type": "string",
            "description": "Total Tax",
            "example": "2000.00"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross Total",
            "example": "22000.00"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "CreateCreditNoteLineItemGroupEndpointCreateCreditNoteLineItemGroupRequestModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "example": {
          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Users",
          "description": "Credit note for users"
        },
        "properties": {
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          }
        }
      },
      "CreateCreditNoteLineItemGroupEndpointProductCreateCreditNoteLineItemGroupResponseModel": {
        "required": [
          "creditNoteId",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Users",
          "description": "Credit note for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "101.23"
          }
        }
      },
      "DeleteCreditNoteEndpointProductDeleteCreditNoteResponseModel": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "status": "DRAFT",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceNumber": "INV00001",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "issueDate": "2022-09-15",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "DeleteCreditNoteLineItemEndpointProductDeleteCreditNoteLineItemResponseModel": {
        "required": [
          "creditNoteId",
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "index": 2,
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "netTotal": "20000.00",
          "totalTax": "2000.00",
          "grossTotal": "22000.00",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "netTotal": {
            "type": "string",
            "description": "Net Total",
            "example": "20000.00"
          },
          "totalTax": {
            "type": "string",
            "description": "Total Tax",
            "example": "2000.00"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross Total",
            "example": "22000.00"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "DeleteCreditNoteLineItemGroupEndpointProductDeleteCreditNoteLineItemGroupResponseModel": {
        "required": [
          "creditNoteId",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Users",
          "description": "Credit note for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "101.23"
          }
        }
      },
      "DownloadMultipleCreditNotePdfsEndpointRequestModel": {
        "required": [
          "creditNoteIds"
        ],
        "type": "object",
        "example": {
          "creditNoteIds": [
            "b9524205-b973-48bb-911f-db92f22c8c49"
          ]
        },
        "properties": {
          "creditNoteIds": {
            "type": "array",
            "description": "Credit Note IDs",
            "example": [
              "b9524205-b973-48bb-911f-db92f22c8c49"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreditNote": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "status": "DRAFT",
          "invoiceId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
          "invoiceNumber": "INV00001",
          "currency": "GBP",
          "issueDate": "2022-11-05",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a",
          "customerEmails": [
            "customer@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "line2": "",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "0",
          "netTotal": "0",
          "grossTotal": "0",
          "metadata": [],
          "linkedServices": [
            {
              "externalId": "ID",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "Flat 1",
              "line2": "123 Fake Street",
              "town": "New York",
              "state": "NY",
              "postcode": "AB1 2EF",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "123456",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "legalCompanyName": "The Merchant",
            "customFields": [],
            "includeBeneficiaryAddressInPaymentDetails": false
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "06c44e52-b8f4-4588-a2a6-001169ebf80e"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-11-05"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "b3c0cf23-6717-4cdc-b190-acf8aa6ccd8a"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "0"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "0"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "0"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [],
            "items": {}
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "ID",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "FinaliseAndSendMultipleCreditNotesEndpointRequestModel": {
        "required": [
          "creditNoteIds"
        ],
        "type": "object",
        "example": {
          "creditNoteIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "creditNoteIds": {
            "type": "array",
            "description": "Credit note IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FinaliseMultipleCreditNotesEndpointRequestModel": {
        "required": [
          "creditNoteIds"
        ],
        "type": "object",
        "example": {
          "creditNoteIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "creditNoteIds": {
            "type": "array",
            "description": "Credit note IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListAllCreditNoteLineItemsUnpaginatedEndpointListAllLineItemsResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
              "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "10",
              "rate": "200000",
              "taxRate": "0.1",
              "index": 1,
              "netTotal": "200000",
              "totalTax": "10",
              "grossTotal": "22000",
              "rateDisplay": "ABSOLUTE",
              "externalIds": []
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "LineItems",
            "example": [
              {
                "id": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "groupId": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                "lineItemId": "3ec02846-bcf7-484c-a96e-ded9a9b96333",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "10",
                "rate": "200000",
                "taxRate": "0.1",
                "index": 1,
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000",
                "rateDisplay": "ABSOLUTE",
                "externalIds": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditNoteLineItem"
            }
          }
        }
      },
      "ListAllCreditNoteLineItemGroupsUnpaginatedEndpointListAllCreditNoteLineItemGroupsResponseModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
              "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
              "lineItemGroupId": "941272d1-f840-4e16-b698-00cd455c81e0",
              "title": "Cars",
              "description": "Credit for cars",
              "index": 1,
              "netTotal": "200000",
              "totalTax": "10",
              "grossTotal": "22000"
            }
          ]
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Credit Note Line Item Groups",
            "example": [
              {
                "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
                "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
                "lineItemGroupId": "941272d1-f840-4e16-b698-00cd455c81e0",
                "title": "Cars",
                "description": "Credit for cars",
                "index": 1,
                "netTotal": "200000",
                "totalTax": "10",
                "grossTotal": "22000"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditNoteLineItemGroup"
            }
          }
        }
      },
      "CreditNoteLineItemGroup": {
        "required": [
          "creditNoteId",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "06c44e52-b8f4-4588-a2a6-001169ebf80e",
          "creditNoteId": "941272d1-f840-4e16-b698-0cd455c81e0e",
          "lineItemGroupId": "941272d1-f840-4e16-b698-00cd455c81e0",
          "title": "Cars",
          "description": "Credit for cars",
          "index": 1,
          "netTotal": "200000",
          "totalTax": "10",
          "grossTotal": "22000"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "06c44e52-b8f4-4588-a2a6-001169ebf80e"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "941272d1-f840-4e16-b698-0cd455c81e0e"
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "941272d1-f840-4e16-b698-00cd455c81e0"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Cars"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit for cars"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 1
          },
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "200000"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "10"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "22000"
          }
        }
      },
      "ListByQueryIdCreditNoteEndpointProductListByQueryIdCreditNotePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
              "status": "DRAFT",
              "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "invoiceNumber": "INV00001",
              "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
              "currency": "GBP",
              "issueDate": "2022-09-15",
              "billingPeriodStart": "2022-10-01T00:00:00Z",
              "billingPeriodEnd": "2022-10-30T00:00:00Z",
              "creditNoteNumber": "CN00001",
              "purchaseOrderNumber": "PO123",
              "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
              "customerEmails": [
                "customer@example.com",
                "customer.alias@example.com"
              ],
              "customerLegalCompanyName": "Facebook",
              "customerBillingAddress": {
                "line1": "Flat 1",
                "line2": "15 Yemen Road",
                "town": "Yemen",
                "state": "CA",
                "postcode": "YE1 2YE",
                "country": "YE"
              },
              "customerShippingAddress": {
                "line1": "742 Evergreen Terrace",
                "town": "Springfield",
                "state": "CA",
                "postcode": "12345",
                "country": "US"
              },
              "memo": "Thanks",
              "totalTax": "2.50",
              "netTotal": "51.20",
              "grossTotal": "101.23",
              "metadata": [
                {
                  "key": "example-label",
                  "value": "label-value"
                }
              ],
              "customerTaxId": "TAX123",
              "linkedServices": [
                {
                  "externalId": "123",
                  "externalService": "Xero",
                  "syncTime": "2022-06-28T16:47:00Z"
                }
              ],
              "merchantDetails": {
                "address": {
                  "line1": "The White House",
                  "line2": "1600 Pennsylvania Avenue",
                  "town": "Washington, D.C.",
                  "state": "CA",
                  "postcode": "20500",
                  "country": "US"
                },
                "phoneNumber": "0800001066",
                "email": "donald@example.com",
                "taxId": "TAX60",
                "iban": "GB33BUKB20201555555555",
                "ukAccountDetails": {
                  "sortCode": "000000",
                  "accountNumber": "12345678"
                },
                "usAchDetails": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789"
                },
                "usWireDetails": {
                  "accountNumber": "12345678",
                  "accountName": "John Doe",
                  "bankName": "Chase",
                  "bankRoutingNumber": "123456789",
                  "swiftCode": "CHASUS33",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  }
                },
                "caBankAccountDetails": {
                  "transitNumber": "123",
                  "institutionNumber": "12345",
                  "accountNumber": "1234567"
                },
                "canadianInternationalDestination": {
                  "legalName": "John Doe",
                  "accountNumber": "12345678",
                  "transitNumber": "12345",
                  "bankName": "Chase",
                  "bankAddress": {
                    "line1": "JP Morgan Chase",
                    "town": "New York City",
                    "state": "NY",
                    "postcode": "10017",
                    "country": "US"
                  },
                  "institutionNumber": "123",
                  "swiftCode": "CHASUS33",
                  "intermediaryBank": {
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "swiftCode": "CHASUS33",
                    "routingNumber": "123456789"
                  }
                },
                "logoUrl": "logo",
                "legalCompanyName": "The Merchant",
                "primaryColour": "#000000",
                "customFields": [
                  {
                    "key": "example-label",
                    "value": "label-value"
                  }
                ],
                "includeBeneficiaryAddressInPaymentDetails": true
              }
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditNotes",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                "status": "DRAFT",
                "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "invoiceNumber": "INV00001",
                "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                "currency": "GBP",
                "issueDate": "2022-09-15",
                "billingPeriodStart": "2022-10-01T00:00:00Z",
                "billingPeriodEnd": "2022-10-30T00:00:00Z",
                "creditNoteNumber": "CN00001",
                "purchaseOrderNumber": "PO123",
                "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                "customerEmails": [
                  "customer@example.com",
                  "customer.alias@example.com"
                ],
                "customerLegalCompanyName": "Facebook",
                "customerBillingAddress": {
                  "line1": "Flat 1",
                  "line2": "15 Yemen Road",
                  "town": "Yemen",
                  "state": "CA",
                  "postcode": "YE1 2YE",
                  "country": "YE"
                },
                "customerShippingAddress": {
                  "line1": "742 Evergreen Terrace",
                  "town": "Springfield",
                  "state": "CA",
                  "postcode": "12345",
                  "country": "US"
                },
                "memo": "Thanks",
                "totalTax": "2.50",
                "netTotal": "51.20",
                "grossTotal": "101.23",
                "metadata": [
                  {
                    "key": "example-label",
                    "value": "label-value"
                  }
                ],
                "customerTaxId": "TAX123",
                "linkedServices": [
                  {
                    "externalId": "123",
                    "externalService": "Xero",
                    "syncTime": "2022-06-28T16:47:00Z"
                  }
                ],
                "merchantDetails": {
                  "address": {
                    "line1": "The White House",
                    "line2": "1600 Pennsylvania Avenue",
                    "town": "Washington, D.C.",
                    "state": "CA",
                    "postcode": "20500",
                    "country": "US"
                  },
                  "phoneNumber": "0800001066",
                  "email": "donald@example.com",
                  "taxId": "TAX60",
                  "iban": "GB33BUKB20201555555555",
                  "ukAccountDetails": {
                    "sortCode": "000000",
                    "accountNumber": "12345678"
                  },
                  "usAchDetails": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789"
                  },
                  "usWireDetails": {
                    "accountNumber": "12345678",
                    "accountName": "John Doe",
                    "bankName": "Chase",
                    "bankRoutingNumber": "123456789",
                    "swiftCode": "CHASUS33",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    }
                  },
                  "caBankAccountDetails": {
                    "transitNumber": "123",
                    "institutionNumber": "12345",
                    "accountNumber": "1234567"
                  },
                  "canadianInternationalDestination": {
                    "legalName": "John Doe",
                    "accountNumber": "12345678",
                    "transitNumber": "12345",
                    "bankName": "Chase",
                    "bankAddress": {
                      "line1": "JP Morgan Chase",
                      "town": "New York City",
                      "state": "NY",
                      "postcode": "10017",
                      "country": "US"
                    },
                    "institutionNumber": "123",
                    "swiftCode": "CHASUS33",
                    "intermediaryBank": {
                      "bankName": "Chase",
                      "bankAddress": {
                        "line1": "JP Morgan Chase",
                        "town": "New York City",
                        "state": "NY",
                        "postcode": "10017",
                        "country": "US"
                      },
                      "swiftCode": "CHASUS33",
                      "routingNumber": "123456789"
                    }
                  },
                  "logoUrl": "logo",
                  "legalCompanyName": "The Merchant",
                  "primaryColour": "#000000",
                  "customFields": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "includeBeneficiaryAddressInPaymentDetails": true
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListByQueryIdCreditNoteEndpointProductListByQueryIdCreditNoteResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListByQueryIdCreditNoteEndpointProductListByQueryIdCreditNoteResponseModel": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "status": "DRAFT",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceNumber": "INV00001",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "issueDate": "2022-09-15",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "ListCreditNoteEndpointProductListCreditNotePaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
              "status": "DRAFT",
              "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "invoiceNumber": "INV00001",
              "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
              "currency": "GBP",
              "issueDate": "2022-09-15",
              "billingPeriodStart": "2022-10-01T00:00:00Z",
              "billingPeriodEnd": "2022-10-30T00:00:00Z",
              "creditNoteNumber": "CN00001",
              "purchaseOrderNumber": "PO123",
              "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
              "customerEmails": [
                "customer@example.com"
              ],
              "customerLegalCompanyName": "Facebook",
              "customerBillingAddress": {
                "line1": "Flat 1",
                "line2": "15 Yemen Road",
                "town": "Yemen",
                "state": "CA",
                "postcode": "YE1 2YE",
                "country": "YE"
              },
              "customerShippingAddress": {
                "line1": "742 Evergreen Terrace",
                "town": "Springfield",
                "state": "CA",
                "postcode": "12345",
                "country": "US"
              },
              "memo": "Thanks",
              "totalTax": "2.50",
              "netTotal": "51.20",
              "grossTotal": "101.23",
              "metadata": [
                {
                  "key": "example-label",
                  "value": "label-value"
                }
              ],
              "customerTaxId": "TAX123",
              "linkedServices": [
                {
                  "externalId": "123",
                  "externalService": "Xero",
                  "syncTime": "2022-06-28T16:47:00Z"
                }
              ],
              "merchantDetails": {
                "address": {
                  "line1": "The White House",
                  "line2": "1600 Pennsylvania Avenue",
                  "town": "Washington, D.C.",
                  "state": "CA",
                  "postcode": "20500",
                  "country": "US"
                },
                "phoneNumber": "0800001066",
                "email": "donald@example.com",
                "taxId": "TAX60",
                "logoUrl": "logo",
                "legalCompanyName": "The Merchant",
                "primaryColour": "#000000",
                "customFields": [
                  {
                    "key": "example-label",
                    "value": "label-value"
                  }
                ],
                "includeBeneficiaryAddressInPaymentDetails": false
              }
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditNotes",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
                "status": "DRAFT",
                "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "invoiceNumber": "INV00001",
                "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                "currency": "GBP",
                "issueDate": "2022-09-15",
                "billingPeriodStart": "2022-10-01T00:00:00Z",
                "billingPeriodEnd": "2022-10-30T00:00:00Z",
                "creditNoteNumber": "CN00001",
                "purchaseOrderNumber": "PO123",
                "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
                "customerEmails": [
                  "customer@example.com"
                ],
                "customerLegalCompanyName": "Facebook",
                "customerBillingAddress": {
                  "line1": "Flat 1",
                  "line2": "15 Yemen Road",
                  "town": "Yemen",
                  "state": "CA",
                  "postcode": "YE1 2YE",
                  "country": "YE"
                },
                "customerShippingAddress": {
                  "line1": "742 Evergreen Terrace",
                  "town": "Springfield",
                  "state": "CA",
                  "postcode": "12345",
                  "country": "US"
                },
                "memo": "Thanks",
                "totalTax": "2.50",
                "netTotal": "51.20",
                "grossTotal": "101.23",
                "metadata": [
                  {
                    "key": "example-label",
                    "value": "label-value"
                  }
                ],
                "customerTaxId": "TAX123",
                "linkedServices": [
                  {
                    "externalId": "123",
                    "externalService": "Xero",
                    "syncTime": "2022-06-28T16:47:00Z"
                  }
                ],
                "merchantDetails": {
                  "address": {
                    "line1": "The White House",
                    "line2": "1600 Pennsylvania Avenue",
                    "town": "Washington, D.C.",
                    "state": "CA",
                    "postcode": "20500",
                    "country": "US"
                  },
                  "phoneNumber": "0800001066",
                  "email": "donald@example.com",
                  "taxId": "TAX60",
                  "logoUrl": "logo",
                  "legalCompanyName": "The Merchant",
                  "primaryColour": "#000000",
                  "customFields": [
                    {
                      "key": "example-label",
                      "value": "label-value"
                    }
                  ],
                  "includeBeneficiaryAddressInPaymentDetails": false
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CreditNote"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "ListCreditNoteLineItemGroupEndpointProductListCreditNoteLineItemGroupPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
              "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "title": "Users",
              "description": "Credit note for users",
              "index": 2,
              "netTotal": "51.20",
              "totalTax": "2.50",
              "grossTotal": "101.23"
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditNoteLineItemGroups",
            "example": [
              {
                "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
                "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "title": "Users",
                "description": "Credit note for users",
                "index": 2,
                "netTotal": "51.20",
                "totalTax": "2.50",
                "grossTotal": "101.23"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListCreditNoteLineItemGroupEndpointProductListCreditNoteLineItemGroupResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListCreditNoteLineItemGroupEndpointProductListCreditNoteLineItemGroupResponseModel": {
        "required": [
          "creditNoteId",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Users",
          "description": "Credit note for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "101.23"
          }
        }
      },
      "ListCreditNoteLineItemEndpointProductListCreditNoteLineItemPaginatedResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
              "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
              "title": "Ferraris",
              "description": "Red",
              "quantity": "2",
              "rate": "20000.10",
              "taxRate": "0.2",
              "index": 2,
              "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
              "netTotal": "20000.00",
              "totalTax": "2000.00",
              "grossTotal": "22000.00",
              "rateDisplay": "ABSOLUTE",
              "externalIds": [
                {
                  "key": "Xero",
                  "value": "123"
                }
              ]
            }
          ],
          "pagination": {
            "after": "MDE4NDUyNjYtNmQ2NC03N2M4LTlhZGYtNDQ4N2Q5NGQxNDU3",
            "before": "MDE4NDQyMWUtYTljYy03MTFiLWFmOTMtYmYwNTExZDRkODMz",
            "totalResultSize": 10
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "CreditNoteLineItems",
            "example": [
              {
                "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
                "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
                "title": "Ferraris",
                "description": "Red",
                "quantity": "2",
                "rate": "20000.10",
                "taxRate": "0.2",
                "index": 2,
                "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
                "netTotal": "20000.00",
                "totalTax": "2000.00",
                "grossTotal": "22000.00",
                "rateDisplay": "ABSOLUTE",
                "externalIds": [
                  {
                    "key": "Xero",
                    "value": "123"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ListCreditNoteLineItemEndpointProductListCreditNoteLineItemResponseModel"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "ListCreditNoteLineItemEndpointProductListCreditNoteLineItemResponseModel": {
        "required": [
          "creditNoteId",
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "index": 2,
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "netTotal": "20000.00",
          "totalTax": "2000.00",
          "grossTotal": "22000.00",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "netTotal": {
            "type": "string",
            "description": "Net Total",
            "example": "20000.00"
          },
          "totalTax": {
            "type": "string",
            "description": "Total Tax",
            "example": "2000.00"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross Total",
            "example": "22000.00"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "SendMultipleCreditNotesEndpointRequestModel": {
        "required": [
          "creditNoteIds"
        ],
        "type": "object",
        "example": {
          "creditNoteIds": [
            "307c4d9d-8245-4f45-9c4d-5095ab845457"
          ]
        },
        "properties": {
          "creditNoteIds": {
            "type": "array",
            "description": "Credit note IDs to finalize and send",
            "example": [
              "307c4d9d-8245-4f45-9c4d-5095ab845457"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateCreditNoteEndpointUpdateCreditNoteRequestModel": {
        "type": "object",
        "example": {
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "purchaseOrderNumber": "PO123",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123"
        },
        "properties": {
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          }
        }
      },
      "UpdateCreditNoteEndpointProductUpdateCreditNoteResponseModel": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "status": "DRAFT",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceNumber": "INV00001",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "issueDate": "2022-09-15",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "UpdateCreditNoteLineItemEndpointUpdateCreditNoteLineItemRequestModel": {
        "required": [
          "externalIds",
          "quantity",
          "rate",
          "taxRate",
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "UpdateCreditNoteLineItemEndpointProductUpdateCreditNoteLineItemResponseModel": {
        "required": [
          "creditNoteId",
          "externalIds",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "quantity",
          "rate",
          "rateDisplay",
          "taxRate",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "groupId": "cd11218d-fa00-4faa-8684-a43113d076a8",
          "lineItemId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Ferraris",
          "description": "Red",
          "quantity": "2",
          "rate": "20000.10",
          "taxRate": "0.2",
          "index": 2,
          "priceId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "netTotal": "20000.00",
          "totalTax": "2000.00",
          "grossTotal": "22000.00",
          "rateDisplay": "ABSOLUTE",
          "externalIds": [
            {
              "key": "Xero",
              "value": "123"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "groupId": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "cd11218d-fa00-4faa-8684-a43113d076a8"
          },
          "lineItemId": {
            "type": "string",
            "description": "Line Item ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Item Title",
            "example": "Ferraris"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Red"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity",
            "example": "2"
          },
          "rate": {
            "type": "string",
            "description": "Rate per Item",
            "example": "20000.10"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate",
            "example": "0.2"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "netTotal": {
            "type": "string",
            "description": "Net Total",
            "example": "20000.00"
          },
          "totalTax": {
            "type": "string",
            "description": "Total Tax",
            "example": "2000.00"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross Total",
            "example": "22000.00"
          },
          "rateDisplay": {
            "description": "Determines whether rate is displayed as an absolute value or percentage",
            "$ref": "#/components/schemas/RateDisplay"
          },
          "externalIds": {
            "type": "array",
            "description": "IDs in external integrations",
            "example": [
              {
                "key": "Xero",
                "value": "123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IntegrationExternalIdentifier2"
            }
          }
        }
      },
      "UpdateCreditNoteLineItemGroupEndpointUpdateCreditNoteLineItemGroupRequestModel": {
        "required": [
          "title"
        ],
        "type": "object",
        "example": {
          "title": "Users",
          "description": "Credit note for users"
        },
        "properties": {
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          }
        }
      },
      "UpdateCreditNoteLineItemGroupEndpointProductUpdateCreditNoteLineItemGroupResponseModel": {
        "required": [
          "creditNoteId",
          "grossTotal",
          "id",
          "index",
          "netTotal",
          "title",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec",
          "creditNoteId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "lineItemGroupId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "title": "Users",
          "description": "Credit note for users",
          "index": 2,
          "netTotal": "51.20",
          "totalTax": "2.50",
          "grossTotal": "101.23"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note Line Item Group ID",
            "example": "e5bc0f12-4bc1-f821-bc2d-04639a16f9ec"
          },
          "creditNoteId": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "lineItemGroupId": {
            "type": "string",
            "description": "Line Item Group ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "title": {
            "type": "string",
            "description": "Credit Note Line Item Group Title",
            "example": "Users"
          },
          "description": {
            "type": "string",
            "description": "Credit Note Line Item Group Description",
            "example": "Credit note for users"
          },
          "index": {
            "type": "integer",
            "description": "Index (for maintaining order)",
            "example": 2
          },
          "netTotal": {
            "type": "string",
            "description": "Net total",
            "example": "51.20"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax",
            "example": "2.50"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total",
            "example": "101.23"
          }
        }
      },
      "VoidMultipleCreditNotesEndpointRequestModel": {
        "required": [
          "creditNoteIds"
        ],
        "type": "object",
        "example": {
          "creditNoteIds": [
            "eaa8f192-6517-4548-a4e5-50b33858cda6"
          ]
        },
        "properties": {
          "creditNoteIds": {
            "type": "array",
            "description": "Credit Note IDs",
            "example": [
              "eaa8f192-6517-4548-a4e5-50b33858cda6"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCreditNoteEndpointProductGetCreditNoteResponseModel": {
        "required": [
          "currency",
          "customerBillingAddress",
          "customerEmails",
          "customerId",
          "customerLegalCompanyName",
          "customerShippingAddress",
          "grossTotal",
          "id",
          "linkedServices",
          "metadata",
          "netTotal",
          "sequenceAccountId",
          "status",
          "totalTax"
        ],
        "type": "object",
        "example": {
          "id": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "status": "DRAFT",
          "invoiceId": "af60cab3-812d-4250-a051-0fb7133a00c7",
          "invoiceNumber": "INV00001",
          "billingScheduleId": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95",
          "currency": "GBP",
          "issueDate": "2022-09-15",
          "billingPeriodStart": "2022-10-01T00:00:00Z",
          "billingPeriodEnd": "2022-10-30T00:00:00Z",
          "creditNoteNumber": "CN00001",
          "purchaseOrderNumber": "PO123",
          "customerId": "61b083e0-1faa-47ca-9aeb-6205da8f6c47",
          "customerEmails": [
            "customer@example.com",
            "customer.alias@example.com"
          ],
          "customerLegalCompanyName": "Facebook",
          "customerBillingAddress": {
            "line1": "Flat 1",
            "line2": "15 Yemen Road",
            "town": "Yemen",
            "state": "CA",
            "postcode": "YE1 2YE",
            "country": "YE"
          },
          "customerShippingAddress": {
            "line1": "742 Evergreen Terrace",
            "town": "Springfield",
            "state": "CA",
            "postcode": "12345",
            "country": "US"
          },
          "memo": "Thanks",
          "totalTax": "2.50",
          "netTotal": "51.20",
          "grossTotal": "101.23",
          "metadata": [
            {
              "key": "example-label",
              "value": "label-value"
            }
          ],
          "customerTaxId": "TAX123",
          "linkedServices": [
            {
              "externalId": "123",
              "externalService": "Xero",
              "syncTime": "2022-06-28T16:47:00Z"
            }
          ],
          "merchantDetails": {
            "address": {
              "line1": "The White House",
              "line2": "1600 Pennsylvania Avenue",
              "town": "Washington, D.C.",
              "state": "CA",
              "postcode": "20500",
              "country": "US"
            },
            "phoneNumber": "0800001066",
            "email": "donald@example.com",
            "taxId": "TAX60",
            "iban": "GB33BUKB20201555555555",
            "ukAccountDetails": {
              "sortCode": "000000",
              "accountNumber": "12345678"
            },
            "usAchDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789"
            },
            "usWireDetails": {
              "accountNumber": "12345678",
              "accountName": "John Doe",
              "bankName": "Chase",
              "bankRoutingNumber": "123456789",
              "swiftCode": "CHASUS33",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              }
            },
            "caBankAccountDetails": {
              "transitNumber": "123",
              "institutionNumber": "12345",
              "accountNumber": "1234567"
            },
            "canadianInternationalDestination": {
              "legalName": "John Doe",
              "accountNumber": "12345678",
              "transitNumber": "12345",
              "bankName": "Chase",
              "bankAddress": {
                "line1": "JP Morgan Chase",
                "town": "New York City",
                "state": "NY",
                "postcode": "10017",
                "country": "US"
              },
              "institutionNumber": "123",
              "swiftCode": "CHASUS33",
              "intermediaryBank": {
                "bankName": "Chase",
                "bankAddress": {
                  "line1": "JP Morgan Chase",
                  "town": "New York City",
                  "state": "NY",
                  "postcode": "10017",
                  "country": "US"
                },
                "swiftCode": "CHASUS33",
                "routingNumber": "123456789"
              }
            },
            "logoUrl": "logo",
            "legalCompanyName": "The Merchant",
            "primaryColour": "#000000",
            "customFields": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "includeBeneficiaryAddressInPaymentDetails": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Credit Note ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "status": {
            "description": "Credit Note status",
            "$ref": "#/components/schemas/CreditNoteStatus"
          },
          "invoiceId": {
            "type": "string",
            "description": "Invoice ID",
            "example": "af60cab3-812d-4250-a051-0fb7133a00c7"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV00001"
          },
          "billingScheduleId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "fe2fcd0b-4c53-45c7-b2ae-b6c1a7d21e95"
          },
          "currency": {
            "description": "Credit Note currency",
            "$ref": "#/components/schemas/Currency"
          },
          "issueDate": {
            "type": "string",
            "description": "Issue date",
            "format": "date",
            "example": "2022-09-15"
          },
          "billingPeriodStart": {
            "type": "string",
            "description": "Billing period start",
            "example": "2022-10-01T00:00:00Z"
          },
          "billingPeriodEnd": {
            "type": "string",
            "description": "Billing period end",
            "example": "2022-10-30T00:00:00Z"
          },
          "creditNoteNumber": {
            "type": "string",
            "description": "Credit Note number",
            "example": "CN00001"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "example": "PO123"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the Customer this Credit Note is linked to",
            "example": "61b083e0-1faa-47ca-9aeb-6205da8f6c47"
          },
          "customerEmails": {
            "type": "array",
            "description": "Customer's email addresses, used for sending the Credit Note if provided",
            "example": [
              "customer@example.com",
              "customer.alias@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "customerLegalCompanyName": {
            "type": "string",
            "description": "Customer's legal company name",
            "example": "Facebook"
          },
          "customerBillingAddress": {
            "description": "Customer's billing address",
            "$ref": "#/components/schemas/Address1"
          },
          "customerShippingAddress": {
            "description": "Customer's shipping address",
            "$ref": "#/components/schemas/Address1"
          },
          "memo": {
            "type": "string",
            "description": "Credit Note memo",
            "example": "Thanks"
          },
          "totalTax": {
            "type": "string",
            "description": "Total tax, in decimal format of the Credit Note's currency",
            "example": "2.50"
          },
          "netTotal": {
            "type": "string",
            "description": "Net total, in decimal format of the Credit Note's currency",
            "example": "51.20"
          },
          "grossTotal": {
            "type": "string",
            "description": "Gross total, in decimal format of the Invoice's currency",
            "example": "101.23"
          },
          "metadata": {
            "type": "array",
            "description": "Mapping of key-value pairs to attach to the Credit Note. These are not interpreted by Sequence; they are present for your use alone.",
            "example": [
              {
                "key": "example-label",
                "value": "label-value"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "customerTaxId": {
            "type": "string",
            "description": "Customer's tax ID",
            "example": "TAX123"
          },
          "linkedServices": {
            "type": "array",
            "description": "External services which are linked to this credit note",
            "example": [
              {
                "externalId": "123",
                "externalService": "Xero",
                "syncTime": "2022-06-28T16:47:00Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/LinkInfo"
            }
          },
          "merchantDetails": {
            "description": "Merchant details",
            "$ref": "#/components/schemas/InvoiceMerchantDetails"
          }
        }
      },
      "CreateInvoiceAccountingDateSettingsEndpointCreateInvoiceAccountingDateSettingsRequestModel": {
        "required": [
          "preference"
        ],
        "type": "object",
        "example": {
          "preference": "INVOICE_ISSUE_DATE"
        },
        "properties": {
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "InvoiceAccountingDateSettingsPreference": {
        "type": "string",
        "example": "INVOICE_ISSUE_DATE",
        "enum": [
          "END_OF_BILLING_PERIOD",
          "INTENDED_INVOICE_CREATION_DATE",
          "INVOICE_ISSUE_DATE"
        ]
      },
      "CreateInvoiceAccountingDateSettingsEndpointProductCreateInvoiceAccountingDateSettingsResponseModel": {
        "required": [
          "id",
          "preference",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "preference": "INVOICE_ISSUE_DATE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice Accounting Date Settings ID",
            "example": "78d3a9c0-845d-41f3-a498-d36195d8b7c2"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "InvoiceAccountingDateSettings": {
        "required": [
          "id",
          "preference",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
          "sequenceAccountId": "af9b5988-1d7b-45f6-a188-326df5e59b24",
          "preference": "INTENDED_INVOICE_CREATION_DATE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice Accounting Date Settings ID",
            "example": "78d3a9c0-845d-41f3-a498-d36195d8b7c2"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "af9b5988-1d7b-45f6-a188-326df5e59b24"
          },
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "GetInvoiceAccountingDateSettingsEndpointProductGetInvoiceAccountingDateSettingsResponseModel": {
        "required": [
          "id",
          "preference",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "preference": "INVOICE_ISSUE_DATE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice Accounting Date Settings ID",
            "example": "78d3a9c0-845d-41f3-a498-d36195d8b7c2"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "UpdateInvoiceAccountingDateSettingsEndpointUpdateInvoiceAccountingDateSettingsRequestModel": {
        "required": [
          "preference"
        ],
        "type": "object",
        "example": {
          "preference": "INVOICE_ISSUE_DATE"
        },
        "properties": {
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "UpdateInvoiceAccountingDateSettingsEndpointProductUpdateInvoiceAccountingDateSettingsResponseModel": {
        "required": [
          "id",
          "preference",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "78d3a9c0-845d-41f3-a498-d36195d8b7c2",
          "sequenceAccountId": "68233908-402a-43b4-8952-1c2ab0ef0b25",
          "preference": "INVOICE_ISSUE_DATE"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Invoice Accounting Date Settings ID",
            "example": "78d3a9c0-845d-41f3-a498-d36195d8b7c2"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "68233908-402a-43b4-8952-1c2ab0ef0b25"
          },
          "preference": {
            "description": "Invoice Accounting Date Preference",
            "$ref": "#/components/schemas/InvoiceAccountingDateSettingsPreference"
          }
        }
      },
      "GetOutstandingInvoicesResponseModel": {
        "required": [
          "currency",
          "outstandingNow",
          "overdueFrom0to30days",
          "overdueFrom31to60days",
          "overdueFrom61days",
          "totalAmount"
        ],
        "type": "object",
        "example": {
          "currency": "GBP",
          "totalAmount": 4900,
          "outstandingNow": {
            "numberOfInvoices": 1,
            "amount": 1900
          },
          "overdueFrom0to30days": {
            "numberOfInvoices": 1,
            "amount": 1000
          },
          "overdueFrom31to60days": {
            "numberOfInvoices": 1,
            "amount": 1000
          },
          "overdueFrom61days": {
            "numberOfInvoices": 1,
            "amount": 1000
          }
        },
        "properties": {
          "currency": {
            "description": "Currency",
            "$ref": "#/components/schemas/Currency"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount outstanding",
            "example": 4900
          },
          "outstandingNow": {
            "description": "Invoices which are outstanding but not overdue",
            "$ref": "#/components/schemas/OutstandingInvoicesGroup"
          },
          "overdueFrom0to30days": {
            "description": "Invoices overdue for 0-30 days inclusive",
            "$ref": "#/components/schemas/OutstandingInvoicesGroup"
          },
          "overdueFrom31to60days": {
            "description": "Invoices overdue for 31-60 days inclusive",
            "$ref": "#/components/schemas/OutstandingInvoicesGroup"
          },
          "overdueFrom61days": {
            "description": "Invoices overdue for more than 60 days",
            "$ref": "#/components/schemas/OutstandingInvoicesGroup"
          }
        }
      },
      "OutstandingInvoicesGroup": {
        "required": [
          "amount",
          "numberOfInvoices"
        ],
        "type": "object",
        "example": {
          "numberOfInvoices": 1,
          "amount": 1900
        },
        "properties": {
          "numberOfInvoices": {
            "type": "integer",
            "description": "Number of invoices outstanding for this duration",
            "example": 1
          },
          "amount": {
            "type": "number",
            "description": "Total amount outstanding for these invoices",
            "example": 1900
          }
        }
      },
      "GetInvoicedRevenueResponseModel": {
        "required": [
          "currency",
          "invoicedRevenueByMonth",
          "totalAmount"
        ],
        "type": "object",
        "example": {
          "currency": "GBP",
          "totalAmount": 9400,
          "invoicedRevenueByMonth": [
            {
              "amount": 4900,
              "periodStart": "2024-01-01"
            },
            {
              "amount": 4500,
              "periodStart": "2024-02-01"
            }
          ]
        },
        "properties": {
          "currency": {
            "description": "Currency",
            "$ref": "#/components/schemas/Currency"
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount of invoiced revenue",
            "example": 9400
          },
          "invoicedRevenueByMonth": {
            "type": "array",
            "description": "Invoiced revenue by month",
            "example": [
              {
                "amount": 4900,
                "periodStart": "2024-01-01"
              },
              {
                "amount": 4500,
                "periodStart": "2024-02-01"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/InvoicedRevenueByMonth"
            }
          }
        }
      },
      "InvoicedRevenueByMonth": {
        "required": [
          "amount",
          "periodStart"
        ],
        "type": "object",
        "example": {
          "amount": 4900,
          "periodStart": "2024-01-01"
        },
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of invoiced revenue for this period",
            "example": 4900
          },
          "periodStart": {
            "type": "string",
            "description": "Start of invoice period",
            "format": "date",
            "example": "2024-01-01"
          }
        }
      },
      "UpdateSequenceAccountProductEndpointUpdateSequenceAccountRequest": {
        "required": [
          "alertEmailAddresses"
        ],
        "type": "object",
        "example": {
          "alertEmailAddresses": [
            "alerts@example.com"
          ]
        },
        "properties": {
          "alertEmailAddresses": {
            "type": "array",
            "description": "Email address to which alert notifications will be sent",
            "example": [
              "alerts@example.com"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SequenceAccount": {
        "required": [
          "alertEmailAddresses",
          "companyName",
          "companyNumber",
          "country",
          "createdAt",
          "id",
          "sendCustomerNotifications",
          "sequenceOrganisationId"
        ],
        "type": "object",
        "example": {
          "id": "7e330949-a175-496a-a060-27821656ce34",
          "createdAt": "2022-06-28T16:47:00Z",
          "sequenceOrganisationId": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
          "companyName": "Acme Inc.",
          "companyNumber": "GB123987",
          "country": "GB",
          "sendCustomerNotifications": true,
          "alertEmailAddresses": [
            "alerts@example.com"
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "7e330949-a175-496a-a060-27821656ce34"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          },
          "sequenceOrganisationId": {
            "type": "string",
            "description": "The Sequence Organisation ID that this account belongs to",
            "example": "13448448-ce43-4874-8acf-8ff2a8ca24c1"
          },
          "companyName": {
            "type": "string",
            "description": "The company name that this account belongs to",
            "example": "Acme Inc."
          },
          "companyNumber": {
            "type": "string",
            "description": "The company number of the company which owns this Account",
            "example": "GB123987"
          },
          "country": {
            "description": "The country in which the company who owns this Account is registered",
            "$ref": "#/components/schemas/CountryCode"
          },
          "sendCustomerNotifications": {
            "type": "boolean",
            "description": "True if Sequence should send customer notifications on customer's behalf",
            "example": true
          },
          "alertEmailAddresses": {
            "type": "array",
            "description": "Email address to which alert notifications will be sent",
            "example": [
              "alerts@example.com"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListSequenceUsersResponse": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
              "email": "john@example.xyz",
              "sequenceAccountIds": [
                "83da2ca4-49c7-4d81-9c9a-ba5be11768b0",
                "c0901c87-e1a9-48e9-9e2f-9e05c402dcea"
              ],
              "state": "active"
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Users",
            "example": [
              {
                "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                "email": "john@example.xyz",
                "sequenceAccountIds": [
                  "83da2ca4-49c7-4d81-9c9a-ba5be11768b0",
                  "c0901c87-e1a9-48e9-9e2f-9e05c402dcea"
                ],
                "state": "active"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SequenceUserResponse"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "SequenceUserResponse": {
        "required": [
          "email",
          "id",
          "sequenceAccountIds",
          "state"
        ],
        "type": "object",
        "example": {
          "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
          "email": "person@example.com",
          "sequenceAccountIds": [
            "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
          ],
          "state": "active"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "person@example.com"
          },
          "sequenceAccountIds": {
            "type": "array",
            "description": "Sequence Account IDs",
            "example": [
              "724c4f93-8606-4a38-bfbf-50a7045e4eaa"
            ],
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "description": "User state",
            "example": "active"
          }
        }
      },
      "Self": {
        "required": [
          "sequenceAccounts",
          "sequenceUser"
        ],
        "type": "object",
        "example": {
          "sequenceUser": {
            "id": "918af48c-9f22-4bed-8462-7df0a9772d44",
            "email": "xyz@example.com",
            "createdAt": "2022-06-28T16:47:00Z"
          },
          "sequenceAccounts": [
            "7c8a5a33-4bba-4149-acf0-28877f18117e"
          ],
          "launchDarklyHash": "96053e2731801c3aa3c44c550b72af55c75ef0c17cbb1ae51c038368fd8ce7e6"
        },
        "properties": {
          "sequenceUser": {
            "description": "Sequence User",
            "$ref": "#/components/schemas/SequenceUser"
          },
          "sequenceAccounts": {
            "type": "array",
            "description": "Sequence Account IDs",
            "example": [
              "7c8a5a33-4bba-4149-acf0-28877f18117e"
            ],
            "items": {
              "type": "string"
            }
          },
          "launchDarklyHash": {
            "type": "string",
            "description": "Launch Darkly hash",
            "example": "96053e2731801c3aa3c44c550b72af55c75ef0c17cbb1ae51c038368fd8ce7e6"
          }
        }
      },
      "SequenceUser": {
        "required": [
          "createdAt",
          "email",
          "id"
        ],
        "type": "object",
        "example": {
          "id": "918af48c-9f22-4bed-8462-7df0a9772d44",
          "email": "xyz@example.com",
          "createdAt": "2022-06-28T16:47:00Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "918af48c-9f22-4bed-8462-7df0a9772d44"
          },
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "xyz@example.com"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at",
            "example": "2022-06-28T16:47:00Z"
          }
        }
      },
      "MetabaseDashboardLinkResponse": {
        "required": [
          "metabaseDashboardLink"
        ],
        "type": "object",
        "example": {
          "metabaseDashboardLink": "https://sandbox.sequencehq.com/analytics/dashboard1"
        },
        "properties": {
          "metabaseDashboardLink": {
            "type": "string",
            "description": "Link to the Metabase Dashboard",
            "example": "https://sandbox.sequencehq.com/analytics/dashboard1"
          }
        }
      },
      "CreateOAuthClientRequest": {
        "required": [
          "accountId",
          "scopes"
        ],
        "type": "object",
        "example": {
          "scopes": [
            "product"
          ],
          "accountId": "7e330949-a175-496a-a060-27821656ce34",
          "clientName": "seqhq-7e330949-a175-496a-a060-27821656ce34",
          "pinApiVersion": false
        },
        "properties": {
          "scopes": {
            "type": "array",
            "description": "OAuth client scopes",
            "example": [
              "product"
            ],
            "items": {
              "type": "string"
            }
          },
          "accountId": {
            "type": "string",
            "description": "Sequence Account identifier",
            "example": "7e330949-a175-496a-a060-27821656ce34"
          },
          "clientName": {
            "type": "string",
            "description": "Optional Oauth Client Name. Defaults to accountId if not provided",
            "example": "seqhq-7e330949-a175-496a-a060-27821656ce34"
          },
          "pinApiVersion": {
            "type": "boolean",
            "description": "Indicate whether the API Key should be pinned to an API Version or not",
            "example": false
          }
        }
      },
      "CreateOAuthClientResponse": {
        "required": [
          "id",
          "name",
          "secret"
        ],
        "type": "object",
        "example": {
          "id": "6267e4e5-688e-4eda-92d1-45a4031fe5b2",
          "name": "seqhq-7e330949-a175-496a-a060-27821656ce34",
          "secret": "somerandomsecret"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "OAuth client identifier",
            "example": "6267e4e5-688e-4eda-92d1-45a4031fe5b2"
          },
          "name": {
            "type": "string",
            "description": "OAuth client name",
            "example": "seqhq-7e330949-a175-496a-a060-27821656ce34"
          },
          "secret": {
            "type": "string",
            "description": "OAuth client secret",
            "example": "somerandomsecret"
          }
        }
      },
      "ApiError": {
        "required": [
          "error"
        ],
        "type": "object",
        "example": {
          "error": {
            "type": "validationError",
            "message": "Request data validation failed",
            "errors": [
              {
                "code": "validationError",
                "message": "field_a should not be blank",
                "key": "field_a",
                "errors": []
              }
            ]
          }
        },
        "properties": {
          "error": {
            "description": "Top level wrapper for all errors",
            "$ref": "#/components/schemas/ErrorObject"
          }
        }
      },
      "ErrorObject": {
        "required": [
          "message",
          "type"
        ],
        "type": "object",
        "example": {
          "type": "validationError",
          "message": "Request data validation failed",
          "errors": [
            {
              "code": "validationError",
              "message": "field_a should not be blank",
              "key": "field_a",
              "errors": []
            }
          ]
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the error",
            "example": "validationError"
          },
          "message": {
            "type": "string",
            "description": "Plain text description of the error",
            "example": "Request data validation failed"
          },
          "errors": {
            "type": "array",
            "description": "A list of detailed errors",
            "example": [
              {
                "code": "validationError",
                "message": "field_a should not be blank",
                "key": "field_a",
                "errors": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            }
          }
        }
      },
      "ErrorItem": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "example": {
          "code": "validationError",
          "message": "field_a should not be blank",
          "key": "field_a",
          "errors": []
        },
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the error",
            "example": "validationError"
          },
          "message": {
            "type": "string",
            "description": "Plain text description of the error",
            "example": "field_a should not be blank"
          },
          "key": {
            "type": "string",
            "description": "The target of the error",
            "example": "field_a"
          },
          "errors": {
            "type": "array",
            "description": "List of sub errors",
            "example": [],
            "items": {}
          }
        }
      },
      "UpdateSequenceUserRequest": {
        "required": [
          "sequenceAccountIds"
        ],
        "type": "object",
        "example": {
          "sequenceAccountIds": [
            "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
          ]
        },
        "properties": {
          "sequenceAccountIds": {
            "type": "array",
            "description": "sequenceAccountIds",
            "example": [
              "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateSequenceUserResponse": {
        "required": [
          "id",
          "sequenceAccountIds"
        ],
        "type": "object",
        "example": {
          "id": "ca88f667-a17a-4c84-a8ee-8a4293834ff4",
          "sequenceAccountIds": [
            "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique User ID",
            "example": "ca88f667-a17a-4c84-a8ee-8a4293834ff4"
          },
          "sequenceAccountIds": {
            "type": "array",
            "description": "sequenceAccountIds",
            "example": [
              "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListSequenceAccountsResponse": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "7e330949-a175-496a-a060-27821656ce34",
              "createdAt": "2022-06-28T16:47:00Z",
              "sequenceOrganisationId": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
              "companyName": "Acme Inc.",
              "companyNumber": "GB123987",
              "country": "GB",
              "sendCustomerNotifications": true,
              "alertEmailAddresses": [
                "alerts@example.com"
              ]
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "Sequence Accounts",
            "example": [
              {
                "id": "7e330949-a175-496a-a060-27821656ce34",
                "createdAt": "2022-06-28T16:47:00Z",
                "sequenceOrganisationId": "13448448-ce43-4874-8acf-8ff2a8ca24c1",
                "companyName": "Acme Inc.",
                "companyNumber": "GB123987",
                "country": "GB",
                "sendCustomerNotifications": true,
                "alertEmailAddresses": [
                  "alerts@example.com"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SequenceAccount"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "OAuthClient": {
        "required": [
          "id",
          "name",
          "scopes",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
          "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
          "name": "Client",
          "scopes": [
            "product"
          ],
          "pinnedApiVersion": "2024-01-01"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "OAuth Client identifier",
            "example": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "SHQ Account Identifier",
            "example": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d"
          },
          "name": {
            "type": "string",
            "description": "OAuth client name",
            "example": "Client"
          },
          "scopes": {
            "type": "array",
            "description": "OAuth client scope",
            "example": [
              "product"
            ],
            "items": {
              "type": "string"
            }
          },
          "pinnedApiVersion": {
            "type": "string",
            "description": "Pinned Sequence API version",
            "example": "2024-01-01"
          }
        }
      },
      "GetSequenceAccountIdEndpointGetSequenceAccountIdResponse": {
        "required": [
          "id"
        ],
        "type": "object",
        "example": {
          "id": "13448448-ce43-4874-8acf-8ff2a8ca24c1"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Sequence account ID",
            "example": "13448448-ce43-4874-8acf-8ff2a8ca24c1"
          }
        }
      },
      "ListOAuthClientsEndpointResponseModel": {
        "required": [
          "items",
          "pagination"
        ],
        "type": "object",
        "example": {
          "items": [
            {
              "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
              "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
              "name": "Client",
              "scopes": [
                "product"
              ],
              "pinnedApiVersion": "2024-01-01"
            }
          ],
          "pagination": {
            "after": "ZTMwOWU5NDgtMDg4ZS00ZDc3LWI2NTQtY2Q4NTQ5OGYxNTU1IzE2NTgyNjA4NTYwMzMwMTMjREVTQw==",
            "before": "NjRlZjJmZjktMmJjYi00M2RiLWI0ZDUtOTAxMDU4MjRiMTdmIzE2NTgyNjA3NTk3NTE2ODEjQVND",
            "totalResultSize": 100
          }
        },
        "properties": {
          "items": {
            "type": "array",
            "description": "OAuth Clients",
            "example": [
              {
                "id": "7b1f28b9-a4ad-450b-a0ea-fd647d5109b2",
                "sequenceAccountId": "c9e249d8-5ac9-49af-b9a3-0da9f0946c3d",
                "name": "Client",
                "scopes": [
                  "product"
                ],
                "pinnedApiVersion": "2024-01-01"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/OAuthClient"
            }
          },
          "pagination": {
            "description": "Results pagination",
            "$ref": "#/components/schemas/PaginationResponse"
          }
        }
      },
      "SequenceAccountSettings": {
        "required": [
          "enabledCurrencies",
          "id",
          "sequenceAccountId"
        ],
        "type": "object",
        "example": {
          "id": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6",
          "sequenceAccountId": "5eb477d7-f421-4d30-b99c-757c81021b92",
          "enabledCurrencies": [
            "USD",
            "GBP",
            "EUR"
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "example": "613eed4d-5bdf-4fc1-a40a-aa2540b2cdc6"
          },
          "sequenceAccountId": {
            "type": "string",
            "description": "Sequence Account ID",
            "example": "5eb477d7-f421-4d30-b99c-757c81021b92"
          },
          "enabledCurrencies": {
            "type": "array",
            "description": "Enabled currencies",
            "example": [
              "USD",
              "GBP",
              "EUR"
            ],
            "items": {
              "$ref": "#/components/schemas/Currency1"
            }
          }
        }
      },
      "Currency1": {
        "type": "string",
        "example": "USD",
        "enum": [
          "ARS",
          "AUD",
          "BRL",
          "CAD",
          "CHF",
          "CNY",
          "COP",
          "CZK",
          "DKK",
          "EUR",
          "GBP",
          "HKD",
          "ILS",
          "JPY",
          "KRW",
          "MXN",
          "NOK",
          "NZD",
          "PLN",
          "SEK",
          "SGD",
          "THB",
          "USD",
          "UYU",
          "ZAR"
        ]
      },
      "UpdateSequenceAccountSettingsEndpointRequestModel": {
        "required": [
          "enabledCurrencies"
        ],
        "type": "object",
        "example": {
          "enabledCurrencies": [
            "USD",
            "GBP",
            "EUR"
          ]
        },
        "properties": {
          "enabledCurrencies": {
            "type": "array",
            "description": "Enabled currencies",
            "example": [
              "USD",
              "GBP",
              "EUR"
            ],
            "items": {
              "$ref": "#/components/schemas/Currency1"
            }
          }
        }
      }
    },
    "requestBodies": {}
  }
}